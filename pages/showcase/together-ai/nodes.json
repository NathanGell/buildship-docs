[
  {
    "output": {
      "buildship": { "index": 0 },
      "type": "object",
      "properties": {
        "created": { "buildship": { "index": 2 }, "title": "created", "type": "number" },
        "usage": {
          "buildship": { "index": 6 },
          "title": "usage",
          "type": "object",
          "properties": {
            "completion_tokens": { "buildship": { "index": 1 }, "title": "completion_tokens", "type": "number" },
            "prompt_tokens": { "buildship": { "index": 0 }, "title": "prompt_tokens", "type": "number" },
            "total_tokens": { "buildship": { "index": 2 }, "title": "total_tokens", "type": "number" }
          }
        },
        "model": { "buildship": { "index": 3 }, "title": "model", "type": "string" },
        "id": { "buildship": { "index": 0 }, "title": "id", "type": "string" },
        "choices": {
          "buildship": { "index": 5 },
          "title": "choices",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "finish_reason": { "type": "string" },
              "index": { "type": "integer" },
              "message": {
                "type": "object",
                "properties": { "role": { "type": "string" }, "content": { "type": "string" } }
              },
              "logprobs": { "type": "null" }
            }
          }
        },
        "prompt": { "buildship": { "index": 4 }, "title": "prompt", "type": "array" },
        "object": { "buildship": { "index": 1 }, "title": "object", "type": "string" }
      }
    },
    "integrity": "v3:d943f853c209b865739c6f9de52e270e",
    "inputs": {
      "type": "object",
      "required": ["systemPrompt", "userPrompt", "model", "apiKey"],
      "properties": {
        "systemPrompt": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The contents of the message. (Ex: You are a helpful travel agent)",
          "title": "System Prompt",
          "type": "string"
        },
        "apiKey": {
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Together AI API. [Get your API Key for Together AI] (https://api.together.ai/settings/api-keys).",
          "title": "API Key",
          "type": "string"
        },
        "max_tokens": {
          "default": 512,
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The maximum number of tokens to generate.",
          "title": "Max tokens",
          "type": "number"
        },
        "userPrompt": {
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The contents of the message. (Ex: Tell me about San Francisco)",
          "title": "User Prompt",
          "type": "string"
        },
        "temperature": {
          "default": 0.7,
          "buildship": { "index": 5, "sensitive": false },
          "pattern": "",
          "description": "A decimal number that determines the degree of randomness in the response. A value of 1 will always yield the same output. A temperature less than 1 favors more correctness and is appropriate for question answering or summarization. A value greater than 1 introduces more randomness in the output.",
          "title": "Temperature",
          "type": "number"
        },
        "model": {
          "buildship": {
            "options": [
              { "label": "01-ai Yi Chat (34B)", "value": "zero-one-ai/Yi-34B-Chat" },
              { "label": "OLMo Instruct (7B)", "value": "allenai/OLMo-7B-Instruct" },
              { "label": "OLMo Twin-2T (7B)", "value": "allenai/OLMo-7B-Twin-2T" },
              { "label": "OLMo (7B)", "value": "allenai/OLMo-7B" },
              { "label": "Chronos Hermes (13B)", "value": "Austism/chronos-hermes-13b" },
              { "label": "Dolphin 2.5 Mixtral 8x7b", "value": "cognitivecomputations/dolphin-2.5-mixtral-8x7b" },
              { "label": "DBRX Instruct", "value": "databricks/dbrx-instruct" },
              { "label": "Deepseek Coder Instruct (33B)", "value": "deepseek-ai/deepseek-coder-33b-instruct" },
              { "label": "DeepSeek LLM Chat (67B)", "value": "deepseek-ai/deepseek-llm-67b-chat" },
              { "label": "Platypus2 Instruct (70B)", "value": "garage-bAInd/Platypus2-70B-instruct" },
              { "label": "Gemma Instruct (2B)", "value": "google/gemma-2b-it" },
              { "label": "Gemma Instruct (7B)", "value": "google/gemma-7b-it" },
              { "label": "MythoMax-L2 (13B)", "value": "Gryphe/MythoMax-L2-13b" },
              { "label": "Vicuna v1.5 (13B)", "value": "lmsys/vicuna-13b-v1.5" },
              { "label": "Vicuna v1.5 (7B)", "value": "lmsys/vicuna-7b-v1.5" },
              { "label": "Code Llama Instruct (13B)", "value": "codellama/CodeLlama-13b-Instruct-hf" },
              { "label": "Code Llama Instruct (34B)", "value": "codellama/CodeLlama-34b-Instruct-hf" },
              { "label": "Code Llama Instruct (70B)", "value": "codellama/CodeLlama-70b-Instruct-hf" },
              { "label": "Code Llama Instruct (7B)", "value": "codellama/CodeLlama-7b-Instruct-hf" },
              { "label": "LLaMA-2 Chat (70B)", "value": "meta-llama/Llama-2-70b-chat-hf" },
              { "label": "LLaMA-2 Chat (13B)", "value": "meta-llama/Llama-2-13b-chat-hf" },
              { "label": "LLaMA-2 Chat (7B)", "value": "meta-llama/Llama-2-7b-chat-hf" },
              { "label": "LLaMA-3 Chat (8B)", "value": "meta-llama/Llama-3-8b-chat-hf" },
              { "label": "LLaMA-3 Chat (70B)", "value": "meta-llama/Llama-3-70b-chat-hf" },
              { "label": "Mistral (7B) Instruct", "value": "mistralai/Mistral-7B-Instruct-v0.1" },
              { "label": "Mistral (7B) Instruct v0.2", "value": "mistralai/Mistral-7B-Instruct-v0.2" },
              { "label": "Mistral (7B) Instruct v0.3", "value": "mistralai/Mistral-7B-Instruct-v0.3" },
              { "label": "Mixtral-8x7B Instruct (46.7B)", "value": "mistralai/Mixtral-8x7B-Instruct-v0.1" },
              { "label": "Mixtral-8x22B Instruct (141B)", "value": "mistralai/Mixtral-8x22B-Instruct-v0.1" },
              { "label": "Nous Capybara v1.9 (7B)", "value": "NousResearch/Nous-Capybara-7B-V1p9" },
              {
                "label": "Nous Hermes 2 - Mistral DPO (7B)",
                "value": " DPO (7B)\tNousResearch/Nous-Hermes-2-Mistral-7B-DPO"
              },
              {
                "label": "Nous Hermes 2 - Mixtral 8x7B-DPO (46.7B)",
                "value": "NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO"
              },
              {
                "label": "Nous Hermes 2 - Mixtral 8x7B-SFT (46.7B)",
                "value": "NousResearch/Nous-Hermes-2-Mixtral-8x7B-SFT"
              },
              { "label": "Nous Hermes LLaMA-2 (7B)", "value": "NousResearch/Nous-Hermes-llama-2-7b" },
              { "label": "Nous Hermes Llama-2 (13B)", "value": "NousResearch/Nous-Hermes-Llama2-13b" },
              { "label": "Nous Hermes-2 Yi (34B)", "value": "NousResearch/Nous-Hermes-2-Yi-34B" },
              { "label": "OpenChat 3.5 (7B)", "value": "openchat/openchat-3.5-1210" },
              { "label": "OpenOrca Mistral (7B) 8K", "value": "Open-Orca/Mistral-7B-OpenOrca" },
              { "label": "Qwen 1.5 Chat (0.5B)", "value": "Qwen/Qwen1.5-0.5B-Chat" },
              { "label": "Qwen 1.5 Chat (1.8B)", "value": "Qwen/Qwen1.5-1.8B-Chat" },
              { "label": "Qwen 1.5 Chat (4B)", "value": "Qwen/Qwen1.5-4B-Chat" },
              { "label": "Qwen 1.5 Chat (7B)", "value": "Qwen/Qwen1.5-7B-Chat" },
              { "label": "Qwen 1.5 Chat (14B)", "value": "Qwen/Qwen1.5-14B-Chat" },
              { "label": "Qwen 1.5 Chat (32B)", "value": "Qwen/Qwen1.5-32B-Chat" },
              { "label": "Qwen 1.5 Chat (72B)", "value": "Qwen/Qwen1.5-72B-Chat" },
              { "label": "Qwen 1.5 Chat (110B)", "value": "Qwen/Qwen1.5-110B-Chat" },
              { "label": "Snorkel Mistral PairRM DPO (7B)", "value": "snorkelai/Snorkel-Mistral-PairRM-DPO" },
              { "label": "Snowflake Arctic Instruct", "value": "Snowflake/snowflake-arctic-instruct" },
              { "label": "Alpaca (7B)", "value": "togethercomputer/alpaca-7b" },
              { "label": "OpenHermes-2-Mistral (7B)", "value": "teknium/OpenHermes-2-Mistral-7B" },
              { "label": "OpenHermes-2.5-Mistral (7B)", "value": "teknium/OpenHermes-2p5-Mistral-7B" },
              { "label": "LLaMA-2-7B-32K-Instruct (7B)", "value": "togethercomputer/Llama-2-7B-32K-Instruct" },
              { "label": "RedPajama-INCITE Chat (3B)", "value": "togethercomputer/RedPajama-INCITE-Chat-3B-v1" },
              { "label": "RedPajama-INCITE Chat (7B)", "value": "togethercomputer/RedPajama-INCITE-7B-Chat" },
              { "label": "StripedHyena Nous (7B)", "value": "togethercomputer/StripedHyena-Nous-7B" },
              { "label": "ReMM SLERP L2 (13B)", "value": "Undi95/ReMM-SLERP-L2-13B" },
              { "label": "Toppy M (7B)", "value": "Undi95/Toppy-M-7B" },
              { "label": "WizardLM v1.2 (13B)", "value": "WizardLM/WizardLM-13B-V1.2" },
              { "label": "Upstage SOLAR Instruct v1 (11B)", "value": "upstage/SOLAR-10.7B-Instruct-v1.0" }
            ],
            "index": 3,
            "sensitive": false
          },
          "pattern": "",
          "description": "The name of the embedding model to use. Check out the models here\n[Together.AI Docs - Chat Completions Model](https://docs.together.ai/docs/inference-models)",
          "title": "Model",
          "type": "string",
          "enum": [
            "zero-one-ai/Yi-34B-Chat",
            "allenai/OLMo-7B-Instruct",
            "allenai/OLMo-7B-Twin-2T",
            "allenai/OLMo-7B",
            "Austism/chronos-hermes-13b",
            "cognitivecomputations/dolphin-2.5-mixtral-8x7b",
            "databricks/dbrx-instruct",
            "deepseek-ai/deepseek-coder-33b-instruct",
            "deepseek-ai/deepseek-llm-67b-chat",
            "garage-bAInd/Platypus2-70B-instruct",
            "google/gemma-2b-it",
            "google/gemma-7b-it",
            "Gryphe/MythoMax-L2-13b",
            "lmsys/vicuna-13b-v1.5",
            "lmsys/vicuna-7b-v1.5",
            "codellama/CodeLlama-13b-Instruct-hf",
            "codellama/CodeLlama-34b-Instruct-hf",
            "codellama/CodeLlama-70b-Instruct-hf",
            "codellama/CodeLlama-7b-Instruct-hf",
            "meta-llama/Llama-2-70b-chat-hf",
            "meta-llama/Llama-2-13b-chat-hf",
            "meta-llama/Llama-2-7b-chat-hf",
            "meta-llama/Llama-3-8b-chat-hf",
            "meta-llama/Llama-3-70b-chat-hf",
            "mistralai/Mistral-7B-Instruct-v0.1",
            "mistralai/Mistral-7B-Instruct-v0.2",
            "mistralai/Mistral-7B-Instruct-v0.3",
            "mistralai/Mixtral-8x7B-Instruct-v0.1",
            "mistralai/Mixtral-8x22B-Instruct-v0.1",
            "NousResearch/Nous-Capybara-7B-V1p9",
            " DPO (7B)\tNousResearch/Nous-Hermes-2-Mistral-7B-DPO",
            "NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO",
            "NousResearch/Nous-Hermes-2-Mixtral-8x7B-SFT",
            "NousResearch/Nous-Hermes-llama-2-7b",
            "NousResearch/Nous-Hermes-Llama2-13b",
            "NousResearch/Nous-Hermes-2-Yi-34B",
            "openchat/openchat-3.5-1210",
            "Open-Orca/Mistral-7B-OpenOrca",
            "Qwen/Qwen1.5-0.5B-Chat",
            "Qwen/Qwen1.5-1.8B-Chat",
            "Qwen/Qwen1.5-4B-Chat",
            "Qwen/Qwen1.5-7B-Chat",
            "Qwen/Qwen1.5-14B-Chat",
            "Qwen/Qwen1.5-32B-Chat",
            "Qwen/Qwen1.5-72B-Chat",
            "Qwen/Qwen1.5-110B-Chat",
            "snorkelai/Snorkel-Mistral-PairRM-DPO",
            "Snowflake/snowflake-arctic-instruct",
            "togethercomputer/alpaca-7b",
            "teknium/OpenHermes-2-Mistral-7B",
            "teknium/OpenHermes-2p5-Mistral-7B",
            "togethercomputer/Llama-2-7B-32K-Instruct",
            "togethercomputer/RedPajama-INCITE-Chat-3B-v1",
            "togethercomputer/RedPajama-INCITE-7B-Chat",
            "togethercomputer/StripedHyena-Nous-7B",
            "Undi95/ReMM-SLERP-L2-13B",
            "Undi95/Toppy-M-7B",
            "WizardLM/WizardLM-13B-V1.2",
            "upstage/SOLAR-10.7B-Instruct-v1.0"
          ]
        }
      }
    },
    "meta": {
      "name": "Chat Completions",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ftogether-ai.jpg?alt=media&token=5ecc4888-3ccc-4e04-811b-64b42aa95035"
      },
      "description": "Endpoint for chat and moderation models on Together AI",
      "id": "together-ai-chat-completions"
    },
    "_createdBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocKMu1FBjJ87fq_qF9B_DomtbCbbBKtKJ2-o0w8TlaMGUXI5_A=s96-c",
      "uid": "GgAqBNVokafuftSFPJeUQYFhdax1",
      "displayName": "Henry Moses",
      "email": "moses@rowy.io.rowy",
      "timestamp": { "_seconds": 1717008776, "_nanoseconds": 391000000 }
    },
    "type": "script",
    "integrations": [],
    "script": "export default async function getTravelDetails({\n    systemPrompt,\n    userPrompt,\n    model,\n    apiKey\n}) {\n    const data = {\n        model: model,\n        max_tokens: 512,\n        stop: [\"</s>\", \"[/INST]\"],\n        temperature: 0.7,\n        top_p: 0.7,\n        top_k: 50,\n        repetition_penalty: 1,\n        messages: [{\n                role: \"system\",\n                content: systemPrompt\n            },\n            {\n                role: \"user\",\n                content: userPrompt\n            }\n        ]\n    };\n\n    const response = await fetch('https://api.together.xyz/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'authorization': `Bearer ${apiKey}`,\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n\n    const responseJson = await response.json();\n    return responseJson;\n}",
    "dependencies": {},
    "group": [
      {
        "uid": "together-ai",
        "name": "TogetherAI",
        "description": "Nodes that interact with TogetherAI. Which allows you to run leading open-source models like Llama-3 and more",
        "id": "TogetherAI",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ftogether-ai.jpg?alt=media&token=5ecc4888-3ccc-4e04-811b-64b42aa95035"
      }
    ],
    "groupInfo": "TogetherAI",
    "category": ["Integrations"],
    "live": true,
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/together-ai-chat-completions/1.0.2/build.cjs",
    "version": "1.0.2",
    "_updatedBy": {
      "uid": "wa5yCc5zluX33SfLRWIdIdsawDG2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocKMu1FBjJ87fq_qF9B_DomtbCbbBKtKJ2-o0w8TlaMGUXI5_A=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Henry Moses",
      "email": "moses@rowy.io.rowy",
      "timestamp": { "_seconds": 1717100366, "_nanoseconds": 876000000 }
    },
    "syncIndex": {
      "ranBy": "moses@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1717100366, "_nanoseconds": 893000000 }
    },
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 71000000 },
    "usageCounter": 9
  },
  {
    "output": {
      "buildship": { "index": 0 },
      "type": "object",
      "properties": {
        "created": { "buildship": { "index": 2 }, "title": "created", "type": "number" },
        "usage": {
          "buildship": { "index": 6 },
          "title": "usage",
          "type": "object",
          "properties": {
            "completion_tokens": { "buildship": { "index": 1 }, "title": "completion_tokens", "type": "number" },
            "prompt_tokens": { "buildship": { "index": 0 }, "title": "prompt_tokens", "type": "number" },
            "total_tokens": { "buildship": { "index": 2 }, "title": "total_tokens", "type": "number" }
          }
        },
        "model": { "buildship": { "index": 3 }, "title": "model", "type": "string" },
        "id": { "buildship": { "index": 0 }, "title": "id", "type": "string" },
        "choices": {
          "buildship": { "index": 5 },
          "title": "choices",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "finish_reason": { "type": "string" },
              "index": { "type": "integer" },
              "text": { "type": "string" },
              "logprobs": { "type": "null" }
            }
          }
        },
        "prompt": { "buildship": { "index": 4 }, "title": "prompt", "type": "array" },
        "object": { "buildship": { "index": 1 }, "title": "object", "type": "string" }
      }
    },
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/together-ai-completions/1.0.0/build.cjs",
    "meta": {
      "name": "Completions",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ftogether-ai.jpg?alt=media&token=5ecc4888-3ccc-4e04-811b-64b42aa95035"
      },
      "description": "Endpoint for language models on Together AI",
      "id": "together-ai-completions"
    },
    "_createdBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocKMu1FBjJ87fq_qF9B_DomtbCbbBKtKJ2-o0w8TlaMGUXI5_A=s96-c",
      "uid": "GgAqBNVokafuftSFPJeUQYFhdax1",
      "displayName": "Henry Moses",
      "email": "moses@rowy.io.rowy",
      "timestamp": { "_seconds": 1717008753, "_nanoseconds": 941000000 }
    },
    "type": "script",
    "integrations": [],
    "version": "1.0.0",
    "script": "export default async function completions({\n    prompt,\n    model,\n    apiKey,\n    max_tokens,\n}) {\n    const data = {\n      \"model\": model,\n      \"prompt\": prompt,\n      \"max_tokens\": max_tokens,\n    }\n  \n    const response = await fetch('https://api.together.xyz/v1/completions', {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'authorization': `Bearer ${apiKey}`,\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n\n    const responseJson = await response.json();\n    return responseJson;\n}",
    "dependencies": {},
    "group": [
      {
        "uid": "together-ai",
        "name": "TogetherAI",
        "description": "Nodes that interact with TogetherAI. Which allows you to run leading open-source models like Llama-3 and more",
        "id": "TogetherAI",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ftogether-ai.jpg?alt=media&token=5ecc4888-3ccc-4e04-811b-64b42aa95035"
      }
    ],
    "groupInfo": "TogetherAI",
    "category": ["Integrations"],
    "live": true,
    "integrity": "v3:eae5ac6d6feb7d39950e345609697a45",
    "inputs": {
      "type": "object",
      "properties": {
        "apiKey": {
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "TogetherAI API. [Get API here]\n(https://api.together.ai/settings/api-keys).",
          "title": "API Key",
          "type": "string"
        },
        "max_tokens": {
          "default": 0,
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The maximum number of tokens to generate.",
          "title": "Max Tokens",
          "type": "number"
        },
        "model": {
          "buildship": {
            "options": [
              { "label": "01-ai Yi Base (34B)", "value": "zero-one-ai/Yi-34B" },
              { "label": "01-ai Yi Base (6B)", "value": "zero-one-ai/Yi-6B" },
              { "label": "Mixtral 8X22B", "value": "mistralai/Mixtral-8x22B" },
              { "label": "Gemma (2B)", "value": "google/gemma-2b" },
              { "label": "Gemma (7B)", "value": "google/gemma-7b" },
              { "label": "LLaMA-2 (70B)", "value": "meta-llama/Llama-2-70b-hf" },
              { "label": "LLaMA-2 (13B)", "value": "meta-llama/Llama-2-13b-hf" },
              { "label": "LLaMA-2 (7B)", "value": "meta-llama/Llama-2-7b-hf" },
              { "label": "Microsoft Phi-2", "value": "microsoft/phi-2" },
              { "label": "NexusRaven (13B)", "value": "Nexusflow/NexusRaven-V2-13B" },
              { "label": "Qwen 1.5 (0.5B)", "value": "Qwen/Qwen1.5-0.5B" },
              { "label": "Qwen 1.5 (1.8B)", "value": " (1.8B)\tQwen/Qwen1.5-1.8B" },
              { "label": "Qwen 1.5 (4B)", "value": "Qwen/Qwen1.5-4B" },
              { "label": "Qwen 1.5 (7B)", "value": "Qwen/Qwen1.5-7B" },
              { "label": "Qwen 1.5 (14B)", "value": "Qwen/Qwen1.5-14B" },
              { "label": "Qwen 1.5 (32B)", "value": "Qwen/Qwen1.5-32B" },
              { "label": "Qwen 1.5 (72B)", "value": "Qwen/Qwen1.5-72B" },
              { "label": "GPT-JT-Moderation (6B)", "value": "togethercomputer/GPT-JT-Moderation-6B" },
              { "label": "LLaMA-2-32K (7B)", "value": "togethercomputer/LLaMA-2-7B-32K" },
              { "label": "RedPajama-INCITE (3B)", "value": "togethercomputer/RedPajama-INCITE-Base-3B-v1" },
              { "label": "RedPajama-INCITE (7B)", "value": "togethercomputer/RedPajama-INCITE-7B-Base" },
              {
                "label": "RedPajama-INCITE Instruct (3B)",
                "value": "togethercomputer/RedPajama-INCITE-Instruct-3B-v1"
              },
              { "label": "RedPajama-INCITE Instruct (7B)", "value": "togethercomputer/RedPajama-INCITE-7B-Instruct" },
              { "label": "StripedHyena Hessian (7B)", "value": "togethercomputer/StripedHyena-Hessian-7B" },
              { "label": "Mistral (7B)", "value": "mistralai/Mistral-7B-v0.1" },
              { "label": "Mixtral-8x7B (46.7B)", "value": "mistralai/Mixtral-8x7B-v0.1" }
            ],
            "index": 2,
            "sensitive": false
          },
          "pattern": "",
          "description": "The name of the embedding model to use. Check out the models here\n[Together.AI Docs - Completion Models](https://docs.together.ai/docs/inference-models)",
          "title": "Model",
          "type": "string",
          "enum": [
            "zero-one-ai/Yi-34B",
            "zero-one-ai/Yi-6B",
            "mistralai/Mixtral-8x22B",
            "google/gemma-2b",
            "google/gemma-7b",
            "meta-llama/Llama-2-70b-hf",
            "meta-llama/Llama-2-13b-hf",
            "meta-llama/Llama-2-7b-hf",
            "microsoft/phi-2",
            "Nexusflow/NexusRaven-V2-13B",
            "Qwen/Qwen1.5-0.5B",
            " (1.8B)\tQwen/Qwen1.5-1.8B",
            "Qwen/Qwen1.5-4B",
            "Qwen/Qwen1.5-7B",
            "Qwen/Qwen1.5-14B",
            "Qwen/Qwen1.5-32B",
            "Qwen/Qwen1.5-72B",
            "togethercomputer/GPT-JT-Moderation-6B",
            "togethercomputer/LLaMA-2-7B-32K",
            "togethercomputer/RedPajama-INCITE-Base-3B-v1",
            "togethercomputer/RedPajama-INCITE-7B-Base",
            "togethercomputer/RedPajama-INCITE-Instruct-3B-v1",
            "togethercomputer/RedPajama-INCITE-7B-Instruct",
            "togethercomputer/StripedHyena-Hessian-7B",
            "mistralai/Mistral-7B-v0.1",
            "mistralai/Mixtral-8x7B-v0.1"
          ]
        },
        "prompt": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "A string providing context for the model to complete. Ex: List all of the states in the USA and their capitals in a table.",
          "type": "string",
          "title": "Prompt"
        }
      },
      "required": ["userPrompt", "prompt", "model", "apiKey"]
    },
    "_updatedBy": {
      "uid": "wa5yCc5zluX33SfLRWIdIdsawDG2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocKMu1FBjJ87fq_qF9B_DomtbCbbBKtKJ2-o0w8TlaMGUXI5_A=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Henry Moses",
      "email": "moses@rowy.io.rowy",
      "timestamp": { "_seconds": 1717100369, "_nanoseconds": 648000000 }
    },
    "syncIndex": {
      "ranBy": "moses@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1717100369, "_nanoseconds": 667000000 }
    },
    "failCount": 1,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 71000000 },
    "usageCounter": 6
  },
  {
    "output": {
      "buildship": { "index": 0 },
      "type": "object",
      "properties": {
        "data": {
          "buildship": { "index": 1 },
          "title": "data",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "index": { "type": "integer" },
              "embedding": { "type": "array", "items": { "type": "number" } },
              "object": { "type": "string" }
            }
          }
        },
        "model": { "buildship": { "index": 2 }, "title": "model", "type": "string" },
        "object": { "buildship": { "index": 0 }, "title": "object", "type": "string" }
      }
    },
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/together-ai-embeddings/1.0.1/build.cjs",
    "_createdBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocKMu1FBjJ87fq_qF9B_DomtbCbbBKtKJ2-o0w8TlaMGUXI5_A=s96-c",
      "uid": "GgAqBNVokafuftSFPJeUQYFhdax1",
      "displayName": "Henry Moses",
      "email": "moses@rowy.io.rowy",
      "timestamp": { "_seconds": 1717008745, "_nanoseconds": 513000000 }
    },
    "type": "script",
    "integrations": [],
    "version": "1.0.1",
    "script": "export default async function Embeddings({\n    model,\n    apiKey,\n    input\n}) {\n    const data = {\n        model: model,\n        input: input\n    }\n\n    const response = await fetch('https://api.together.xyz/v1/embeddings', {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'authorization': `Bearer ${apiKey}`,\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n\n    const responseJson = await response.json();\n    return responseJson;\n}",
    "dependencies": {},
    "group": [
      {
        "uid": "together-ai",
        "name": "TogetherAI",
        "description": "Nodes that interact with TogetherAI. Which allows you to run leading open-source models like Llama-3 and more",
        "id": "TogetherAI",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ftogether-ai.jpg?alt=media&token=5ecc4888-3ccc-4e04-811b-64b42aa95035"
      }
    ],
    "groupInfo": "TogetherAI",
    "category": ["Integrations"],
    "live": true,
    "integrity": "v3:15e3a4e4e1d90e205683fdf0dc3b41e9",
    "inputs": {
      "type": "object",
      "required": ["systemPrompt", "model", "input", "apiKey"],
      "properties": {
        "input": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The user prompt to be used in the API request",
          "type": "string",
          "title": "Input"
        },
        "apiKey": {
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "TogetherAI API\n[Get API here]\n(https://api.together.ai/settings/api-keys).",
          "title": "API Key",
          "type": "string"
        },
        "model": {
          "buildship": {
            "options": [
              { "label": "M2-BERT-80M-2K-Retrieval", "value": "togethercomputer/m2-bert-80M-2k-retrieval" },
              { "label": "M2-BERT-80M-8K-Retrieval", "value": "ogethercomputer/m2-bert-80M-8k-retrieval" },
              { "label": "M2-BERT-80M-32K-Retrieval", "value": "togethercomputer/m2-bert-80M-32k-retrieval" },
              { "label": "UAE-Large-v1", "value": "WhereIsAI/UAE-Large-V1" },
              { "label": "BGE-Large-EN-v1.5", "value": "BAAI/bge-large-en-v1.5" },
              { "label": "BGE-Base-EN-v1.5", "value": "BAAI/bge-base-en-v1.5" },
              { "label": "Sentence-BERT", "value": "sentence-transformers/msmarco-bert-base-dot-v5" },
              { "label": "BERT", "value": "bert-base-uncased" }
            ],
            "index": 2,
            "sensitive": false
          },
          "pattern": "",
          "description": "The model to be used for the API request",
          "type": "string",
          "title": "Model",
          "enum": [
            "togethercomputer/m2-bert-80M-2k-retrieval",
            "ogethercomputer/m2-bert-80M-8k-retrieval",
            "togethercomputer/m2-bert-80M-32k-retrieval",
            "WhereIsAI/UAE-Large-V1",
            "BAAI/bge-large-en-v1.5",
            "BAAI/bge-base-en-v1.5",
            "sentence-transformers/msmarco-bert-base-dot-v5",
            "bert-base-uncased"
          ]
        }
      }
    },
    "meta": {
      "name": "Embeddings",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ftogether-ai.jpg?alt=media&token=5ecc4888-3ccc-4e04-811b-64b42aa95035"
      },
      "description": "Endpoint for embedding models on Together AI\n\n[Check out the documentation](https://docs.together.ai/reference/embeddings).",
      "id": "together-ai-embeddings"
    },
    "_updatedBy": {
      "uid": "wa5yCc5zluX33SfLRWIdIdsawDG2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocKMu1FBjJ87fq_qF9B_DomtbCbbBKtKJ2-o0w8TlaMGUXI5_A=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Henry Moses",
      "email": "moses@rowy.io.rowy",
      "timestamp": { "_seconds": 1717100371, "_nanoseconds": 813000000 }
    },
    "syncIndex": {
      "ranBy": "moses@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1717100371, "_nanoseconds": 828000000 }
    },
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 71000000 },
    "usageCounter": 5
  }
]
