[
  {
    "output": {
      "buildship": {},
      "type": "object",
      "title": "Create File",
      "properties": {
        "success": {
          "buildship": {},
          "description": "Indicates whether the text was successfully appended to the file",
          "type": "boolean",
          "title": "Success"
        }
      }
    },
    "featured": true,
    "meta": {
      "name": "Create File",
      "icon": {
        "svg": "<path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4H8c-1.1 0-1.99.9-1.99 2L6 21c0 1.1.89 2 1.99 2H19c1.1 0 2-.9 2-2V11l-6-6zM8 21V7h6v5h5v9H8z\"></path>",
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252"
      },
      "description": "Create a file with the given content, creating the folder if it doesn't exist",
      "id": "create-file"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "id": "0IAjU2tekQHjibkvicpC",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      }
    ],
    "dependencies": { "path": "0.12.7", "fs": "0.0.1-security" },
    "inputs": {
      "type": "object",
      "required": ["content", "filePath"],
      "properties": {
        "filePath": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The path of the file to be created.\n\nQUICK TIP ðŸ’¡: Use the **Generate Public Download URL** node to get your image from the specified path.",
          "title": "File Path",
          "type": "string"
        },
        "content": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The content to be written in the file.",
          "title": "Content",
          "type": "string"
        }
      }
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701422704, "_nanoseconds": 339000000 }
    },
    "t": 236,
    "syncAllAtOnce": "836",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 475000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "create-file",
    "integrations": [],
    "integrity": "v3:d429bf6a8256258dabfcb28b27d9dd37",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/create-file/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:d84f010a61d234f580b216d480a6902c",
      "libNodeRefId": "@buildship/create-file",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/create-file/1.0.0/build.cjs",
      "version": "1.0.0"
    },
    "version": "1.1.0",
    "script": "import { promises as fs } from \"fs\";\nimport { dirname } from \"path\";\n\nexport default async function createFile({ filePath, content }: NodeInputs, { req }: NodeScriptOptions) : NodeOutput  {\n  const dir = dirname(process.env.BUCKET_FOLDER_PATH + filePath);\n  try {\n    await fs.mkdir(dir, {\n      recursive: true,\n    });\n  } catch (error) {\n    if (error.code !== \"EEXIST\") {\n      throw error;\n    }\n  }\n\n  await fs.writeFile(process.env.BUCKET_FOLDER_PATH + filePath, content);\n  return {\n    success: true,\n  };\n}\n",
    "usageCounter": 291,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 44000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "Whether the file was successfully deleted or not",
      "type": "boolean",
      "title": "File Deletion Status"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "inputs": {
      "type": "object",
      "properties": {
        "filePath": {
          "buildship": { "index": 1 },
          "description": "The path of the file in the GCP bucket.\n\nEXAMPLE: If your file lies in the root directory, directly write the file name along with the extension: `album.png`.",
          "title": "File Path",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      },
      "required": ["filePath", "bucketId"]
    },
    "meta": {
      "name": "Delete File",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Checks if a file exists in your GCP storage bucket and deletes it",
      "id": "gcp-storage-delete-file"
    },
    "dependencies": { "@google-cloud/storage": "7.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701503852, "_nanoseconds": 801000000 }
    },
    "t": 276,
    "syncAllAtOnce": "925",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-delete-file",
    "integrations": [],
    "integrity": "v3:399fa3f9981b09281f2917753a9f4069",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-delete-file/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:36961119bdb9c76aad26afa8794fbe48",
      "libNodeRefId": "@buildship/gcp-storage-delete-file",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-delete-file/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function deleteGcpStorageFile({\n    bucketId,\n    filePath\n}: NodeInputs) : NodeOutput  {\n    try {\n      const storage = new Storage();\n      const bucket = storage.bucket(bucketId);\n      const file = bucket.file(filePath);\n      if (await file.exists()) {\n          await file.delete();\n          return \"File Successfully Deleted!\";\n      }\n    }\n    catch(e){\n      return e\n    }\n}",
    "usageCounter": 51,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "output": {},
    "type": "script",
    "category": ["Integrations"],
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "live": true,
    "inputs": {
      "type": "object",
      "required": ["folderPath", "bucketId"],
      "properties": {
        "folderPath": {
          "buildship": { "index": 1 },
          "description": "The path of the folder in the GCP bucket.\n\nEXAMPLE: Let's say you wish to delete the `icons` folder inside the `public` folder in your root directory, you can add the folder path as: `public/icons`.",
          "title": "Folder Path",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Delete GCP Folder",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Deletes a folder in GCP Storage if it exists",
      "id": "gcp-storage-delete-folder"
    },
    "dependencies": { "@google-cloud/storage": "7.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701504196, "_nanoseconds": 435000000 }
    },
    "t": 208,
    "syncAllAtOnce": "1023",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-delete-folder",
    "integrations": [],
    "integrity": "v3:5a092180359eaca17ce557f44d8fdb7a",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-delete-folder/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:6b3da3da3baec68dd6791c587bbbd755",
      "libNodeRefId": "@buildship/gcp-storage-delete-folder",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-delete-folder/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function deleteGcpStorageFolder({\n    bucketId,\n    folderPath\n}: NodeInputs) : NodeOutput  {\n    try{\n        const storage = new Storage();\n        const bucket = storage.bucket(bucketId);\n        const files = await bucket.getFiles({\n            prefix: folderPath\n        });\n        files[0].forEach(file => file.delete());\n        return \"Folder successfully deleted\";\n    }\n    catch(e){\n        return e;\n    }\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 },
    "usageCounter": 18
  },
  {
    "output": {
      "buildship": {},
      "type": "object",
      "properties": {
        "downloadURL": {
          "buildship": {},
          "description": "The publicly accessible download URL of the file",
          "type": "string",
          "title": "Download URL"
        }
      }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "filePath": {
          "buildship": { "index": 1 },
          "description": "The path of the file in the GCP bucket.\n\nEXAMPLE: If your file lies in the root directory, directly write the file name along with the extension: `album.png`.",
          "title": "File Path",
          "type": "string"
        },
        "bucketId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our detailed setup blog.",
          "title": "Bucket ID",
          "type": "string"
        }
      },
      "required": ["bucketId", "filePath"]
    },
    "meta": {
      "name": "Generate Public Download URL",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Generate a publicly accessible download URL from a Google Cloud Storage file path.",
      "id": "gcp-storage-download-url"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "id": "0IAjU2tekQHjibkvicpC",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      }
    ],
    "dependencies": { "@google-cloud/storage": "7.6.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701433946, "_nanoseconds": 97000000 }
    },
    "t": 154,
    "syncAllAtOnce": "872",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-download-url",
    "integrations": [],
    "integrity": "v3:246a34b64c1f00700be5421d3a681c16",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-download-url/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:ce61550381725a22592545ddb9e010e1",
      "libNodeRefId": "@buildship/gcp-storage-download-url",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-download-url/1.0.0/build.cjs",
      "version": "1.0.0"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\n\nexport default async function generatePublicDownloadURL({ \n  filePath,\n  bucketId\n  }: NodeInputs) : NodeOutput  {\n  if (filePath.startsWith(\"/\")){\n    filePath = filePath.replace(\"/\",'')\n  }\n  const storage = new Storage();\n  const file = storage.bucket(bucketId).file(filePath);\n  await file.makePublic();\n  const url = `https://storage.googleapis.com/${bucketId}/${filePath}`;\n  return { downloadURL: url };\n}",
    "failCount": 13,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 },
    "usageCounter": 178
  },
  {
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "dependencies": { "@google-cloud/storage": "7.6.0" },
    "output": {
      "buildship": {},
      "description": "The result of the file rename operation",
      "type": "object",
      "title": "Rename Result",
      "properties": { "message": { "buildship": { "index": 0 }, "type": "string", "title": "Message" } }
    },
    "inputs": {
      "type": "object",
      "required": ["filePath", "newName", "bucketId"],
      "properties": {
        "newName": {
          "buildship": { "index": 2 },
          "description": "The new name for the file.\n\nExample: `image/zzzzzzzzzzzzzzzzzzzy/image/new-image.png`",
          "title": "New Name",
          "type": "string"
        },
        "filePath": {
          "buildship": { "index": 1 },
          "description": "The path of the file in the GCP bucket.\n\nExample: `image/zzzzzzzzzzzzzzzzzzzy/image/og-image.png`",
          "title": "File Path",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "File Rename",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Checks if a file exists at a given path in GCP storage and renames it",
      "id": "gcp-storage-file-rename"
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701433401, "_nanoseconds": 495000000 }
    },
    "t": 308,
    "syncAllAtOnce": "880",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-file-rename",
    "integrations": [],
    "integrity": "v3:9854fedd7a8e8dfcc754a183353d81d7",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-file-rename/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:030a6bbe94bafecc19a9ee26a9c57057",
      "libNodeRefId": "@buildship/gcp-storage-file-rename",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-file-rename/1.0.0/build.cjs",
      "version": "1.0.0"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function gcpStorageFileRename({\n    bucketId,\n    filePath,\n    newName\n}: NodeInputs) : NodeOutput  {\n    const storage = new Storage();\n    const bucket = storage.bucket(bucketId);\n    const file = bucket.file(filePath);\n    if (!(await file.exists())[0]) {\n        throw new Error('File does not exist');\n    }\n    await file.rename(newName);\n    return {\n        message: 'File renamed successfully'\n    };\n}",
    "usageCounter": 16,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "output": { "buildship": {}, "description": "The status of the operation", "type": "string", "title": "Status" },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "id": "0IAjU2tekQHjibkvicpC",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      }
    ],
    "inputs": {
      "type": "object",
      "required": ["oldFolderName", "newFolderName", "bucketId"],
      "properties": {
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        },
        "oldFolderName": {
          "buildship": { "index": 1 },
          "description": "The current name of the folder.\n\nEXAMPLE: If your folder lies in the root directory, directly write the name: `folder-name`.",
          "title": "Old Folder Name",
          "type": "string"
        },
        "newFolderName": {
          "buildship": { "index": 2 },
          "description": "The new name for the folder\n\nEXAMPLE: Let's say we need to migrate the `folder-name` folder, inside a `public` folder and rename it as `assets`, we can add the new folder name as: `public/assets`.",
          "title": "New Folder Name",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Rename GCP Folder",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Renames a given folder in Google Cloud Storage if it exists.",
      "id": "gcp-storage-folder-rename"
    },
    "dependencies": { "@google-cloud/storage": "7.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701445196, "_nanoseconds": 987000000 }
    },
    "t": 143,
    "syncAllAtOnce": "882",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-folder-rename",
    "integrations": [],
    "integrity": "v3:c0231e84c84c681ac31b828c76c920ed",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-folder-rename/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:4cff398999de35f22af759266f08d9de",
      "libNodeRefId": "@buildship/gcp-storage-folder-rename",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-folder-rename/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function renameGcpStorageFolder({\n    bucketId,\n    oldFolderName,\n    newFolderName\n}: NodeInputs) : NodeOutput  {\n    try{\n      const storage = new Storage();\n      const bucket = storage.bucket(bucketId);\n      const [files] = await bucket.getFiles({\n          prefix: oldFolderName\n      });\n      if (files.length === 0) {\n          throw new Error('Folder does not exist');\n      }\n      files.forEach(async file => {\n          await file.move(`${newFolderName}/${file.name.split('/').pop()}`);\n      });\n      return \"Folder successfully renamed!\"\n    }\n    catch(e){\n      return e;\n    }\n}",
    "usageCounter": 7,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "The names of the files in the GCP storage bucket",
      "type": "array",
      "title": "File Names"
    },
    "meta": {
      "name": "List GCP Storage Files",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "List files in the specified GCP storage bucket directory",
      "id": "gcp-storage-list-files"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "dependencies": { "@google-cloud/storage": "7.6.0" },
    "inputs": {
      "type": "object",
      "required": ["bucketId"],
      "properties": {
        "folderPath": {
          "buildship": { "index": 1 },
          "description": "The path to the folder in the GCP bucket.\n\nEXAMPLE: If you wish to list the contents of the root directory, leave this field blank.",
          "title": "Folder Path",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      }
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701443654, "_nanoseconds": 349000000 }
    },
    "t": 219,
    "syncAllAtOnce": "909",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-list-files",
    "integrations": [],
    "integrity": "v3:9f5b737acb7f3142a3d2e2dd2e02aae7",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-list-files/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:f02b06b2af52c0dd5d873d24b12320ff",
      "libNodeRefId": "@buildship/gcp-storage-list-files",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-list-files/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function listGCPStorageFiles({\n    bucketId,\n    folderPath\n}: NodeInputs) : NodeOutput  {\n    const storage = new Storage();\n    const bucket = storage.bucket(bucketId);\n    const [files] = await bucket.getFiles({\n        prefix: folderPath\n    });\n    return files.map(file => file.name);\n}",
    "usageCounter": 157,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "output": {
      "buildship": {},
      "description": "The status of the operation",
      "title": "Status",
      "type": "object",
      "properties": { "status": { "buildship": { "index": 0 }, "type": "string", "key": "status" } }
    },
    "inputs": {
      "type": "object",
      "required": ["filePath", "bucketId", "destinationPath"],
      "properties": {
        "filePath": {
          "buildship": { "index": 1 },
          "description": "The path of the file in the bucket.\n\nEXAMPLE: If the file is currently available in the root directory, simply write the name of the file: `group-image.png`.",
          "title": "File Path",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        },
        "destinationPath": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The path to move the file to in the bucket.\n\nEXAMPLE: Let's say we wish to move the file to a `test` folder inside the root directory and rename the file as `image`: `test/image.png`.",
          "title": "Destination Path",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Move File",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Checks if a file exists in the Google Cloud Storage and if it does, moves it to a different location.",
      "id": "gcp-storage-move"
    },
    "dependencies": { "@google-cloud/storage": "7.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701442438, "_nanoseconds": 686000000 }
    },
    "t": 306,
    "syncAllAtOnce": "881",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-move",
    "integrations": [],
    "integrity": "v3:6994c3a1fad4cc78850159473fe4b7df",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-move/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:3f4b330322d98852e57ad119541c714d",
      "libNodeRefId": "@buildship/gcp-storage-move",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-move/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function checkAndMoveFile({\n    bucketId,\n    filePath,\n    destinationPath\n}: NodeInputs) : NodeOutput  {\n    try{\n      const storage = new Storage();\n      const bucket = storage.bucket(bucketId);\n      const file = bucket.file(filePath);\n      const exists = await file.exists();\n      if (exists[0]) {\n          await file.move(destinationPath);\n          return {\n              status: 'File moved successfully'\n          };\n      } else {\n          return {\n              status: 'File does not exist'\n          };\n      }\n    }\n  catch(e){\n    return e;\n  }\n}",
    "usageCounter": 14,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "output": { "buildship": {}, "description": "The result of the operation", "type": "string", "title": "Result" },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "id": "0IAjU2tekQHjibkvicpC",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      }
    ],
    "inputs": {
      "type": "object",
      "required": ["sourcePath", "destinationPath", "bucketId"],
      "properties": {
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        },
        "destinationPath": {
          "buildship": { "index": 2 },
          "description": "The new name for the folder\n\nEXAMPLE: Let's say we need to migrate the `folder-name` folder, inside a `public` folder, we can add the new folder name as: `public/folder-name`.",
          "type": "string",
          "title": "Destination Path"
        },
        "sourcePath": {
          "buildship": { "index": 1 },
          "description": "The name of the folder to be moved.\n\nEXAMPLE: If your folder lies in the root directory, directly write the name: `folder-name`.",
          "title": "Source Path",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Move Folder",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Check if a folder exists in the GCP storage and move it along with its contents to a different path.",
      "id": "gcp-storage-move-folder"
    },
    "dependencies": { "@google-cloud/storage": "7.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701444412, "_nanoseconds": 860000000 }
    },
    "t": 257,
    "syncAllAtOnce": "1025",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-move-folder",
    "integrations": [],
    "integrity": "v3:eafbcea35bd78cdfed44b24f8242423c",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-move-folder/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:a1aa63725787ec1692b0c96154beec21",
      "libNodeRefId": "@buildship/gcp-storage-move-folder",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-move-folder/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nexport default async function moveGcpStorageFolder({\n    sourcePath,\n    destinationPath,\n    bucketId\n}: NodeInputs) : NodeOutput  {\n    const storage = new Storage();\n    const bucket = storage.bucket(bucketId);\n    const [files] = await bucket.getFiles({\n        prefix: sourcePath\n    });\n    if (!files.length) {\n        throw new Error('Folder does not exist');\n    }\n    await Promise.all(files.map(file => {\n        const destination = bucket.file(destinationPath + '/' + file.name);\n        return file.move(destination);\n    }));\n    return 'Folder moved successfully';\n}",
    "usageCounter": 7,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "The public URL of the uploaded file",
      "type": "string",
      "title": "Public URL"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "inputs": {
      "type": "object",
      "properties": {
        "fileName": {
          "buildship": { "index": 2 },
          "description": "The name of the output file along with the file extension. (For Example: `output.png`)",
          "type": "string",
          "title": "File Name"
        },
        "base64": {
          "buildship": { "index": 1 },
          "pattern": "",
          "description": "The Base64 string of the file to upload.",
          "title": "Base64 File",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      },
      "required": ["fileName", "base64", "bucketId"]
    },
    "dependencies": { "stream": "0.0.2", "@google-cloud/storage": "7.7.0" },
    "meta": {
      "name": "Upload Base64 File",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Uploads a Base64 file to Google Cloud Storage and returns the public URL",
      "id": "gcp-storage-upload-base64"
    },
    "t": 138,
    "syncAllAtOnce": "879",
    "integrations": [],
    "syncIndex": {
      "ranBy": "gaurav@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708370277, "_nanoseconds": 79000000 }
    },
    "deployToBucket": {
      "ranBy": "gaurav@rowy.io.rowy",
      "completedAt": { "_seconds": 1708370288, "_nanoseconds": 74000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "integrity": "v3:7284eaf0f013febeb9603d5e0f0b53b4",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-upload-base64/1.1.0/build.cjs",
    "id": "gcp-storage-upload-base64",
    "_libRef": {
      "integrity": "v3:c2bd11230eaf158678b24353f66743b9",
      "libNodeRefId": "@buildship/gcp-storage-upload-base64",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-upload-base64/1.0.5/build.cjs",
      "version": "1.0.5"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nimport { Readable } from 'stream';\n\nasync function folderExists(bucket, folderPath) {\n  const [exists] = await bucket.file(folderPath + '/').exists();\n  return exists;\n}\n\nasync function createFolders(bucket, folders) {\n  let currentPath = '';\n  for (const folder of folders) {\n    currentPath += folder + '/';\n    const exists = await folderExists(bucket, currentPath);\n    if (!exists) {\n      const file = bucket.file(currentPath);\n      try {\n        await file.save('');\n        console.log(`Folder \"${currentPath}\" created successfully.`);\n      } catch (error) {\n        console.error(`Error creating folder \"${currentPath}\":`, error);\n        throw error;\n      }\n    }\n  }\n}\n\nexport default async function uploadBase64ToGcpStorage(\n  { base64, fileName, bucketId }: NodeInputs,\n  { logging }\n: NodeScriptOptions) : NodeOutput  {\n  // Remove data:image/png;base64, from the start of the data URL\n  const base64Data = base64.split(';base64,').pop();\n  const folders = fileName.split('/').slice(0, -1);\n  const storage = new Storage();\n  const bucket = storage.bucket(bucketId);\n  const file = bucket.file(fileName);\n  const base64Decoded = Buffer.from(base64Data, 'base64');\n\n  try {\n    if (folders.length > 0) {\n      await createFolders(bucket, folders);\n    }\n\n    const writeStream = file.createWriteStream({\n      contentType: 'auto',\n      resumable: false,\n    });\n\n    const readableStream = new Readable();\n    readableStream.push(base64Decoded);\n    readableStream.push(null);\n\n    readableStream.pipe(writeStream);\n\n    await new Promise((resolve, reject) => {\n      writeStream.on('finish', resolve);\n      writeStream.on('error', reject);\n    });\n\n    await file.makePublic();\n\n    return `https://storage.googleapis.com/${bucket.name}/${file.name}`;\n  } catch (error) {\n    logging.log('Error uploading base64 data to GCP Storage:', error);\n    throw error;\n  }\n}\n",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 },
    "failCount": 11,
    "usageCounter": 382
  },
  {
    "output": {
      "buildship": {},
      "description": "The public URL of the uploaded file",
      "type": "object",
      "title": "Download URL",
      "properties": { "downloadURL": { "buildship": {}, "type": "string", "title": "Download URL" } }
    },
    "meta": {
      "name": "Upload File from External URL",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Uploads a file from an external URL to GCP Storage and returns its public URL",
      "id": "gcp-storage-upload-file"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "dependencies": { "node-fetch": "3.3.2", "@google-cloud/storage": "7.6.0" },
    "inputs": {
      "type": "object",
      "properties": {
        "externalUrl": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The URL of the file to be uploaded.",
          "title": "External URL",
          "type": "string"
        },
        "outputName": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "(Optional) The name of the output file (path) along with the file extension. (For Example: `output.png`)",
          "title": "File Name",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      },
      "required": ["bucketId", "externalUrl"]
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1704361774, "_nanoseconds": 390000000 }
    },
    "t": 297,
    "syncAllAtOnce": "1026",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-upload-file",
    "integrations": [],
    "integrity": "v3:e1213c4a9ceabc30c314e3cd777a7449",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-upload-file/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:1f05234760b4b4968abdcb1828f22f73",
      "libNodeRefId": "@buildship/gcp-storage-upload-file",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-upload-file/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nimport fetch from 'node-fetch';\n\nasync function folderExists(bucket, folderPath) {\n  const [exists] = await bucket.file(folderPath + '/').exists();\n  return exists;\n}\n\nasync function createFolders(bucket, folders) {\n  let currentPath = '';\n  for (const folder of folders) {\n    currentPath += folder + '/';\n    const exists = await folderExists(bucket, currentPath);\n    if (!exists) {\n      const file = bucket.file(currentPath);\n      try {\n        await file.save('');\n        console.log(`Folder \"${currentPath}\" created successfully.`);\n      } catch (error) {\n        console.error(`Error creating folder \"${currentPath}\":`, error);\n        throw error;\n      }\n    }\n  }\n}\n\nexport default async function uploadFileToGCPStorage(\n  { externalUrl, bucketId, outputName }: NodeInputs,\n  { logging }\n: NodeScriptOptions) : NodeOutput  {\n  const fileName = outputName ?? externalUrl.split('/').pop();\n  const folders = outputName\n    ? outputName.split('/').slice(0, -1)\n    : [];\n\n  const bucketName = bucketId.startsWith('process.env')\n    ? eval(bucketId)\n    : bucketId;\n\n  const storage = new Storage();\n  const bucket = storage.bucket(bucketName);\n  const file = bucket.file(fileName);\n\n  try {\n    if (folders.length > 0 && outputName) {\n      await createFolders(bucket, folders);\n    }\n\n    const response = await fetch(externalUrl);\n    const body = response.body;\n\n    if (response.status !== 200) {\n      throw new Error(\n        `Failed to fetch the file from ${externalUrl}. Status: ${response.status}`\n      );\n    }\n\n    const writeStream = file.createWriteStream({\n      resumable: false,\n    });\n\n    body.pipe(writeStream);\n\n    await new Promise((resolve, reject) => {\n      writeStream.on('finish', resolve);\n      writeStream.on('error', reject);\n    });\n\n    await file.makePublic();\n    const url = `https://storage.googleapis.com/${bucketName}/${fileName}`;\n\n    return {\n      downloadURL: url,\n    };\n  } catch (error) {\n    logging.error('Error uploading file to GCP Storage:', error);\n    throw error;\n  }\n}\n",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 },
    "usageCounter": 299,
    "failCount": 39
  },
  {
    "output": {
      "buildship": {},
      "description": "The status of the upload operation",
      "type": "object",
      "title": "Upload Status",
      "properties": {
        "message": { "buildship": {}, "type": "string", "title": "Message" },
        "url": { "buildship": {}, "type": "string", "title": "File URL" },
        "status": { "buildship": {}, "type": "string", "title": "Status" }
      }
    },
    "meta": {
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "name": "Upload Text to File",
      "description": "Uploads a text content to a specified GCP storage bucket and returns the file's public URL",
      "id": "gcp-storage-upload-text"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA.",
        "id": "0IAjU2tekQHjibkvicpC"
      }
    ],
    "dependencies": { "@google-cloud/storage": "7.6.0" },
    "inputs": {
      "type": "object",
      "properties": {
        "fileName": {
          "buildship": { "index": 2 },
          "description": "The name of the output file along with the file extension. (For Example: `output.txt`)",
          "title": "File Name",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        },
        "text": {
          "buildship": { "index": 1 },
          "description": "The text content to be uploaded to file.",
          "title": "Text",
          "type": "string"
        }
      },
      "required": ["text", "fileName", "bucketId"]
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1704361740, "_nanoseconds": 194000000 }
    },
    "t": 282,
    "syncAllAtOnce": "1030",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-upload-text",
    "integrations": [],
    "integrity": "v3:207c6bbdd4aa6c705cf136111506a07a",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-upload-text/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:395c72ed40bc4d876fee6e8ae4bc1903",
      "libNodeRefId": "@buildship/gcp-storage-upload-text",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-upload-text/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\n\nasync function folderExists(bucket, folderPath) {\n  const [exists] = await bucket.file(folderPath + '/').exists();\n  return exists;\n}\n\nasync function createFolders(bucket, folders) {\n  let currentPath = '';\n  for (const folder of folders) {\n    currentPath += folder + '/';\n    const exists = await folderExists(bucket, currentPath);\n    if (!exists) {\n      const file = bucket.file(currentPath);\n      try {\n        await file.save('');\n        console.log(`Folder \"${currentPath}\" created successfully.`);\n      } catch (error) {\n        console.error(`Error creating folder \"${currentPath}\":`, error);\n        throw error;\n      }\n    }\n  }\n}\n\nexport default async function uploadTextGCPStorage({ bucketId, text, fileName }: NodeInputs) : NodeOutput  {\n  const folders = fileName.split('/').slice(0, -1);\n  const storage = new Storage();\n  const bucket = storage.bucket(bucketId);\n  const file = bucket.file(fileName);\n\n  try {\n    if (folders.length > 0) {\n      await createFolders(bucket, folders);\n    }\n\n    await file.save(text);\n    await file.makePublic();\n\n    return {\n      status: 'success',\n      message: 'Text uploaded successfully',\n      url: `https://storage.googleapis.com/${bucketId}/${fileName}`\n    };\n  } catch (error) {\n    console.error('Error uploading text to GCP Storage:', error);\n    throw error;\n  }\n}\n",
    "usageCounter": 56,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "The download URL of the zipped folder",
      "type": "string",
      "title": "Download URL"
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Google Cloud Storage",
        "description": "Nodes for storing your files on your own Google Cloud Storage Bucket",
        "id": "0IAjU2tekQHjibkvicpC",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      }
    ],
    "inputs": {
      "type": "object",
      "required": ["folderPath", "bucketId"],
      "properties": {
        "folderPath": {
          "buildship": { "index": 1 },
          "description": "The path to the folder in the GCP bucket.\n\nEXAMPLE: If your folder lies in the root directory, directly write the name: `folder-name`.",
          "title": "Folder Path",
          "type": "string"
        },
        "bucketId": {
          "default": "process.env.BUCKET",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the GCP Storage bucket. \n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your GCP Bucket ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/gcp-storage#access-buildship-settings).",
          "title": "Bucket ID",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Zip GCP Folder",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgooglecloud.svg?alt=media&token=743cb460-558f-4b77-a536-9379c738b252&_gl=1*ugfgvc*_ga*NzgyMDk5NjMxLjE2OTY4NzE3ODU.*_ga_CW55HF8NVT*MTY5NjkzNjk2OC40LjEuMTY5NjkzNjk5OC4zMC4wLjA."
      },
      "description": "Zips an existing folder in GCP storage and returns a download url.",
      "id": "gcp-storage-zip-folder"
    },
    "dependencies": { "archiver": "6.0.1", "stream": "0.0.2", "@google-cloud/storage": "7.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701503620, "_nanoseconds": 587000000 }
    },
    "t": 280,
    "syncAllAtOnce": "911",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 481000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpC",
    "id": "gcp-storage-zip-folder",
    "integrations": [],
    "integrity": "v3:85c1c78d5a7ff2b19195e74f8bf8a354",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-zip-folder/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:f82642791ae73dc49cc3c3db65a366c8",
      "libNodeRefId": "@buildship/gcp-storage-zip-folder",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gcp-storage-zip-folder/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Storage } from '@google-cloud/storage';\nimport archiver from 'archiver';\nimport stream from 'stream';\n\nexport default async function zipGcpStorageFolder({\n    bucketId,\n    folderPath\n}: NodeInputs) : NodeOutput  {\n    const storage = new Storage();\n    const bucket = storage.bucket(bucketId);\n    const zipStream = archiver('zip');\n    const files = await bucket.getFiles({\n        prefix: folderPath\n    });\n    files[0].forEach(file => {\n        const fileStream = file.createReadStream();\n        zipStream.append(fileStream, {\n            name: file.name\n        });\n    });\n    const zipFileName = `${folderPath}.zip`;\n    const zipFile = bucket.file(zipFileName);\n    const writeStream = zipFile.createWriteStream({\n        resumable: false,\n        validation: false,\n        public: true,\n        metadata: {\n            'Cache-Control': 'public, max-age=31536000'\n        },\n    });\n    zipStream.pipe(writeStream);\n    zipStream.finalize();\n    await new Promise((resolve, reject) => {\n        writeStream.on('finish', resolve);\n        writeStream.on('error', reject);\n    });\n    return `https://storage.cloud.google.com/${bucket.name}/${zipFileName}`;\n}",
    "usageCounter": 44,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 49000000 }
  }
]
