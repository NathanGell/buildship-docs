[
  {
    "output": {
      "buildship": {},
      "description": "Array of objects.\n\nExample:-\n[\n  {\n    \"generated_text\": \"araffe cat with blue eyes laying on a stone floor\"\n  }\n]",
      "title": "output",
      "type": "string"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0", "@google-cloud/storage": "7.7.0", "fs": "0.0.2" },
    "group": [
      {
        "name": "Hugging Face",
        "description": "Nodes with Hugging Face's popular models.",
        "id": "0IAjU2tekQHjibkvicp0",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2FhuggingFace.png?alt=media&token=9abb241c-6522-4fdb-982f-365002ca53fe"
      }
    ],
    "meta": {
      "name": "Caption Image",
      "icon": { "type": "URL", "url": "https://huggingface.co/front/assets/huggingface_logo-noborder.svg" },
      "description": "Generate caption for the image using Hugging Face's [Salesforce/blip-image-captioning-large](https://huggingface.co/Salesforce/blip-image-captioning-large) model for image captioning pretrained on COCO dataset - base architecture (with ViT large backbone).",
      "id": "410e3035-7071-46ec-906a-7ce49a30f25b"
    },
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "deepanshu@rowy.io.rowy",
      "completedAt": { "_seconds": 1702617275, "_nanoseconds": 703000000 }
    },
    "inputs": {
      "type": "object",
      "required": ["imageFilePath", "accessToken"],
      "properties": {
        "imageFilePath": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Storage path or url of the image to be captioned.",
          "title": "Image File Path",
          "type": "string"
        },
        "accessToken": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Generated access token at Hugging Face. [https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens)",
          "title": "Access Token",
          "type": "string"
        }
      }
    },
    "t": 106,
    "syncAllAtOnce": "798",
    "generateDocs": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1709281257, "_nanoseconds": 105000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicp0",
    "id": "410e3035-7071-46ec-906a-7ce49a30f25b",
    "integrations": [],
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTtfPe0yH9QzE2iqPg4aVB_xklqimDxaI5WOsRM9XqSvD=s96-c",
      "uid": "lGcdiftmK4QNZ2XuMUVqrm6B21c2",
      "displayName": "Aaditya Bhusal",
      "email": "aaditya@rowy.io.rowy",
      "timestamp": { "_seconds": 1716537708, "_nanoseconds": 235000000 }
    },
    "integrity": "v3:eb9b60750383a097528827576a1a6cbc",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/410e3035-7071-46ec-906a-7ce49a30f25b/2.1.0/build.cjs",
    "version": "2.1.0",
    "_libRef": {
      "integrity": "v3:8b296f69630f34c38d6011127792081d",
      "libNodeRefId": "@buildship/410e3035-7071-46ec-906a-7ce49a30f25b",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/410e3035-7071-46ec-906a-7ce49a30f25b/2.0.3/build.cjs",
      "version": "2.0.3"
    },
    "script": "import fetch from \"node-fetch\";\nimport fs from \"fs\";\nimport { Storage } from '@google-cloud/storage';\n\nconst isValidUrl = (url) => {\n  try {\n    new URL(url);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nconst readImageFilePath = async(imageFilePath) => {\n  const isUrl = isValidUrl(imageFilePath);\n\n  if(isUrl) {\n    const response = await fetch(imageFilePath);\n    const imageFileBuffer = await response.buffer();\n\n    return imageFileBuffer;\n  }\n\n  const storage = new Storage();\n  const bucketName = process.env.BUCKET;\n  const bucket = storage.bucket(bucketName);\n  const imageFile = bucket.file(imageFilePath);\n\n  const imageFileData = await imageFile.download();\n\n  return imageFileData[0]; // buffer data\n}\n\nexport default async ({accessToken, imageFilePath}: NodeInputs,{logging}: NodeScriptOptions) : NodeOutput  => {\n    const imageFileData = await readImageFilePath(imageFilePath);\n  \n\tconst response = await fetch(\n\t\t\"https://api-inference.huggingface.co/models/Salesforce/blip-image-captioning-large\",\n\t\t{\n\t\t\theaders: { Authorization: `Bearer ${accessToken}` },\n\t\t\tmethod: \"POST\",\n\t\t\tbody: imageFileData,\n\t\t}\n\t);\n\n    const result = await response.json();\n\n    return result;\n}",
    "failCount": 3,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 35000000 },
    "usageCounter": 211
  },
  {
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0", "@google-cloud/storage": "7.7.0" },
    "output": {
      "buildship": {},
      "description": "Object containing downloadUrl to access the generated music audio file.",
      "type": "object",
      "title": "output",
      "properties": {}
    },
    "group": [
      {
        "name": "Hugging Face",
        "description": "Nodes with Hugging Face's popular models.",
        "id": "0IAjU2tekQHjibkvicp0",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2FhuggingFace.png?alt=media&token=9abb241c-6522-4fdb-982f-365002ca53fe"
      }
    ],
    "meta": {
      "name": "Text-To-Music",
      "icon": { "type": "URL", "url": "https://huggingface.co/front/assets/huggingface_logo-noborder.svg" },
      "description": "Generate music from text using Hugging Face's [facebook/musicgen-small](https://huggingface.co/facebook/musicgen-small) model capable of generating high-quality music samples conditioned on text descriptions or audio prompts.",
      "id": "5bb0eea9-bd42-4b87-8f06-b39ce7a4a5fd"
    },
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "deepanshu@rowy.io.rowy",
      "completedAt": { "_seconds": 1702617324, "_nanoseconds": 236000000 }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "audioFileName": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Name of the generated audio file.",
          "title": "Audio File Name",
          "type": "string"
        },
        "text": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Text descriptions or audio prompts to be converted to music.",
          "type": "string",
          "title": "Text"
        },
        "accessToken": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Generated access token at Hugging Face. [https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens)",
          "title": "Access Token",
          "type": "string"
        }
      },
      "required": ["audioFileName", "text", "accessToken"]
    },
    "t": 124,
    "syncAllAtOnce": "795",
    "groupInfo": "0IAjU2tekQHjibkvicp0",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 466000000 }
    },
    "id": "5bb0eea9-bd42-4b87-8f06-b39ce7a4a5fd",
    "integrations": [],
    "integrity": "v3:89cb8e4740f90565ec2bd321520679d1",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/5bb0eea9-bd42-4b87-8f06-b39ce7a4a5fd/2.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:5dd87d393d880a35d7dad840d513025f",
      "libNodeRefId": "@buildship/5bb0eea9-bd42-4b87-8f06-b39ce7a4a5fd",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/5bb0eea9-bd42-4b87-8f06-b39ce7a4a5fd/2.0.5/build.cjs",
      "version": "2.0.5"
    },
    "version": "2.1.0",
    "script": "import fetch from \"node-fetch\";\nimport { Storage } from '@google-cloud/storage';\n\nexport default async ({accessToken, text, audioFileName}: NodeInputs,{logging}: NodeScriptOptions) : NodeOutput  => {\n\tconst response = await fetch(\n\t\t\"https://api-inference.huggingface.co/models/facebook/musicgen-small\",\n\t\t{\n\t\t\theaders: { Authorization: `Bearer ${accessToken}` },\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({inputs: text}),\n\t\t}\n\t);\n\n   // initialise storage configs\n   const storage = new Storage();\n   const bucketName = process.env.BUCKET;\n   const bucket = storage.bucket(bucketName);\n   const filePath = `hugging-face-text-to-audio/${audioFileName}`;\n   const file = bucket.file(filePath);\n\n   const fileStream = file.createWriteStream({ resumable: false });\n\n   response.body.pipe(fileStream);\n\n   await new Promise((resolve, reject) => {\n     fileStream.on(\"finish\", resolve);\n     fileStream.on(\"error\", reject);\n   })\n\n   // upload generated audio to cloud storage\n   await file.makePublic();\n   const downloadUrl = `https://storage.googleapis.com/${bucketName}/${filePath}`;\n\n   return { downloadUrl };\n}",
    "failCount": 2,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 35000000 },
    "usageCounter": 152
  },
  {
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0", "@google-cloud/storage": "7.7.0", "fs": "0.0.2" },
    "output": {
      "buildship": {},
      "description": "Array of objects.\n\nExample:-\nFor cat image, result would be:\n[\n  {\n    \"score\": 0.6214229464530945,\n    \"label\": \"lynx, catamount\"\n  },\n  {\n    \"score\": 0.17373648285865784,\n    \"label\": \"Egyptian cat\"\n  },\n  {\n    \"score\": 0.09913813322782516,\n    \"label\": \"Siamese cat, Siamese\"\n  },\n  {\n    \"score\": 0.03866586461663246,\n    \"label\": \"tabby, tabby cat\"\n  },\n  {\n    \"score\": 0.027638306841254234,\n    \"label\": \"tiger cat\"\n  }\n]",
      "title": "output",
      "type": "array"
    },
    "group": [
      {
        "name": "Hugging Face",
        "description": "Nodes with Hugging Face's popular models.",
        "id": "0IAjU2tekQHjibkvicp0",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2FhuggingFace.png?alt=media&token=9abb241c-6522-4fdb-982f-365002ca53fe"
      }
    ],
    "meta": {
      "name": "Image Classification",
      "icon": { "type": "URL", "url": "https://huggingface.co/front/assets/huggingface_logo-noborder.svg" },
      "description": "Get classification labels for your image using Hugging Face's [google/vit-base-patch16-224](https://huggingface.co/google/vit-base-patch16-224) model which is a transformer encoder model (BERT-like) pretrained on a large collection of images in a supervised fashion, namely ImageNet-21k, at a resolution of 224x224 pixels. Next, the model was fine-tuned on ImageNet (also referred to as ILSVRC2012), a dataset comprising 1 million images and 1,000 classes, also at resolution 224x224.",
      "id": "7a5966b3-de5a-4114-b09d-4cd250262535"
    },
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "deepanshu@rowy.io.rowy",
      "completedAt": { "_seconds": 1702617350, "_nanoseconds": 535000000 }
    },
    "inputs": {
      "type": "object",
      "required": ["imageFilePath", "accessToken"],
      "properties": {
        "imageFilePath": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Storage path or url of the image to be classified.",
          "title": "Image File Path",
          "type": "string"
        },
        "accessToken": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Generated access token at Hugging Face. [https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens)",
          "title": "Access Token",
          "type": "string"
        }
      }
    },
    "t": 128,
    "syncAllAtOnce": "799",
    "groupInfo": "0IAjU2tekQHjibkvicp0",
    "failCount": 3,
    "id": "7a5966b3-de5a-4114-b09d-4cd250262535",
    "integrations": [],
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTtfPe0yH9QzE2iqPg4aVB_xklqimDxaI5WOsRM9XqSvD=s96-c",
      "uid": "lGcdiftmK4QNZ2XuMUVqrm6B21c2",
      "displayName": "Aaditya Bhusal",
      "email": "aaditya@rowy.io.rowy",
      "timestamp": { "_seconds": 1716537685, "_nanoseconds": 667000000 }
    },
    "integrity": "v3:37b73291fe710d36d32f9701d8c34e14",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/7a5966b3-de5a-4114-b09d-4cd250262535/2.1.0/build.cjs",
    "version": "2.1.0",
    "_libRef": {
      "integrity": "v3:aefdb97dac9ae003e6be8c397c56e9e3",
      "libNodeRefId": "@buildship/7a5966b3-de5a-4114-b09d-4cd250262535",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/7a5966b3-de5a-4114-b09d-4cd250262535/2.0.8/build.cjs",
      "version": "2.0.8"
    },
    "script": "import fetch from \"node-fetch\";\nimport fs from \"fs\";\nimport { Storage } from '@google-cloud/storage';\n\nconst isValidUrl = (url) => {\n  try {\n    new URL(url);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nconst readImageFilePath = async(imageFilePath) => {\n  const isUrl = isValidUrl(imageFilePath);\n\n  if(isUrl) {\n    const response = await fetch(imageFilePath);\n    const imageFileBuffer = await response.buffer();\n\n    return imageFileBuffer;\n  }\n\n  const storage = new Storage();\n  const bucketName = process.env.BUCKET;\n  const bucket = storage.bucket(bucketName);\n  const imageFile = bucket.file(imageFilePath);\n\n  const imageFileData = await imageFile.download();\n\n  return imageFileData[0]; // buffer data\n}\n\nexport default async ({accessToken, imageFilePath}: NodeInputs,{logging}: NodeScriptOptions) : NodeOutput  => {\n    const imageFileData = await readImageFilePath(imageFilePath);\n  \n\tconst response = await fetch(\n\t\t\"https://api-inference.huggingface.co/models/google/vit-base-patch16-224\",\n\t\t{\n\t\t\theaders: { Authorization: `Bearer ${accessToken}` },\n\t\t\tmethod: \"POST\",\n\t\t\tbody: imageFileData,\n\t\t}\n\t);\n\n    const result = await response.json();\n\n    return result;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 35000000 },
    "usageCounter": 156
  },
  {
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0", "@google-cloud/storage": "7.7.0" },
    "output": {
      "buildship": {},
      "description": "Object containing downloadUrl to view the generated image file.",
      "title": "output",
      "type": "object",
      "properties": {}
    },
    "group": [
      {
        "name": "Hugging Face",
        "description": "Nodes with Hugging Face's popular models.",
        "id": "0IAjU2tekQHjibkvicp0",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2FhuggingFace.png?alt=media&token=9abb241c-6522-4fdb-982f-365002ca53fe"
      }
    ],
    "meta": {
      "name": "Text-To-Image",
      "icon": { "type": "URL", "url": "https://huggingface.co/front/assets/huggingface_logo-noborder.svg" },
      "description": "Generate image from text, using Hugging Face's [openskyml/dalle-3-xl](https://huggingface.co/openskyml/dalle-3-xl) test model very similar to Dall•E 3.",
      "id": "9f0da096-5999-44f8-a227-26bbed233fb9"
    },
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "deepanshu@rowy.io.rowy",
      "completedAt": { "_seconds": 1702617244, "_nanoseconds": 264000000 }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "imageFileName": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Name of image file.",
          "type": "string",
          "title": "Image File Name"
        },
        "text": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Text to be converted to image.",
          "type": "string",
          "title": "Text"
        },
        "accessToken": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Generated access token at Hugging Face [https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens).",
          "title": "Access Token",
          "type": "string"
        }
      },
      "required": ["text", "imageFileName", "accessToken"]
    },
    "t": 126,
    "syncAllAtOnce": "802",
    "groupInfo": "0IAjU2tekQHjibkvicp0",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 466000000 }
    },
    "id": "9f0da096-5999-44f8-a227-26bbed233fb9",
    "integrations": [],
    "failCount": 2,
    "integrity": "v3:c5b17497287bba4f06338ccbcc720d09",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/9f0da096-5999-44f8-a227-26bbed233fb9/2.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:76bcdfbda9ecf8bbe115f53c67e4fbda",
      "libNodeRefId": "@buildship/9f0da096-5999-44f8-a227-26bbed233fb9",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/9f0da096-5999-44f8-a227-26bbed233fb9/2.0.7/build.cjs",
      "version": "2.0.7"
    },
    "version": "2.1.0",
    "script": "import fetch from \"node-fetch\";\nimport { Storage } from '@google-cloud/storage';\n\nexport default async ({accessToken, text, imageFileName}: NodeInputs,{logging}: NodeScriptOptions) : NodeOutput  => {\n\tconst response = await fetch(\n\t\t\"https://api-inference.huggingface.co/models/openskyml/dalle-3-xl\",\n\t\t{\n\t\t\theaders: { Authorization: `Bearer ${accessToken}` },\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({inputs: text}),\n\t\t}\n\t);\n\n   // initialise storage configs\n   const storage = new Storage();\n   const bucketName = process.env.BUCKET;\n   const bucket = storage.bucket(bucketName);\n   const filePath = `hugging-face-text-to-image/${imageFileName}`;\n   const file = bucket.file(filePath);\n\n   const fileStream = file.createWriteStream({ resumable: false });\n\n   response.body.pipe(fileStream);\n\n   await new Promise((resolve, reject) => {\n     fileStream.on(\"finish\", resolve);\n     fileStream.on(\"error\", reject);\n   })\n\n   // upload generate image to cloud storage\n   await file.makePublic();\n   const downloadUrl = `https://storage.googleapis.com/${bucketName}/${filePath}`;\n\n   return { downloadUrl };\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 36000000 },
    "usageCounter": 205
  },
  {
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "output": {
      "buildship": {},
      "description": "Array of objects. \n\nExample:- \n[{'summary_text': 'Liana Barrientos, 39, is charged with two counts of \"offering a false instrument for filing in the first degree\" In total, she has been married 10 times, with nine of her marriages occurring between 1999 and 2002. She is believed to still be married to four men.'}]",
      "title": "output",
      "type": "array"
    },
    "group": [
      {
        "name": "Hugging Face",
        "description": "Nodes with Hugging Face's popular models.",
        "id": "0IAjU2tekQHjibkvicp0",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2FhuggingFace.png?alt=media&token=9abb241c-6522-4fdb-982f-365002ca53fe"
      }
    ],
    "meta": {
      "name": "Text Summarization",
      "icon": { "type": "URL", "url": "https://huggingface.co/front/assets/huggingface_logo-noborder.svg" },
      "description": "Summarize long text using Hugging Face's [facebook/bart-large-cnn](https://huggingface.co/facebook/bart-large-cnn) model which is a transformer encoder-encoder (seq2seq) model with a bidirectional (BERT-like) encoder and an autoregressive (GPT-like) decoder. BART is pre-trained by (1) corrupting text with an arbitrary noising function, and (2) learning a model to reconstruct the original text.",
      "id": "e045ff69-a8d6-42d4-aa64-dd806cc668a2"
    },
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "deepanshu@rowy.io.rowy",
      "completedAt": { "_seconds": 1702617376, "_nanoseconds": 613000000 }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "text": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Text to be summarized.",
          "type": "string",
          "title": "Text"
        },
        "accessToken": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Generated access token at Hugging Face. [https://huggingface.co/settings/tokens](https://huggingface.co/settings/tokens)",
          "title": "Access Token",
          "type": "string"
        }
      },
      "required": ["text", "accessToken"]
    },
    "t": 196,
    "syncAllAtOnce": "939",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 477000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicp0",
    "id": "e045ff69-a8d6-42d4-aa64-dd806cc668a2",
    "integrations": [],
    "integrity": "v3:476058b668298d318a7cb101940984cd",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/e045ff69-a8d6-42d4-aa64-dd806cc668a2/2.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:803b8de6c456a8b5c45cd484f5c55501",
      "libNodeRefId": "@buildship/e045ff69-a8d6-42d4-aa64-dd806cc668a2",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/e045ff69-a8d6-42d4-aa64-dd806cc668a2/2.0.5/build.cjs",
      "version": "2.0.5"
    },
    "version": "2.1.0",
    "script": "import fetch from \"node-fetch\";\n\nexport default async ({accessToken, text}: NodeInputs,{logging}: NodeScriptOptions) : NodeOutput  => {\n\tconst response = await fetch(\n\t\t\"https://api-inference.huggingface.co/models/facebook/bart-large-cnn\",\n\t\t{\n\t\t\theaders: { Authorization: `Bearer ${accessToken}` },\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({ inputs: text }),\n\t\t}\n\t);\n\n    const result = await response.json();\n\n    return result;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 45000000 },
    "usageCounter": 117
  }
]
