[
  {
    "output": {
      "buildship": {},
      "description": "The calculated distance result",
      "title": "Distance",
      "type": "object",
      "properties": {
        "duration": {
          "buildship": { "index": 2 },
          "description": "The distance duration",
          "title": "Duration",
          "type": "string"
        },
        "distanceMeters": {
          "buildship": { "index": 0 },
          "description": "The calculate distance in meters",
          "title": "Distance Meters",
          "type": "number"
        },
        "distanceReadable": {
          "buildship": { "index": 1 },
          "description": "The human-readable distance like \"1.2 km\" or \"0.7 miles\"",
          "title": "Distance Readable",
          "type": "string"
        }
      }
    },
    "inputs": {
      "type": "object",
      "required": ["apiKey", "radius", "origin", "destination", "mode"],
      "properties": {
        "mode": {
          "buildship": {
            "options": [
              { "label": "Driving", "value": "driving" },
              { "label": "Walking", "value": "walking" },
              { "label": "Bicycling", "value": "bicycling" },
              { "label": "Transit", "value": "transit" }
            ],
            "index": 3
          },
          "pattern": "",
          "description": "The transportation mode to use",
          "title": "Mode",
          "type": "string",
          "enum": ["driving", "walking", "bicycling", "transit"]
        },
        "apiKey": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "See [link](https://developers.google.com/maps/documentation/places/web-service/get-api-key) for instructions how to get your own API key. ",
          "title": "API Key",
          "type": "string"
        },
        "origin": {
          "buildship": { "index": 1 },
          "pattern": "",
          "description": "The starting address",
          "title": "Origin",
          "type": "string"
        },
        "destination": {
          "buildship": { "index": 2 },
          "pattern": "",
          "description": "The ending address",
          "title": "Destination",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Calculate Distance",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle_maps.png?alt=media&token=874f7538-2c21-465d-9b64-ec63db34006e"
      },
      "description": "Calculate the distance between two addresses using Google's Directions API. **To use this node you must first enable the \n[Directions API](https://console.cloud.google.com/apis/library/directions-backend.googleapis.com?project=_)**",
      "id": "gmaps-calculate-distance"
    },
    "type": "script",
    "integrations": [],
    "dependencies": { "axios": "0.28.1" },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "uid": "google-maps",
        "name": "Google Maps",
        "description": "Nodes for performing actions using the Google Maps API provided by Google.",
        "id": "0IAjU2tekQHjibkvicp4",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle_maps.png?alt=media&token=874f7538-2c21-465d-9b64-ec63db34006e"
      }
    ],
    "syncIndex": {
      "ranBy": "luis@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1712208107, "_nanoseconds": 991000000 }
    },
    "deployToBucket": {
      "ranBy": "luis@rowy.io.rowy",
      "completedAt": { "_seconds": 1712208112, "_nanoseconds": 983000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 483000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicp4",
    "integrity": "v3:37b42317798141cce6f9fc7b020fdfd2",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gmaps-calculate-distance/1.1.0/build.cjs",
    "id": "gmaps-calculate-distance",
    "_libRef": {
      "integrity": "v3:e8cf6239fc5af33f1504366fb9840f82",
      "libNodeRefId": "@buildship/gmaps-calculate-distance",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gmaps-calculate-distance/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import axios from \"axios\";\n\nexport default async ({ origin, destination, mode, apiKey }: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  => {\n  const url = \"https://maps.googleapis.com/maps/api/directions/json\";\n\n  try {\n    const { data } = await axios.get(url, {\n      params: {\n        origin,\n        destination,\n        mode,\n        key: apiKey,\n      },\n    });\n\n    if (data.status === \"OK\") {\n      const route = data.routes[0];\n      const leg = route.legs[0];\n\n      const distanceMeters = leg.distance.value;\n      const distanceReadable = leg.distance.text;\n      const duration = leg.duration.text;\n\n      return {\n        distanceMeters,\n        distanceReadable,\n        duration,\n      };\n    } else {\n      throw new Error(`Directions request failed with status: ${data.status}`);\n    }\n  } catch (error) {\n    logging.error(\"Error fetching directions:\", error);\n    throw error;\n  }\n};",
    "failCount": 38,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 51000000 },
    "usageCounter": 107
  },
  {
    "output": {
      "buildship": {},
      "type": "object",
      "properties": {
        "latitude": { "buildship": {}, "description": "The geocoded latitude", "title": "Latitude", "type": "number" },
        "longitude": {
          "buildship": {},
          "description": "The geocoded longitude",
          "title": "Longitude",
          "type": "number"
        }
      }
    },
    "inputs": {
      "type": "object",
      "required": ["apiKey", "address"],
      "properties": {
        "address": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Address to generate geocode for.",
          "title": "Address",
          "type": "string"
        },
        "apiKey": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "See [link](https://developers.google.com/maps/documentation/places/web-service/get-api-key) for instructions how to get your own API key. ",
          "title": "API Key",
          "type": "string"
        }
      }
    },
    "type": "script",
    "group": [
      {
        "name": "Google Maps",
        "description": "Nodes for performing actions using the Google Maps API provided by Google.",
        "id": "0IAjU2tekQHjibkvicp4",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle_maps.png?alt=media&token=874f7538-2c21-465d-9b64-ec63db34006e"
      }
    ],
    "category": ["Integrations"],
    "live": true,
    "t": 254,
    "syncAllAtOnce": "908",
    "integrations": [],
    "dependencies": {},
    "meta": {
      "name": "Geocode Address",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle_maps.png?alt=media&token=874f7538-2c21-465d-9b64-ec63db34006e"
      },
      "description": "Geocode address using Google's Geocoding API. \n\n**To use this node you must first enable the \n [Geocoding API](https://console.cloud.google.com/apis/library/geocoding-backend.googleapis.com?project=_)**",
      "id": "gmaps-geocode"
    },
    "syncIndex": {
      "ranBy": "luis@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1712207990, "_nanoseconds": 931000000 }
    },
    "deployToBucket": {
      "ranBy": "luis@rowy.io.rowy",
      "completedAt": { "_seconds": 1712208026, "_nanoseconds": 120000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 484000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicp4",
    "integrity": "v3:35f4a5e51ccc37f8fbafd79738ba1834",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gmaps-geocode/1.1.0/build.cjs",
    "id": "gmaps-geocode",
    "_libRef": {
      "integrity": "v3:fd135d260f172be934fdb55c934c28c6",
      "libNodeRefId": "@buildship/gmaps-geocode",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gmaps-geocode/1.0.3/build.cjs",
      "version": "1.0.3"
    },
    "version": "1.1.0",
    "script": "export default async ({ address, apiKey }: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  => {\n  const url = \"https://maps.googleapis.com/maps/api/geocode/json\";\n\n  try {\n    const response = await fetch(url + `?address=${encodeURIComponent(address)}&key=${apiKey}`);\n    const data = await response.json();\n\n    if (data.status === \"OK\") {\n      const location = data.results[0].geometry.location;\n      return { latitude: location.lat, longitude: location.lng };\n    } else {\n      throw new Error(`Geocoding request failed with status: ${data.status}`);\n    }\n  } catch (error) {\n    logging.error(error);\n    return error.message;\n  }\n};",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 51000000 },
    "usageCounter": 242
  },
  {
    "type": "script",
    "category": ["Integrations"],
    "group": [
      {
        "name": "Google Maps",
        "description": "Nodes for performing actions using the Google Maps API provided by Google.",
        "id": "0IAjU2tekQHjibkvicp4",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle_maps.png?alt=media&token=874f7538-2c21-465d-9b64-ec63db34006e"
      }
    ],
    "live": true,
    "t": 320,
    "syncAllAtOnce": "1022",
    "integrations": [],
    "dependencies": {},
    "output": {
      "buildship": {},
      "description": "An array of nearby places matching the search criteria.",
      "title": "Nearby places",
      "type": "array"
    },
    "inputs": {
      "type": "object",
      "properties": {
        "types": {
          "default": "restaurant",
          "buildship": {
            "options": [
              { "label": "Restaurant", "value": "restaurant" },
              { "label": "Cafe", "value": "cafe" },
              { "label": "Bar", "value": "bar" },
              { "label": "Store", "value": "store" },
              { "label": "Shopping Mall", "value": "shopping_mall" },
              { "label": "Hotel", "value": "hotel" },
              { "label": "Park", "value": "park" },
              { "label": "Museum", "value": "museum" },
              { "label": "Gym", "value": "gym" },
              { "label": "Bank", "value": "Bank" }
            ],
            "index": 3,
            "sensitive": false
          },
          "pattern": "",
          "description": "The type of place to search for (e.g., \"restaurant\", \"cafe\"). If not provided, all types of places will be searched.",
          "title": "Type",
          "type": "array",
          "enum": ["restaurant", "cafe", "bar", "store", "shopping_mall", "hotel", "park", "museum", "gym", "Bank"]
        },
        "address": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The address to search for places near",
          "type": "string",
          "title": "Address"
        },
        "apiKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "See [link](https://developers.google.com/maps/documentation/places/web-service/get-api-key) for instructions how to get your own API key. ",
          "type": "string",
          "title": "API Key"
        },
        "max": {
          "default": "5",
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The maximum number of places to return. If not provided, all matching places will be returned.",
          "title": "Max",
          "type": "number"
        },
        "radius": {
          "default": "5000",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The radius (in meters) within which to search for places.",
          "title": "Radius",
          "type": "number"
        }
      },
      "required": ["latitude", "longitude", "apiKey", "address", "radius"]
    },
    "meta": {
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle_maps.png?alt=media&token=874f7538-2c21-465d-9b64-ec63db34006e"
      },
      "name": "Get Nearby Places",
      "description": "Get nearby places using Google's Places API. \n\n**To use this node you must first enable the \n[Places API](https://console.cloud.google.com/apis/library/places-backend.googleapis.com?project=_)\nAND [Geocoding API](https://console.cloud.google.com/apis/library/geocoding-backend.googleapis.com?project=_)**",
      "id": "gmaps-nearby-places"
    },
    "syncIndex": {
      "ranBy": "luis@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1712207897, "_nanoseconds": 156000000 }
    },
    "deployToBucket": {
      "ranBy": "luis@rowy.io.rowy",
      "completedAt": { "_seconds": 1712207902, "_nanoseconds": 90000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 484000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicp4",
    "integrity": "v3:2b8df5aed1905f23ba63465362b6e501",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gmaps-nearby-places/1.1.0/build.cjs",
    "id": "gmaps-nearby-places",
    "_libRef": {
      "integrity": "v3:68793431c79fd6c8c10857c08855a3f4",
      "libNodeRefId": "@buildship/gmaps-nearby-places",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/gmaps-nearby-places/1.0.4/build.cjs",
      "version": "1.0.4"
    },
    "version": "1.1.0",
    "script": "export default async ({ address, radius, max, apiKey, types }: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  => {\n  const url = \"https://maps.googleapis.com/maps/api/place/textsearch/json\";\n  const params = new URLSearchParams({\n    key: apiKey,\n    query: address,\n    radius,\n    ...(types && { type: types.join(\"|\") }),\n  });\n\n  try {\n    const response = await fetch(`${url}?${params}`);\n    const data = await response.json();\n\n    if (data.status === \"OK\") {\n      const places = data.results;\n      return max ? places.slice(0, max) : places;\n    } else {\n      throw new Error(`Places request failed with status: ${data.status}`);\n    }\n  } catch (error) {\n    logging.error(error);\n    throw error;\n  }\n};",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 51000000 },
    "usageCounter": 228,
    "failCount": 77
  }
]
