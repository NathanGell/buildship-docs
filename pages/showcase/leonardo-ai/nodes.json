[
  {
    "output": {
      "buildship": { "index": 0 },
      "type": "object",
      "properties": {
        "generationId": { "buildship": { "index": 0 }, "description": "", "title": "generationId", "type": "string" },
        "apiCreditCost": { "buildship": { "index": 1 }, "description": "", "title": "apiCreditCost", "type": "number" }
      }
    },
    "inputs": {
      "type": "object",
      "required": ["apiKey", "alchemy", "prompt"],
      "properties": {
        "apiKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your API key for the Leonardo AI. [Learn More](https://docs.leonardo.ai/docs/create-your-api-key).",
          "title": "API Key",
          "type": "string"
        },
        "modelId": {
          "default": "",
          "buildship": { "index": 5, "sensitive": false },
          "pattern": "",
          "description": "The model ID used for image generation. \n\nIf not provided, uses `sd_version` to determine the version of Stable Diffusion to use. In-app, model IDs are under the **Finetune Models** menu. Click on the platform model or your custom model, then click **View More**. For platform models, you can also use the **List Platform Models API**.",
          "title": "Model ID",
          "type": "string"
        },
        "width": {
          "default": 1024,
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The input height of the images. Must be between `32` and `1024` and be a **multiple of 8**. Note: Input resolution is not always the same as output resolution due to upscaling from other features.\n\n**Default:** `1024`",
          "title": "Width",
          "type": "number"
        },
        "alchemy": {
          "default": "true",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Enable to use Alchemy. Note: The appropriate Alchemy version is selected for the specified model. For example, XL models will use Alchemy V2.",
          "title": "Alchemy",
          "type": "boolean"
        },
        "presetStyle": {
          "default": "NONE",
          "buildship": {
            "options": [
              { "label": "NONE", "value": "NONE" },
              { "label": "LEONARDO", "value": "LEONARDO" },
              { "label": "ANIME", "value": "ANIME" },
              { "label": "CREATIVE", "value": "CREATIVE" },
              { "label": "DYNAMIC", "value": "DYNAMIC" },
              { "label": "ENVIRONMENT", "value": "ENVIRONMENT" },
              { "label": "GENERAL", "value": "GENERAL" },
              { "label": "ILLUSTRATION", "value": "ILLUSTRATION" },
              { "label": "PHOTOGRAPHY", "value": "PHOTOGRAPHY" },
              { "label": "RAYTRACED", "value": "RAYTRACED" },
              { "label": "RENDER_3D", "value": "RENDER_3D" },
              { "label": "SKETCH_BW", "value": "SKETCH_BW" },
              { "label": "SKETCH_COLOR", "value": "SKETCH_COLOR" }
            ],
            "index": 7,
            "sensitive": false
          },
          "pattern": "",
          "description": "The style to generate images with. When photoReal is enabled, refer to the [Guide section](https://docs.leonardo.ai/reference/creategeneration) for a full list.\n\nWhen alchemy is disabled, use `LEONARDO` or `NONE`. When alchemy is enabled, use `ANIME`, `CREATIVE`, `DYNAMIC`, `ENVIRONMENT`, `GENERAL`, `ILLUSTRATION`, `PHOTOGRAPHY`, `RAYTRACED`, `RENDER_3D`, `SKETCH_BW`, `SKETCH_COLOR`, or `NONE`.",
          "title": "Preset Style",
          "type": "string",
          "enum": [
            "NONE",
            "LEONARDO",
            "ANIME",
            "CREATIVE",
            "DYNAMIC",
            "ENVIRONMENT",
            "GENERAL",
            "ILLUSTRATION",
            "PHOTOGRAPHY",
            "RAYTRACED",
            "RENDER_3D",
            "SKETCH_BW",
            "SKETCH_COLOR"
          ]
        },
        "prompt": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The prompt used to generate images.\n\n**SAMPLE INPUT:**\n```\nA majestic cat in the snow\n```",
          "title": "Prompt",
          "type": "string"
        },
        "num_images": {
          "default": "1",
          "buildship": { "index": 6, "sensitive": false },
          "pattern": "",
          "description": "The number of images to generate. Must be between 1 and 8. If either `width` or `height` is over `768`, must be between 1 and 4.\n\n**Default:** `1`",
          "title": "Quantity",
          "type": "string"
        },
        "height": {
          "default": 1024,
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The input width of the images. Must be between `32` and `1024` and be a **multiple of 8**. Note: Input resolution is not always the same as output resolution due to upscaling from other features.\n\n**Default:** `1024`",
          "title": "Height",
          "type": "number"
        }
      }
    },
    "meta": {
      "name": "Generate Image",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      },
      "description": "This endpoint generates images with the given generation prompt and returns the Generation ID.",
      "id": "leonardo-generate-image"
    },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1715289929, "_nanoseconds": 45000000 }
    },
    "type": "script",
    "integrations": [],
    "dependencies": {},
    "live": true,
    "group": [
      {
        "uid": "leonardo-ai",
        "name": "Leonardo AI",
        "description": "Nodes for interacting with and using your Leonardo AI services and models.",
        "id": "leonardo-ai",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      }
    ],
    "groupInfo": "leonardo-ai",
    "category": ["Integrations"],
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715290010, "_nanoseconds": 153000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1715290010, "_nanoseconds": 199000000 }
    },
    "integrity": "v3:59895eeda6f1ded5e3e5c4569e171936",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-generate-image/1.1.0/build.cjs",
    "id": "leonardo-generate-image",
    "_libRef": {
      "integrity": "v3:2178b7c5055ab8246139cb6963491fb6",
      "libNodeRefId": "@buildship/leonardo-generate-image",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-generate-image/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "export default async function improvePrompt({\n  apiKey,\n  alchemy,\n  height,\n  width,\n  modelId,\n  num_images,\n  presetStyle,\n  prompt,\n}: NodeInputs) : NodeOutput  {\n  const response = await fetch(\n    \"https://cloud.leonardo.ai/api/rest/v1/generations\",\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${apiKey}`,\n        accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        alchemy: alchemy,\n        height: parseInt(height),\n        modelId: modelId,\n        num_images: parseInt(num_images),\n        presetStyle: presetStyle,\n        prompt: prompt,\n        width: parseInt(width),\n      }),\n    }\n  );\n\n  const responseData = await response.json();\n  return responseData.sdGenerationJob;\n}\n",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 53000000 },
    "usageCounter": 40
  },
  {
    "output": { "buildship": { "index": 0 }, "type": "string" },
    "inputs": {
      "type": "object",
      "required": ["prompt", "apiKey"],
      "properties": {
        "apiKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your API key for the Leonardo AI. [Learn More](https://docs.leonardo.ai/docs/create-your-api-key).",
          "title": "API Key",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Generate Prompt",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      },
      "description": "This endpoint returns a random image generation prompt.",
      "id": "leonardo-generate-prompt"
    },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1715283830, "_nanoseconds": 992000000 }
    },
    "type": "script",
    "integrations": [],
    "dependencies": {},
    "live": true,
    "group": [
      {
        "uid": "leonardo-ai",
        "name": "Leonardo AI",
        "description": "Nodes for interacting with and using your Leonardo AI services and models.",
        "id": "leonardo-ai",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      }
    ],
    "groupInfo": "leonardo-ai",
    "category": ["Integrations"],
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715284669, "_nanoseconds": 336000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1715284669, "_nanoseconds": 365000000 }
    },
    "failCount": 1,
    "integrity": "v3:afba532e6db0f453ba95fdb9b9a24cec",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-generate-prompt/1.1.0/build.cjs",
    "id": "leonardo-generate-prompt",
    "_libRef": {
      "integrity": "v3:c0bba4eef11e5a34121f9a6278aac118",
      "libNodeRefId": "@buildship/leonardo-generate-prompt",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-generate-prompt/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "export default async function generatePrompt({\n    apiKey\n}: NodeInputs) : NodeOutput  {\n    const response = await fetch('https://cloud.leonardo.ai/api/rest/v1/prompt/random', {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            accept: 'application/json',\n        }\n    });\n\n    const responseData = await response.json();\n    return responseData.promptGeneration.prompt;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 53000000 },
    "usageCounter": 13
  },
  {
    "output": { "buildship": { "index": 0 }, "type": "string" },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1715283127, "_nanoseconds": 252000000 }
    },
    "type": "script",
    "integrations": [],
    "dependencies": {},
    "group": [
      {
        "uid": "leonardo-ai",
        "name": "Leonardo AI",
        "description": "Nodes for interacting with and using your Leonardo AI services and models.",
        "id": "leonardo-ai",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      }
    ],
    "groupInfo": "leonardo-ai",
    "live": true,
    "category": ["Integrations"],
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715283192, "_nanoseconds": 731000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1715283192, "_nanoseconds": 756000000 }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "apiKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your API key for the Leonardo AI. [Learn More](https://docs.leonardo.ai/docs/create-your-api-key).",
          "title": "API Key",
          "type": "string"
        },
        "prompt": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The original prompt text that you want to improve.\n\n**SAMPLE INPUT:**\n```\nA painting portraying a road splitting into two paths, symbolizing the traveler's dilemma.\n```",
          "title": "Prompt",
          "type": "string"
        }
      },
      "required": ["apiKey", "prompt"]
    },
    "meta": {
      "name": "Improve Prompt",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      },
      "description": "This endpoint returns an improved image generation prompt.",
      "id": "leonardo-improve-prompt"
    },
    "failCount": 3,
    "integrity": "v3:00efc9837b9d4c9fe4609fb6efca1408",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-improve-prompt/1.1.0/build.cjs",
    "id": "leonardo-improve-prompt",
    "_libRef": {
      "integrity": "v3:e6f92e376a9f50670c21f2052265f147",
      "libNodeRefId": "@buildship/leonardo-improve-prompt",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-improve-prompt/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "export default async function improvePrompt({\n    apiKey,\n    prompt\n}: NodeInputs) : NodeOutput  {\n    const response = await fetch('https://cloud.leonardo.ai/api/rest/v1/prompt/improve', {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            prompt\n        })\n    });\n\n    const responseData = await response.json();\n    return responseData.promptGeneration.prompt;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 53000000 },
    "usageCounter": 13
  },
  {
    "output": { "buildship": { "index": 0 }, "description": "", "title": "", "type": "object", "properties": {} },
    "inputs": {
      "type": "object",
      "required": ["prompt", "fields", "fileBuffer", "fileName", "url"],
      "properties": {
        "fileName": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Name of the File to be uploaded.",
          "title": "File Name",
          "type": "string"
        },
        "fileBuffer": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The Buffer of the file to be uploaded.\n\n**TIP 💡:** Use the **Rest API File Upload Trigger** to receive multipart requests in BuildShip.",
          "title": "File Buffer",
          "type": "string"
        },
        "fields": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The raw fields from the **Upload Init Image** node.",
          "title": "Fields",
          "type": "string"
        },
        "url": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The signed url from the **Upload Init Image** node. The presigned URL expires in 2 minutes, so the method must be run within the first 2 minutes.",
          "title": "URL",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Upload Dataset Image",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      },
      "description": "This endpoint uploads the given file buffer to the signed URL provided by the  **Upload Init Image** node.\n\nDetailed instructions for using this endpoint are available in the guide: [How to upload an image using a presigned URL](https://docs.leonardo.ai/docs/how-to-upload-an-image-using-a-presigned-url).",
      "id": "leonardo-upload-dataset-image"
    },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1715462174, "_nanoseconds": 396000000 }
    },
    "type": "script",
    "integrations": [],
    "dependencies": {},
    "group": [
      {
        "uid": "leonardo-ai",
        "name": "Leonardo AI",
        "description": "Nodes for interacting with and using your Leonardo AI services and models.",
        "id": "leonardo-ai",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      }
    ],
    "groupInfo": "leonardo-ai",
    "category": ["Integrations"],
    "live": true,
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715462216, "_nanoseconds": 880000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1715462216, "_nanoseconds": 895000000 }
    },
    "integrity": "v3:7e52796835be7369c481b0196404f539",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-upload-dataset-image/1.1.0/build.cjs",
    "id": "leonardo-upload-dataset-image",
    "_libRef": {
      "integrity": "v3:cebba1d01fb1214a7523a3a3f256d2ea",
      "libNodeRefId": "@buildship/leonardo-upload-dataset-image",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-upload-dataset-image/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "function createFile(fileData, fileName) {\n    if (typeof fileData === 'string') {\n        // If fileData is a file path\n        return new Promise((resolve, reject) => {\n            fetch(fileData)\n                .then(response => response.blob())\n                .then(blob => {\n                    const file = new File([blob], fileName);\n                    resolve(file);\n                })\n                .catch(error => reject(error));\n        });\n    } else if (fileData instanceof ArrayBuffer || ArrayBuffer.isView(fileData)) {\n        // If fileData is a file buffer\n        const blob = new Blob([fileData]);\n        return Promise.resolve(new File([blob], fileName));\n    } else {\n        return Promise.reject(new Error('Invalid file data type'));\n    }\n}\n\nexport default async function uploadInitImage({\n    fileData,\n    fields,\n    url,\n    fileName\n}: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  {\n    const parsedFields = JSON.parse(fields);\n\n    const file = await createFile(fileData, fileName);\n\n    const formData = new FormData();\n    Object.entries({ ...parsedFields, file }).forEach(([key, value]) => {\n        formData.append(key, value as string);\n    });\n\n    const request = new XMLHttpRequest();\n    request.open('POST', url);\n\n    const result = await request.send(formData);\n    return result;\n}\n",
    "usageCounter": 15,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 53000000 }
  },
  {
    "output": {
      "buildship": { "index": 0 },
      "description": "",
      "title": "",
      "type": "object",
      "properties": {
        "id": { "buildship": { "index": 1 }, "description": "", "title": "id", "type": "string" },
        "fields": { "buildship": { "index": 0 }, "description": "", "title": "fields", "type": "string" },
        "key": { "buildship": { "index": 2 }, "description": "", "title": "key", "type": "string" },
        "url": { "buildship": { "index": 3 }, "description": "", "title": "url", "type": "string" }
      }
    },
    "inputs": {
      "type": "object",
      "required": ["prompt", "apiKey", "extension"],
      "properties": {
        "extension": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The file extension. Has to be `png`, `jpg`, `jpeg`, or `webp`.",
          "title": "Extension",
          "type": "string"
        },
        "apiKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your API key for the Leonardo AI. [Learn More](https://docs.leonardo.ai/docs/create-your-api-key).",
          "title": "API Key",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Upload Init Image",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      },
      "description": "This endpoint returns a random image generation prompt. Detailed instructions for using this endpoint are available in the guide: [How to upload an image using a presigned URL](https://docs.leonardo.ai/docs/how-to-upload-an-image-using-a-presigned-url).",
      "id": "leonardo-upload-init-image"
    },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1715461704, "_nanoseconds": 789000000 }
    },
    "type": "script",
    "integrations": [],
    "dependencies": {},
    "group": [
      {
        "uid": "leonardo-ai",
        "name": "Leonardo AI",
        "description": "Nodes for interacting with and using your Leonardo AI services and models.",
        "id": "leonardo-ai",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fleonardo-logo.png?alt=media&token=b1b25649-c77c-47e2-ab48-1db3675729a9"
      }
    ],
    "groupInfo": "leonardo-ai",
    "category": ["Integrations"],
    "live": true,
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715461791, "_nanoseconds": 393000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1715461791, "_nanoseconds": 417000000 }
    },
    "integrity": "v3:3ff8db0c78ada2869f93fd28e79a7312",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-upload-init-image/1.1.0/build.cjs",
    "id": "leonardo-upload-init-image",
    "_libRef": {
      "integrity": "v3:27805f54aefb6f6bf8fe4e5378727a16",
      "libNodeRefId": "@buildship/leonardo-upload-init-image",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/leonardo-upload-init-image/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "export default async function uploadInitImage({\n    apiKey,\n    extension\n}: NodeInputs) : NodeOutput  {\n    const response = await fetch('https://cloud.leonardo.ai/api/rest/v1/init-image', {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            accept: 'application/json',\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({extension: extension})\n    });\n\n    const responseData = await response.json();\n    return responseData.uploadInitImage;\n}",
    "usageCounter": 11,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 53000000 }
  }
]
