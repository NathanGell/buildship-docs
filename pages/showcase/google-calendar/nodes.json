[
  {
    "output": {
      "buildship": {},
      "description": "The response from the Google Calendar API",
      "title": "Google Calendar Response",
      "type": "object"
    },
    "inputs": {
      "type": "object",
      "required": ["attendees", "summary", "start", "end"],
      "properties": {
        "sendUpdates": {
          "default": "none",
          "buildship": {
            "options": [
              { "label": "All", "value": "all" },
              { "label": "External Only", "value": "externalOnly" },
              { "label": "None", "value": "none" }
            ],
            "index": 3,
            "sensitive": false
          },
          "pattern": "",
          "description": "Whether to send notifications about the creation of the new event. The default is false.",
          "title": "Send Updates",
          "type": "string",
          "enum": ["all", "externalOnly", "none"]
        },
        "summary": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Title of the event.",
          "title": "Title",
          "type": "string"
        },
        "attachments": {
          "default": [],
          "buildship": { "index": 9, "sensitive": false },
          "pattern": "",
          "description": "Array of attachments. Each attachment should have a 'fileUrl' property.\n\nSAMPLE INPUT:\n```\n[\n    {\n      \"fileId\": \"file123\",\n      \"fileUrl\": \"https://example.com/file123\",\n      \"mimeType\": \"application/pdf\",\n      \"title\": \"Sample PDF\"\n    }\n ]\n```",
          "title": "Attachments",
          "type": "array"
        },
        "calendarId": {
          "default": "primary",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Calendar identifier. Use 'primary' for the primary calendar of the currently logged in user.",
          "title": "Calendar ID",
          "type": "string"
        },
        "supportsAttachments": {
          "default": false,
          "buildship": { "index": 8, "sensitive": false },
          "pattern": "",
          "description": "Whether API client performing operation supports event attachments. Optional. The default is False.",
          "title": "Add Files",
          "type": "boolean"
        },
        "conferenceDataVersion": {
          "default": 0,
          "buildship": {
            "options": [
              { "label": "Yes", "value": "1" },
              { "label": "No", "value": "0" }
            ],
            "index": 4,
            "sensitive": false
          },
          "pattern": "",
          "description": "Version number of conference data supported by the API client. The default is 0. Acceptable values are 0 to 1, inclusive.",
          "title": "Conference?",
          "type": "string",
          "enum": ["1", "0"]
        },
        "attendees": {
          "default": [],
          "buildship": { "index": 5, "sensitive": false },
          "pattern": "",
          "description": "Array of attendees. Each attendee should have an 'email' property.\n\nSAMPLE INPUT:\n```\n[\n    {\n      email: 'example@example.com',\n      optional: false,\n      displayName: 'John Doe'\n    }\n ]\n```",
          "title": "Attendees",
          "type": "array"
        },
        "start": {
          "default": {},
          "buildship": { "index": 6, "sensitive": false },
          "pattern": "",
          "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.\n\nSAMPLE INPUT:\n```\n{\n    \"dateTime\":\"2024-01-06T09:00:00\",\n     \"timeZone\":\"UTC\"\n}\n```",
          "title": "Event Start Time",
          "type": "object",
          "properties": {}
        },
        "description": {
          "buildship": { "index": 2 },
          "description": "Description of the event. Can contain HTML. Optional.",
          "title": "Description",
          "type": "string"
        },
        "end": {
          "default": {},
          "buildship": { "index": 7, "sensitive": false },
          "pattern": "",
          "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.\n\nSAMPLE INPUT:\n```\n{\n    \"dateTime\":\"2024-01-06T10:00:00\",\n     \"timeZone\":\"UTC\"\n}\n```",
          "title": "Event End Time",
          "type": "object",
          "properties": {}
        }
      }
    },
    "meta": {
      "name": "Create Event",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      },
      "description": "Creates a new event on Google Calendar",
      "id": "oauth-gcal-create-event"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "category": ["Integrations"],
    "group": [
      {
        "name": "Google Calendar",
        "description": "OAuth Nodes for utilizing the Google Calendar API to retrieve and perform operations based on your Google Calendars.",
        "id": "0IAjU2tekQHjibkvicot",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      }
    ],
    "integrations": ["gcal"],
    "t": 384,
    "syncAllAtOnce": "910",
    "live": true,
    "syncIndex": {
      "ranBy": "harini@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1710470590, "_nanoseconds": 802000000 }
    },
    "deployToBucket": {
      "ranBy": "harini@rowy.io.rowy",
      "completedAt": { "_seconds": 1710472197, "_nanoseconds": 585000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 486000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicot",
    "failCount": 4,
    "id": "oauth-gcal-create-event",
    "integrity": "v3:e4792ac122535c4d069374940077e521",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-create-event/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:a50b15b68a016ad93f48f4d7e877efdf",
      "libNodeRefId": "@buildship/oauth-gcal-create-event",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-create-event/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import fetch from 'node-fetch';\n\nexport default async function createGoogleCalendarEvent({ \n  calendarId, \n  conferenceDataVersion, \n  sendUpdates,\n  supportsAttachments,\n  start,\n  end,\n  attachments,\n  attendees,\n  description,\n  summary\n}: NodeInputs, { queryParams = {}, auth }: NodeScriptOptions) : NodeOutput  {\n    const { access_token } = await auth.getToken();\n    const query = new URLSearchParams({\n        conferenceDataVersion,\n        sendUpdates,\n        supportsAttachments,\n        ...queryParams\n    });\n\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${query.toString()}`;\n\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            Authorization: `Bearer ${access_token}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ start, end, attachments, attendees, description, summary })\n    });\n    return response.json();\n}\n",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 56000000 },
    "usageCounter": 337
  },
  {
    "output": {
      "buildship": {},
      "description": "Confirmation of event deletion",
      "title": "Deletion Confirmation",
      "type": "object",
      "properties": {
        "success": { "buildship": {}, "title": "Success", "type": "boolean" },
        "message": { "buildship": {}, "title": "Message", "type": "string" }
      }
    },
    "inputs": {
      "type": "object",
      "required": ["calendarId", "eventId"],
      "properties": {
        "sendUpdates": {
          "default": "none",
          "buildship": {
            "options": [
              { "label": "All Guests", "value": "all" },
              { "label": "External Guests Only", "value": "externalOnly" },
              { "label": "No Notifications", "value": "none" }
            ],
            "index": 2
          },
          "description": "Guests who should receive notifications about the deletion of the event.",
          "title": "Send Updates",
          "type": "string",
          "enum": ["all", "externalOnly", "none"]
        },
        "eventId": {
          "default": "",
          "buildship": { "index": 1 },
          "description": "The ID of the event in the Google Calendar.",
          "title": "Event ID",
          "type": "string"
        },
        "calendarId": {
          "default": "primary",
          "buildship": { "index": 0 },
          "description": "Calendar identifier. Use `primary` for the primary calendar of the currently logged in user.",
          "title": "Calendar ID",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Delete Event",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      },
      "description": "Delete a specific event from a Google Calendar",
      "id": "oauth-gcal-delete-event"
    },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1714338917, "_nanoseconds": 814000000 }
    },
    "type": "script",
    "integrations": ["gcal"],
    "dependencies": {},
    "group": [
      {
        "uid": "google-calendar",
        "name": "Google Calendar",
        "description": "OAuth Nodes for utilizing the Google Calendar API to retrieve and perform operations based on your Google Calendars.",
        "id": "0IAjU2tekQHjibkvicot",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      }
    ],
    "groupInfo": "0IAjU2tekQHjibkvicot",
    "category": ["Integrations"],
    "live": true,
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1714338940, "_nanoseconds": 191000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1714338940, "_nanoseconds": 224000000 }
    },
    "integrity": "v3:cdafc3fb2b72f7fd9ff263b8774eb717",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-delete-event/1.1.0/build.cjs",
    "id": "oauth-gcal-delete-event",
    "_libRef": {
      "integrity": "v3:9971d457279577f216be4bea0c3313e6",
      "libNodeRefId": "@buildship/oauth-gcal-delete-event",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-delete-event/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "export default async function deleteGoogleCalendarEvent({\n    calendarId,\n    eventId,\n    sendUpdates\n}: NodeInputs, {\n    auth\n}: NodeScriptOptions) : NodeOutput  {\n    const {\n        access_token\n    } = await auth.getToken();\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${eventId}?sendUpdates=${sendUpdates}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': `Bearer ${access_token}`\n        }\n    });\n    if (!response.ok) throw new Error('Failed to delete event');\n    return {\n        success: true,\n        message: 'Event deleted successfully'\n    };\n}",
    "usageCounter": 11,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 56000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Google Calendar API",
      "title": "Google Calendar Event",
      "type": "object"
    },
    "inputs": {
      "type": "object",
      "required": ["calendarId", "eventId"],
      "properties": {
        "eventId": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The ID of the event in the Google Calendar. \n\nTIP 💡: Get your Event IDs from the \"Get Events\" node from the Node Library.",
          "title": "Event ID",
          "type": "string"
        },
        "calendarId": {
          "default": "primary",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "Calendar identifier. Use `primary` for the primary calendar of the currently logged in user.",
          "title": "Calendar ID",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Get Event Details",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      },
      "description": "Fetch a specific event from a Google Calendar",
      "id": "oauth-gcal-get-event"
    },
    "type": "script",
    "dependencies": {},
    "category": ["Integrations"],
    "group": [
      {
        "name": "Google Calendar",
        "description": "OAuth Nodes for utilizing the Google Calendar API to retrieve and perform operations based on your Google Calendars.",
        "id": "0IAjU2tekQHjibkvicot",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      }
    ],
    "integrations": ["gcal"],
    "t": 387,
    "syncAllAtOnce": "1008",
    "live": true,
    "deployToBucket": {
      "ranBy": "harini@rowy.io.rowy",
      "completedAt": { "_seconds": 1710472200, "_nanoseconds": 624000000 }
    },
    "syncIndex": {
      "ranBy": "harini@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1710472254, "_nanoseconds": 878000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 486000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicot",
    "id": "oauth-gcal-get-event",
    "integrity": "v3:f10bbc9243676c029a244c3e3724cbfc",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-get-event/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:a1ecc05a4ab41ae5ea6455aaa056a425",
      "libNodeRefId": "@buildship/oauth-gcal-get-event",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-get-event/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "export default async function fetchGoogleCalendarEvent({\n    calendarId,\n    eventId\n}: NodeInputs,{\n  auth\n}: NodeScriptOptions) : NodeOutput  {\n    const { access_token } = await auth.getToken();\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${eventId}`, {\n      method: 'GET',\n      headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    });\n    const data = await response.json();\n    return data;\n}",
    "failCount": 5,
    "usageCounter": 71,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 56000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Google Calendar API",
      "title": "Google Calendar Response",
      "type": "object"
    },
    "meta": {
      "name": "Get Events",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      },
      "description": "Fetches events from a Google Calendar using the specified calendarId",
      "id": "oauth-gcal-get-events"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "category": ["Integrations"],
    "group": [
      {
        "name": "Google Calendar",
        "description": "OAuth Nodes for utilizing the Google Calendar API to retrieve and perform operations based on your Google Calendars.",
        "id": "0IAjU2tekQHjibkvicot",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      }
    ],
    "integrations": ["gcal"],
    "t": 364,
    "syncAllAtOnce": "1047",
    "live": true,
    "deployToBucket": {
      "ranBy": "harini@rowy.io.rowy",
      "completedAt": { "_seconds": 1710472203, "_nanoseconds": 585000000 }
    },
    "syncIndex": {
      "ranBy": "harini@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1710472256, "_nanoseconds": 736000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicot",
    "id": "oauth-gcal-get-events",
    "_libRef": {
      "integrity": "v3:ac145e37330f3b8c1f75f2cea3e9a8b3",
      "libNodeRefId": "@buildship/oauth-gcal-get-events",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-get-events/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "failCount": 4,
    "script": "import fetch from 'node-fetch';\nexport default async function fetchGoogleCalendarEvents({\n    calendarId,\n    timeMin,\n    timeMax\n}: NodeInputs, {\n  auth\n}: NodeScriptOptions) : NodeOutput  {\n    const { access_token } = await auth.getToken();\n    let addRange;\n\n    if(timeMin && timeMax){\n      addRange = `&timeMin=${encodeURIComponent(timeMin)}&timeMax=${encodeURIComponent(timeMax)}`\n    }\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?orderBy=startTime&singleEvents=true&sortOrder=descending${addRange}`, {\n      method: 'GET',\n      headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${access_token}`\n        }\n    });\n    const data = await response.json();\n    return data;\n}",
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1716803353, "_nanoseconds": 225000000 }
    },
    "integrity": "v3:86695fdc992bd15b65add2dcec044381",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-get-events/1.2.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["calendarId"],
      "properties": {
        "calendarId": {
          "default": "primary",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The identifier for the calendar. Use `primary` for the primary calendar of the currently logged in user.",
          "title": "Calendar ID",
          "type": "string"
        },
        "timeMax": {
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Dates need to be in the ISO 8601 format, which look like this: YYYY-MM-DDTHH:MM:SSZ. \n\n**SAMPLE INPUTS:**\n\n**For May 1, 2024, at 00:00:00 UTC:**\n`2024-05-01T00:00:00Z`\n\n\n**For May 31, 2024, at 23:59:59 UTC:**\n`2024-05-31T23:59:59Z`",
          "title": "End Date",
          "type": "string"
        },
        "timeMin": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Dates need to be in the ISO 8601 format, which look like this: YYYY-MM-DDTHH:MM:SSZ. \n\n**SAMPLE INPUTS:**\n\n**For May 1, 2024, at 00:00:00 UTC:**\n`2024-05-01T00:00:00Z`\n\n\n**For May 31, 2024, at 23:59:59 UTC:**\n`2024-05-31T23:59:59Z`",
          "title": "Start Date",
          "type": "string"
        }
      }
    },
    "version": "1.2.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 57000000 },
    "usageCounter": 161
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Google Calendar API",
      "title": "API Response",
      "type": "object"
    },
    "inputs": { "type": "object", "properties": {}, "required": [] },
    "meta": {
      "name": "List Calendars",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      },
      "description": "Sends a GET request to Google Calendar API to fetch the list of calendars",
      "id": "oauth-gcal-list"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "category": ["Integrations"],
    "group": [
      {
        "name": "Google Calendar",
        "description": "OAuth Nodes for utilizing the Google Calendar API to retrieve and perform operations based on your Google Calendars.",
        "id": "0IAjU2tekQHjibkvicot",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      }
    ],
    "integrations": ["gcal"],
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1704401753, "_nanoseconds": 282000000 }
    },
    "t": 224,
    "syncAllAtOnce": "1051",
    "live": true,
    "syncIndex": {
      "ranBy": "harini@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1710472258, "_nanoseconds": 299000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 486000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicot",
    "id": "oauth-gcal-list",
    "integrity": "v3:fa76b27bde43f4a85c178863fc07b567",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-list/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:a13cdf2f0ed3dc497232a29b0119ea00",
      "libNodeRefId": "@buildship/oauth-gcal-list",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-list/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import fetch from 'node-fetch';\nexport default async function fetchGoogleCalendarList({_}: NodeInputs, { auth }: NodeScriptOptions) : NodeOutput  {\n    const { access_token } = await auth.getToken();\n    const response = await fetch('https://www.googleapis.com/calendar/v3/users/me/calendarList', {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${access_token}`\n        }\n    });\n    const data = await response.json();\n    return data;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 57000000 },
    "usageCounter": 215
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Google Calendar API",
      "title": "Google Calendar Response",
      "type": "object"
    },
    "inputs": {
      "type": "object",
      "required": ["calendarId", "eventId", "summary", "end", "start"],
      "properties": {
        "sendUpdates": {
          "default": "none",
          "buildship": {
            "options": [
              { "label": "All", "value": "all" },
              { "label": "External Only", "value": "externalOnly" },
              { "label": "None", "value": "none" }
            ],
            "index": 9
          },
          "description": "Guests who should receive notifications about the event update.",
          "title": "Send Updates",
          "type": "string",
          "enum": ["all", "externalOnly", "none"]
        },
        "summary": {
          "buildship": { "index": 2 },
          "description": "Title of the event.",
          "title": "Title",
          "type": "string"
        },
        "eventId": {
          "buildship": { "index": 1 },
          "description": "Event identifier.",
          "title": "Event ID",
          "type": "string"
        },
        "attachments": {
          "default": [],
          "buildship": { "index": 11 },
          "description": "Array of attachments. Each attachment should have a 'fileUrl' property.",
          "title": "Attachments",
          "type": "array"
        },
        "calendarId": {
          "default": "primary",
          "buildship": { "index": 0 },
          "description": "Calendar identifier. Use 'primary' for the primary calendar of the currently logged in user.",
          "title": "Calendar ID",
          "type": "string"
        },
        "supportsAttachments": {
          "default": false,
          "buildship": { "index": 10 },
          "description": "Whether API client performing operation supports event attachments. Optional. The default is False.",
          "title": "Supports Attachments",
          "type": "boolean"
        },
        "conferenceDataVersion": {
          "default": "0",
          "buildship": {
            "options": [
              { "label": "No Conference", "value": "0" },
              { "label": "Conference", "value": "1" }
            ],
            "index": 8,
            "sensitive": false
          },
          "pattern": "",
          "description": "Version number of conference data supported by the API client. Acceptable values are 0 to 1, inclusive.",
          "title": "Conference Data Version",
          "type": "string",
          "enum": ["0", "1"]
        },
        "attendees": {
          "default": [],
          "buildship": { "index": 5, "sensitive": false },
          "pattern": "",
          "description": "Array of attendees. Each attendee should have an 'email' property.\n\nSAMPLE INPUT:\n```\n[\n    {\n      email: 'example@example.com',\n      optional: false,\n      displayName: 'John Doe'\n    }\n ]\n```",
          "title": "Attendees",
          "type": "array"
        },
        "start": {
          "default": {},
          "buildship": { "index": 6, "sensitive": false },
          "pattern": "",
          "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.\n\nSAMPLE INPUT:\n```\n{\n    \"dateTime\":\"2024-01-06T09:00:00\",\n     \"timeZone\":\"UTC\"\n}\n```",
          "title": "Event Start Time",
          "type": "object",
          "properties": {}
        },
        "description": {
          "buildship": { "index": 3 },
          "description": "Description of the event. Can contain HTML. Optional.",
          "title": "Description",
          "type": "string"
        },
        "end": {
          "default": {},
          "buildship": { "index": 7, "sensitive": false },
          "pattern": "",
          "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.\n\nSAMPLE INPUT:\n```\n{\n    \"dateTime\":\"2024-01-06T10:00:00\",\n     \"timeZone\":\"UTC\"\n}\n```",
          "title": "Event End Time",
          "type": "object",
          "properties": {}
        },
        "maxAttendees": {
          "default": 10,
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The maximum number of attendees to include in the response. Optional.",
          "title": "Max Attendees",
          "type": "number"
        }
      }
    },
    "meta": {
      "name": "Update Event",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      },
      "description": "Updates an event on Google Calendar with additional parameters.",
      "id": "oauth-gcal-update-event"
    },
    "_createdBy": {
      "displayName": "Save to Library",
      "timestamp": { "_seconds": 1714337655, "_nanoseconds": 726000000 }
    },
    "type": "script",
    "integrations": ["gcal"],
    "dependencies": { "node-fetch": "2.7.0" },
    "group": [
      {
        "uid": "google-calendar",
        "name": "Google Calendar",
        "description": "OAuth Nodes for utilizing the Google Calendar API to retrieve and perform operations based on your Google Calendars.",
        "id": "0IAjU2tekQHjibkvicot",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fgoogle-cal.png?alt=media&token=c8f58512-3518-42e8-afd7-f3cb461e230d"
      }
    ],
    "groupInfo": "0IAjU2tekQHjibkvicot",
    "category": ["Integrations"],
    "live": true,
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1714337677, "_nanoseconds": 432000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1714337677, "_nanoseconds": 465000000 }
    },
    "integrity": "v3:8c319cb455c00cd777c1e7702dbb1e1d",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-update-event/1.1.0/build.cjs",
    "id": "oauth-gcal-update-event",
    "_libRef": {
      "integrity": "v3:166744ace4845af99eb04ae19894dac6",
      "libNodeRefId": "@buildship/oauth-gcal-update-event",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/oauth-gcal-update-event/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "version": "1.1.0",
    "script": "import fetch from 'node-fetch';\n\nexport default async function updateGoogleCalendarEvent({\n    calendarId,\n    eventId,\n    conferenceDataVersion,\n    maxAttendees,\n    sendUpdates,\n    supportsAttachments,\n    start,\n    end,\n    attachments,\n    attendees,\n    description,\n    summary\n}: NodeInputs, {\n    auth\n}: NodeScriptOptions) : NodeOutput  {\n    const {\n        access_token\n    } = await auth.getToken();\n    const query = new URLSearchParams({\n        conferenceDataVersion,\n        maxAttendees,\n        sendUpdates,\n        supportsAttachments\n    });\n\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${eventId}?${query.toString()}`, {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${access_token}`\n        },\n        body: JSON.stringify({\n            start,\n            end,\n            attachments,\n            attendees,\n            description,\n            summary\n        })\n    });\n\n    return response.json();\n}",
    "usageCounter": 15,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 57000000 }
  }
]
