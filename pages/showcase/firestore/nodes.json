[
  {
    "output": {
      "buildship": {},
      "description": "The response from the Firestore set operation",
      "type": "object",
      "title": "Firestore Response",
      "properties": { "status": { "buildship": {}, "type": "string", "title": "Status" } }
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "t": 110,
    "syncAllAtOnce": "892",
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1708061772, "_nanoseconds": 238000000 }
    },
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708072016, "_nanoseconds": 908000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "create-firestore-document",
    "_libRef": {
      "integrity": "v3:31e96cdcd19bd1d74f2608370765799f",
      "libNodeRefId": "@buildship/create-firestore-document",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/create-firestore-document/1.1.1/build.cjs",
      "version": "1.1.1"
    },
    "script": "import { Firestore } from '@google-cloud/firestore';\n\nexport default async function createDocument({\n    collectionName,\n    id,\n    data,\n    merge,\n    projectId\n}: NodeInputs) : NodeOutput  {\n    console.log(\"createDocument\")\n    const firestore = new Firestore(projectId && projectId.length >1?{\n    projectId:projectId.trim()\n    }:undefined);\n    if(id){\n    await firestore.collection(collectionName).doc(id).set(data, {\n        merge\n    });\n    return {\n        id,\n        path:`${collectionName}/${id}`,\n        status: 'success!'\n    };\n    }else{\n        const ref = await firestore.collection(collectionName).add(data);\n    return {\n        id:ref.id,\n        path:ref.path,\n        status: 'success!'\n    };\n    }\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 44000000 },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717574157, "_nanoseconds": 224000000 }
    },
    "integrity": "v3:ada081b9504f2365568358b6215c2382",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/create-firestore-document/1.2.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["projectId", "collectionName", "merge", "data"],
      "properties": {
        "data": {
          "default": {},
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The data to set in the document.\n\n**SAMPLE INPUT:**\n```\n{\n    \"name\": \"John\",\n    \"age\": 30,\n    \"city\": \"New York\"\n}\n```",
          "title": "Data",
          "type": "object",
          "properties": {}
        },
        "merge": {
          "default": false,
          "buildship": { "index": 3 },
          "description": "Whether to merge the data with any existing document",
          "title": "Merge",
          "type": "boolean"
        },
        "id": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Manually set the document ID of the new Firestore Document.\n\nNOTE: Leave this field blank for auto-generated Document IDs.",
          "title": "Document ID",
          "type": "string"
        },
        "projectId": {
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "type": "string",
          "title": "Project ID"
        },
        "collectionName": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "type": "string",
          "title": "Collection Name"
        }
      }
    },
    "meta": {
      "name": "Create Document",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Creates or updates a document in a specified Firestore collection",
      "id": "create-firestore-document"
    },
    "version": "1.2.1",
    "failCount": 4095,
    "usageCounter": 1932
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Firebase auth getUserByEmail",
      "type": "object",
      "title": "Firebase User",
      "properties": {
        "uid": { "buildship": { "index": 0 }, "type": "string", "title": "UID" },
        "email_verified": { "buildship": { "index": 1 }, "type": "boolean", "title": "Email Verified" },
        "name": { "buildship": { "index": 2 }, "type": "string", "title": "Name" },
        "exp": { "buildship": { "index": 3 }, "type": "string", "title": "Expiration Time" },
        "iat": { "buildship": { "index": 4 }, "type": "string", "title": "Issued At" },
        "email": { "buildship": { "index": 5 }, "type": "string", "title": "Email" }
      }
    },
    "type": "script",
    "dependencies": { "firebase-admin": "11.11.0" },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase-plain.svg?alt=media&token=d69969cc-2fc0-41bc-921b-39d8939f76cd"
      }
    ],
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701680896, "_nanoseconds": 354000000 }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "projectId": {
          "default": "",
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of the Google Cloud project. For more information, read our [Firebase Integration blog](https://docs.buildship.com/tutorials/firebase-project).\n\nNOTE: Requires `Cloud Datastore User` and `Firebase Admin SDK Administrator Service Agent` [roles assigned to the Service Account.](https://docs.buildship.com/tutorials/firebase-project)",
          "title": "Project ID",
          "type": "string"
        },
        "email": {
          "buildship": { "index": 1 },
          "description": "The email of the firebase user",
          "title": "Email",
          "type": "string"
        }
      },
      "required": ["email", "projectId"]
    },
    "t": 239,
    "syncAllAtOnce": "889",
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067489, "_nanoseconds": 415000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 479000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "fetch-firebase-user-with-email",
    "_libRef": {
      "integrity": "v3:dfbfc5a587f6177835da1a4e24171153",
      "libNodeRefId": "@buildship/fetch-firebase-user-with-email",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/fetch-firebase-user-with-email/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import {\n    getApps,\n    initializeApp\n} from \"firebase-admin/app\";\nimport {\n    getAuth\n} from \"firebase-admin/auth\";\n\nexport default async function fetchFirebaseUserData({\n    email,\n    projectId\n}: NodeInputs, {\n    logging\n}: NodeScriptOptions) : NodeOutput  {\n    const alreadyCreatedApps = getApps();\n    const app =\n        alreadyCreatedApps.length === 0 ?\n        initializeApp({\n            projectId: projectId && projectId.length > 1 ? projectId.trim() : undefined,\n        }) :\n        alreadyCreatedApps[0];\n    const auth = getAuth(app);\n\n    try {\n        const user = await auth.getUserByEmail(email);\n\n        return user;\n    } catch (error) {\n        logging.log(\"Error fetching user data:\", error);\n\n        throw error; // Re-throw the error for handling at a higher level if needed\n    }\n}",
    "integrity": "v3:31cf84421b2f3ddddb3f18928bad9f4d",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/fetch-firebase-user-with-email/1.1.1/build.cjs",
    "meta": {
      "name": "Get User Data With Email",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Fetch user data from Firebase Auth based given their email",
      "id": "fetch-firebase-user-with-email"
    },
    "version": "1.1.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 45000000 },
    "failCount": 29,
    "usageCounter": 245
  },
  {
    "output": {
      "buildship": {},
      "type": "object",
      "properties": {
        "success": {
          "buildship": {},
          "description": "Indicates if the object was added to the array successfully",
          "type": "boolean",
          "title": "Success"
        }
      }
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "inputs": {
      "type": "object",
      "properties": {
        "fieldKey": {
          "buildship": { "index": 3 },
          "description": "The key of the array field in the document",
          "title": "Field Key",
          "type": "string"
        },
        "documentID": {
          "buildship": { "index": 2 },
          "description": "The ID of the document containing the array field",
          "title": "Document ID",
          "type": "string"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firebase project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        },
        "object": {
          "default": {},
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The object to add to the array.\nEg: `\"hobbies\": [\"Reading\", \"Traveling\"]`",
          "title": "Object",
          "type": "object"
        }
      },
      "required": ["projectId", "collectionName", "documentID", "fieldKey", "object"]
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701687254, "_nanoseconds": 288000000 }
    },
    "t": 340,
    "syncAllAtOnce": "967",
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708072018, "_nanoseconds": 704000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "firestore-array-union",
    "_libRef": {
      "integrity": "v3:b37139f1003b3414a794f62541895e21",
      "libNodeRefId": "@buildship/firestore-array-union",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-array-union/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import { Firestore, FieldValue } from '@google-cloud/firestore';\n\nexport default async function addObjectToArray({\n  collectionName,\n  documentID,\n  fieldKey,\n  object,\n  projectId\n}: NodeInputs) : NodeOutput  {\n  try {\n    const firestore = new Firestore(projectId && projectId.length > 1 ? {\n      projectId: projectId.trim()\n    } : undefined);\n  \n    const fieldValue = FieldValue;\n  \n    await firestore\n      .collection(collectionName)\n      .doc(documentID)\n      .update({ [fieldKey]: fieldValue.arrayUnion(object) });\n  \n    return { success: true };\n  }\n  catch (e){\n    return e;\n  }\n}\n",
    "integrity": "v3:a418c867584f58d51ccd90aeb48b7aad",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-array-union/1.1.1/build.cjs",
    "meta": {
      "name": "Add Object to Firestore Array",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Adds an object to an existing array in a Firestore document",
      "id": "firestore-array-union"
    },
    "version": "1.1.1",
    "failCount": 2,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 47000000 },
    "usageCounter": 498
  },
  {
    "output": {
      "buildship": {},
      "description": "The array of documents that match the query",
      "type": "array",
      "title": "Documents",
      "properties": {
        "data": { "buildship": {}, "type": "object", "title": "Document Data" },
        "id": { "buildship": {}, "type": "string", "title": "Document ID" }
      }
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701686528, "_nanoseconds": 550000000 }
    },
    "t": 277,
    "syncAllAtOnce": "1006",
    "integrations": [],
    "id": "firestore-collection-query",
    "_libRef": {
      "integrity": "v3:c2856020129f633004a566b576e2d0bd",
      "libNodeRefId": "@buildship/firestore-collection-query",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-collection-query/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import { Firestore } from '@google-cloud/firestore';\n\nexport default async function firestoreQueryDocuments(\n  {\n    collection,\n    filters = [],\n    limit,\n    orderBy = [],\n    projectId // Optional project ID parameter\n  }: NodeInputs,\n  {}\n: NodeScriptOptions) : NodeOutput  {\n  const firestore = new Firestore(projectId && projectId.length > 1 ? {\n    projectId: projectId.trim()\n  } : undefined);\n\n  let query = firestore.collection(collection);\n\n  orderBy.forEach(orderObj => {\n    for (const [field, direction] of Object.entries(orderObj)) {\n      const lowerCaseDirection = direction.toLowerCase();\n      if (lowerCaseDirection === 'asc' || lowerCaseDirection === 'desc')\n        query = query.orderBy(field, lowerCaseDirection);\n    }\n  });\n\n  // Validate that filters exist and each filter has necessary properties\n  if (Array.isArray(filters)) {\n    filters.forEach(filter => {\n      if (filter.field && filter.operator && filter.hasOwnProperty('value')) {\n        query = query.where(filter.field, filter.operator, filter.value);\n      }\n    });\n  }\n\n  let snapshot = await query.limit(limit ?? 100).get();\n  return snapshot.docs.map(doc => ({\n    id: doc.id,\n    data: doc.data()\n  }));\n}\n",
    "meta": {
      "name": "Firestore Collection Query",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Get documents of a query in Firestore with multiple filters",
      "id": "firestore-collection-query"
    },
    "integrity": "v3:305d258943a07edec9c9a2dd4999af4f",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-collection-query/1.1.2/build.cjs",
    "inputs": {
      "type": "object",
      "properties": {
        "limit": {
          "default": "",
          "buildship": { "index": 3 },
          "description": "Maximum number of returned documents",
          "title": "Limit",
          "type": "number"
        },
        "orderBy": {
          "default": [],
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "Order results in desc or asc order.\nEg: `[{fieldName: \"asc\"}]` or `[{fieldName: \"desc\"}]`",
          "title": "Order By",
          "type": "array"
        },
        "collection": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        },
        "filters": {
          "default": [{ "field": "", "value": "", "operator": "" }],
          "buildship": { "index": 2 },
          "description": "The array of filter objects, each object includes {field, operator, value}[]",
          "title": "Filters",
          "type": "array"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        }
      },
      "required": ["projectId", "collection", "filters"]
    },
    "version": "1.1.2",
    "syncIndex": {
      "ranBy": "gaurav@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1716238268, "_nanoseconds": 187000000 }
    },
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      }
    ],
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "_updatedBy": {
      "uid": "bf2TgbfNuQfyc9EgggpEcaX9BSN2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AEdFTp73Ms1q-ebF-uCWJrNHfBIkHSfbm_MJt8JHfzYx=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Anish Roy",
      "email": "anish@rowy.io.rowy",
      "timestamp": { "_seconds": 1716847655, "_nanoseconds": 405000000 }
    },
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 47000000 },
    "failCount": 244,
    "usageCounter": 1651
  },
  {
    "output": {
      "buildship": {},
      "description": "The count of documents that match the query",
      "type": "object",
      "title": "Count",
      "properties": {}
    },
    "type": "script",
    "category": ["Integrations"],
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "inputs": {
      "type": "object",
      "properties": {
        "collection": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "type": "string",
          "title": "Collection"
        },
        "filters": {
          "default": [{}],
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The array of filter objects, each object includes {field, operator, value}[]\n\nSAMPLE INPUT: \n```\n[{\"field\":\"Name\",\"operator\":\"==\",\"value\":\"Alice\"}]\n```",
          "title": "Filters",
          "type": "array"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "type": "string",
          "title": "Project ID"
        }
      },
      "required": ["projectId", "collection", "filters"]
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701685556, "_nanoseconds": 266000000 }
    },
    "t": 287,
    "syncAllAtOnce": "1058",
    "live": true,
    "featured": false,
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067500, "_nanoseconds": 153000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "firestore-count-query",
    "_libRef": {
      "integrity": "v3:3f42b67807b8098bae3936a29b87cb6d",
      "libNodeRefId": "@buildship/firestore-count-query",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-count-query/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import { Firestore } from '@google-cloud/firestore';\nexport default async function firestoreQueryCount({\n    collection,\n    filters,\n    projectId\n}: NodeInputs) : NodeOutput  {\n    try {\n      const db = new Firestore(projectId && projectId.length > 1 ? {\n        projectId: projectId.trim()\n      } : undefined);\n  \n      let query = db.collection(collection);\n      filters.forEach(filter => {\n          query = query.where(filter.field, filter.operator, filter.value);\n      });\n      let snapshot = await query.count().get();\n      return snapshot.data().count;\n    }\n    catch(e){\n      return e;\n    }\n}",
    "integrity": "v3:428d7b2067bf0f2c64fbca1e946e8e12",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-count-query/1.1.1/build.cjs",
    "meta": {
      "name": "Firestore Query Count",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Get server count of a query in Firestore with multiple filters",
      "id": "firestore-count-query"
    },
    "version": "1.1.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 47000000 },
    "usageCounter": 305
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Firestore set operation",
      "title": "Firestore Response",
      "type": "object",
      "properties": { "status": { "buildship": {}, "title": "Status", "type": "string" } }
    },
    "integrity": "v3:eb7e58c79a72b1f5fbc15a33376699e6",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-create-doc-ref/1.2.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["projectId", "collectionName", "merge", "data"],
      "properties": {
        "data": {
          "default": {},
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The data to set in the document. To create add a document reference field, just add in the path to the document.\n\n**SAMPLE INPUT:**\n```\n{\n  price: 24, \n  status: \"pending\",\n  ref: \"customers/D5KjdTWkV9YeY3CXHApo\" // this is a doc ref field\n}\n```",
          "title": "Data",
          "type": "object",
          "properties": {}
        },
        "merge": {
          "default": false,
          "buildship": { "index": 3 },
          "description": "Whether to merge the data with any existing document",
          "title": "Merge",
          "type": "boolean"
        },
        "id": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Manually set the document ID of the new Firestore Document.\n\nNOTE: Leave this field blank for auto-generated Document IDs.",
          "title": "Document ID",
          "type": "string"
        },
        "projectId": {
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Create Document (with Doc Ref)",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Creates or updates a document in a specified Firestore collection (with Document Reference field type support).",
      "id": "firestore-create-doc-ref"
    },
    "_createdBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717531210, "_nanoseconds": 891000000 }
    },
    "type": "script",
    "integrations": [],
    "version": "1.2.1",
    "script": "import { Firestore, DocumentReference } from '@google-cloud/firestore';\n\nfunction convertDataToReferences(firestore: Firestore, data: Record<string, any>): Record<string, any> {\n  const convertedData: Record<string, any> = {};\n  for (const key in data) {\n    const value = data[key];\n    if (typeof value === 'string' && value.includes('/')) {\n      try {\n        const ref = firestore.doc(value);\n        if (ref instanceof DocumentReference) {\n          convertedData[key] = ref;\n        } else {\n          convertedData[key] = value;\n        }\n      } catch (error) {\n        convertedData[key] = value;\n      }\n    } else if (typeof value === 'object' && value !== null) {\n      convertedData[key] = convertDataToReferences(firestore, value);\n    } else {\n      convertedData[key] = value;\n    }\n  }\n  return convertedData;\n}\n\nexport default async function createDocument({\n  collectionName,\n  id,\n  data,\n  merge,\n  projectId\n}: NodeInputs): NodeOutput {\n  console.log(\"createDocument\");\n  const firestore = new Firestore(\n    projectId && projectId.length > 1 ? { projectId: projectId.trim() } : undefined\n  );\n\n  const convertedData = convertDataToReferences(firestore, data);\n\n  if (id) {\n    await firestore.collection(collectionName).doc(id).set(convertedData, { merge });\n    return {\n      id,\n      path: `${collectionName}/${id}`,\n      status: 'success!'\n    };\n  } else {\n    const ref = await firestore.collection(collectionName).add(convertedData);\n    return {\n      id: ref.id,\n      path: ref.path,\n      status: 'success!'\n    };\n  }\n}",
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      }
    ],
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "category": ["Integrations"],
    "live": true,
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717531325, "_nanoseconds": 487000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1717531325, "_nanoseconds": 509000000 }
    },
    "usageCounter": 4
  },
  {
    "output": {
      "buildship": {},
      "type": "object",
      "properties": {
        "status": {
          "buildship": {},
          "description": "The status of the document deletion",
          "type": "string",
          "title": "Status"
        }
      }
    },
    "inputs": {
      "type": "object",
      "properties": {
        "id": {
          "buildship": { "index": 2 },
          "description": "The ID of the document to be deleted",
          "title": "Document ID",
          "type": "string"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        }
      },
      "required": ["projectId", "collectionName", "id"]
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "t": 333,
    "syncAllAtOnce": "1020",
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067498, "_nanoseconds": 729000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 480000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "firestore-delete-document",
    "_libRef": {
      "integrity": "v3:34fd5bfc5483dd341690d0add44711f5",
      "libNodeRefId": "@buildship/firestore-delete-document",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-delete-document/1.0.0/build.cjs",
      "version": "1.0.0"
    },
    "script": "import { Firestore } from '@google-cloud/firestore';\n\nexport default async function deleteDocument({ collectionName, id, projectId }: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(projectId && projectId.length > 1 ? {\n    projectId: projectId.trim()\n  } : undefined);\n\n  const docRef = firestore.collection(collectionName).doc(id);\n  await docRef.delete();\n\n  return {\n    id,\n    status: 'success!'\n  };\n}\n",
    "integrity": "v3:fc40fbf3148edd187da6cb9120231a30",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-delete-document/1.1.1/build.cjs",
    "meta": {
      "name": "Delete Firestore Document",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Delete a document from a Firestore collection",
      "id": "firestore-delete-document"
    },
    "version": "1.1.1",
    "failCount": 6,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 47000000 },
    "usageCounter": 206
  },
  {
    "inputs": {
      "type": "object",
      "required": ["projectId", "filters", "collectionName"],
      "properties": {
        "filters": {
          "default": [{ "field": "", "value": "", "operator": "" }],
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The array of filter objects, each object includes {field, operator, value}[]",
          "title": "Filters",
          "type": "array"
        },
        "projectId": {
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Firestore Document Count",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Get the count of documents in a collection for a given filter",
      "id": "firestore-document-count"
    },
    "type": "script",
    "integrations": [],
    "dependencies": { "@google-cloud/firestore": "7.3.0" },
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      }
    ],
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "aaditya@rowy.io.rowy",
      "completedAt": { "_seconds": 1708406524, "_nanoseconds": 233000000 }
    },
    "syncIndex": {
      "ranBy": "aaditya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708406529, "_nanoseconds": 640000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "output": {
      "buildship": {},
      "description": "Firestore document count",
      "type": "number",
      "title": "Document  count"
    },
    "_updatedBy": {
      "uid": "bFE7iCLQ8VVliuYuAWGH6lliIPE2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocJZ2zExO6H1_ij33zH00WRR1Y_6IjtuLHnaf4WiS8Jt=s96-c",
      "isAnonymous": false,
      "displayName": "Aaditya Bhusal",
      "email": "aaditya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715151720, "_nanoseconds": 177000000 }
    },
    "integrity": "v3:0f106a02ec9f2d1f7df06f86d5587840",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-document-count/1.1.0/build.cjs",
    "id": "firestore-document-count",
    "_libRef": {
      "integrity": "v3:af1aafb77cd1ecb6c495e89873815354",
      "libNodeRefId": "@buildship/firestore-document-count",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-document-count/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Firestore } from \"@google-cloud/firestore\";\n\nexport default async function firestoreDocumentCount({\n  projectId,\n  collectionName,\n  filters = [],\n}: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(\n    projectId && projectId.length > 1\n      ? {\n          projectId: projectId.trim(),\n        }\n      : undefined,\n  );\n\n  let query = firestore.collection(collectionName);\n\n  // Validate that filters exist and each filter has necessary properties\n  if (Array.isArray(filters)) {\n    filters.forEach((filter) => {\n      if (filter.field && filter.operator && filter.hasOwnProperty(\"value\")) {\n        query = query.where(filter.field, filter.operator, filter.value);\n      }\n    });\n  }\n  const snapshot = await query.count().get();\n  return snapshot.data().count;\n}",
    "failCount": 14,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 47000000 },
    "usageCounter": 121
  },
  {
    "inputs": {
      "type": "object",
      "required": ["projectId", "field", "collectionName"],
      "properties": {
        "field": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The field name to get the sum of.",
          "title": "Field Name",
          "type": "string"
        },
        "filters": {
          "default": [{ "field": "", "value": "", "operator": "" }],
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The array of filter objects, each object includes {field, operator, value}[]",
          "title": "Filters",
          "type": "array"
        },
        "projectId": {
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The name of your Firestore collection.",
          "title": "Collection Name",
          "type": "string"
        }
      }
    },
    "type": "script",
    "integrations": [],
    "dependencies": { "@google-cloud/firestore": "7.3.0" },
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      }
    ],
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "aaditya@rowy.io.rowy",
      "completedAt": { "_seconds": 1708406393, "_nanoseconds": 733000000 }
    },
    "syncIndex": {
      "ranBy": "aaditya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708406397, "_nanoseconds": 908000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "failCount": 1,
    "output": {
      "buildship": {},
      "description": "Firestore field average aggregation result",
      "type": "number",
      "title": "Field Average"
    },
    "_updatedBy": {
      "uid": "bFE7iCLQ8VVliuYuAWGH6lliIPE2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocJZ2zExO6H1_ij33zH00WRR1Y_6IjtuLHnaf4WiS8Jt=s96-c",
      "isAnonymous": false,
      "displayName": "Aaditya Bhusal",
      "email": "aaditya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715151292, "_nanoseconds": 960000000 }
    },
    "meta": {
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "name": "Firestore Field Average",
      "description": "This is blank script node to help you get started. [Full Documentation](https://docs.buildship.com/core-nodes/script).",
      "id": "firestore-field-average"
    },
    "integrity": "v3:69ca675cf102d32cb223d640928e2e7d",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-field-average/1.1.0/build.cjs",
    "id": "firestore-field-average",
    "_libRef": {
      "integrity": "v3:3fbb1fc40f3d710e7c76e21f7a33511b",
      "libNodeRefId": "@buildship/firestore-field-average",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-field-average/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Firestore, AggregateField } from \"@google-cloud/firestore\";\n\nexport default async function firestoreFieldSum({\n  projectId,\n  collectionName,\n  field,\n  filters = [],\n}: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(\n    projectId && projectId.length > 1\n      ? {\n          projectId: projectId.trim(),\n        }\n      : undefined,\n  );\n\n  let query = firestore.collection(collectionName);\n\n  // Validate that filters exist and each filter has necessary properties\n  if (Array.isArray(filters)) {\n    filters.forEach((filter) => {\n      if (filter.field && filter.operator && filter.hasOwnProperty(\"value\")) {\n        query = query.where(filter.field, filter.operator, filter.value);\n      }\n    });\n  }\n\n  const averageAggregateQuery = query.aggregate({\n    average: AggregateField.average(field),\n  });\n  const snapshot = await averageAggregateQuery.get();\n  return snapshot.data().average;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 47000000 },
    "usageCounter": 41
  },
  {
    "inputs": {
      "type": "object",
      "required": ["projectId", "field", "collectionName"],
      "properties": {
        "field": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The field name to get the sum of.",
          "title": "Field Name",
          "type": "string"
        },
        "filters": {
          "default": [{ "field": "", "value": "", "operator": "" }],
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The array of filter objects, each object includes {field, operator, value}[]",
          "title": "Filters",
          "type": "array"
        },
        "projectId": {
          "buildship": { "index": 0, "sensitive": false },
          "pattern": "",
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Firestore Field Sum",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Sum of field in collection for given filter",
      "id": "firestore-field-sum"
    },
    "type": "script",
    "integrations": [],
    "dependencies": { "@google-cloud/firestore": "7.3.0" },
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      }
    ],
    "live": true,
    "category": ["Integrations"],
    "deployToBucket": {
      "ranBy": "aaditya@rowy.io.rowy",
      "completedAt": { "_seconds": 1708406588, "_nanoseconds": 773000000 }
    },
    "syncIndex": {
      "ranBy": "aaditya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708406595, "_nanoseconds": 709000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "output": {
      "buildship": {},
      "description": "Firestore field sum aggregation result",
      "type": "number",
      "title": "Field Sum"
    },
    "_updatedBy": {
      "uid": "bFE7iCLQ8VVliuYuAWGH6lliIPE2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/ACg8ocJZ2zExO6H1_ij33zH00WRR1Y_6IjtuLHnaf4WiS8Jt=s96-c",
      "isAnonymous": false,
      "displayName": "Aaditya Bhusal",
      "email": "aaditya@rowy.io.rowy",
      "timestamp": { "_seconds": 1715151490, "_nanoseconds": 808000000 }
    },
    "integrity": "v3:36bf689df894a7f2ddbed0d2f2964079",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-field-sum/1.1.0/build.cjs",
    "id": "firestore-field-sum",
    "_libRef": {
      "integrity": "v3:024032ccf5b5eb92e35dbbe0a52da002",
      "libNodeRefId": "@buildship/firestore-field-sum",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-field-sum/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import { Firestore, AggregateField } from \"@google-cloud/firestore\";\n\nexport default async function firestoreFieldSum({\n  projectId,\n  collectionName,\n  field,\n  filters = [],\n}: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(\n    projectId && projectId.length > 1\n      ? {\n          projectId: projectId.trim(),\n        }\n      : undefined,\n  );\n\n  let query = firestore.collection(collectionName);\n\n  // Validate that filters exist and each filter has necessary properties\n  if (Array.isArray(filters)) {\n    filters.forEach((filter) => {\n      if (filter.field && filter.operator && filter.hasOwnProperty(\"value\")) {\n        query = query.where(filter.field, filter.operator, filter.value);\n      }\n    });\n  }\n\n  const sumAggregateQuery = query.aggregate({ sum: AggregateField.sum(field) });\n  const snapshot = await sumAggregateQuery.get();\n  return snapshot.data().sum;\n}",
    "failCount": 14,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 48000000 },
    "usageCounter": 70
  },
  {
    "featured": true,
    "inputs": {
      "type": "object",
      "properties": {
        "id": {
          "buildship": { "index": 2 },
          "description": "The ID of the document to fetch",
          "title": "Document ID",
          "type": "string"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        }
      },
      "required": ["projectId", "collectionName", "id"]
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "t": 295,
    "syncAllAtOnce": "922",
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1708062060, "_nanoseconds": 987000000 }
    },
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067497, "_nanoseconds": 129000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "firestore-get-document",
    "_libRef": {
      "integrity": "v3:c63cdb953aef3bd3038ba28b46f5d245",
      "libNodeRefId": "@buildship/firestore-get-document",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-get-document/1.0.0/build.cjs",
      "version": "1.0.0"
    },
    "meta": {
      "name": "Get Firestore Document",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Fetch a document from Firestore by its collection name and ID",
      "id": "firestore-get-document"
    },
    "output": {
      "buildship": { "index": 0 },
      "type": "object",
      "properties": {
        "data": { "buildship": { "index": 2 }, "description": "", "type": "object", "title": "data" },
        "exists": { "buildship": { "index": 1 }, "type": "boolean", "title": "exists" },
        "id": { "buildship": { "index": 0 }, "type": "string", "title": "id" }
      }
    },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717443879, "_nanoseconds": 236000000 }
    },
    "integrity": "v3:e5c33586af9f39f4848c0e63826fb5f9",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-get-document/1.1.2/build.cjs",
    "version": "1.1.2",
    "script": "import { Firestore } from '@google-cloud/firestore';\n\nexport default async function readDocument({ collectionName, id, projectId }: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(projectId && projectId.length > 1 ? {\n    projectId: projectId.trim()\n  } : undefined);\n\n  const docRef = firestore.collection(collectionName).doc(id);\n  const doc = await docRef.get();\n\n  if (doc.exists) {\n    return {\n      id: doc.id,\n      data: doc.data(),\n      exists:doc.exists\n    };\n  } else {\n    return {\n      id,\n      exists:doc.exists,\n      data:null\n    };\n  }\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 48000000 },
    "failCount": 297,
    "usageCounter": 1219
  },
  {
    "output": {
      "buildship": {},
      "description": "The array of documents that match the query",
      "title": "Documents",
      "type": "array",
      "properties": {
        "data": { "buildship": {}, "title": "Document Data", "type": "object" },
        "id": { "buildship": {}, "title": "Document ID", "type": "string" }
      }
    },
    "integrity": "v3:7dc65fa3b94656bc9ec316b5015d4a09",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/firestore-query-doc-ref/1.1.3/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["projectId", "collection", "filters"],
      "properties": {
        "limit": {
          "default": "",
          "buildship": { "index": 3 },
          "description": "Maximum number of returned documents",
          "title": "Limit",
          "type": "number"
        },
        "orderBy": {
          "default": [],
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "Order results in desc or asc order.\nEg: `[{fieldName: \"asc\"}]` or `[{fieldName: \"desc\"}]`",
          "title": "Order By",
          "type": "array"
        },
        "collection": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        },
        "filters": {
          "default": { "field": "", "value": "", "operator": "" },
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The filter object can be structured in one of two ways:\n\n1. A simple filter: {field, operator, value}\n2. A complex or nested filter: {logic, filters: [{field, operator, value}, ...]}\n\n\n**Basic filter.**  \nSAMPLE INPUT:\n\n```\n{\n    field: \"name\",\n    operator: \"==\",\n    value: \"Marta\" \n}\n```\n\n**Logical OR, resolves to true if at least one of the conditions is true.**  \nSAMPLE INPUT: \n```\n{\n  logic: \"OR\",\n  filters: [\n   { field: \"active\", operator: \"==\", value: false },\n   { field: \"name\", operator: \"==\", value: \"luis\" },\n  ]\n}\n```\n\n**Logical AND, resolves to true if all of the conditions are true.**  \nSAMPLE INPUT:\n```\n{\n  logic: \"AND\",\n  filters: [\n   { field: \"technology\", operator: \"==\", value: \"Firebase\" },\n   {\n    logic: \"OR\",\n    filters: [\n     { field: \"admin\", operator: \"==\", value: true },\n     { field: \"age\", operator: \">=\", value: 18 },\n    ],\n   },\n  ],\n }\n```\n\n**Filtering by references is also supported.**  \nSAMPLE INPUT:\n```\n{\n    field: \"user_ref\",\n    operator: \"==\",\n    value: \"users/user123\" \n}\n```",
          "title": "Filters",
          "type": "object",
          "properties": {}
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Collection Query (with Doc Ref)",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Get documents of a query in Firestore with multiple filters (with support for Document Reference).",
      "id": "firestore-query-doc-ref"
    },
    "_createdBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717531232, "_nanoseconds": 574000000 }
    },
    "type": "script",
    "integrations": [],
    "version": "1.1.3",
    "script": "import { Firestore, DocumentReference, Filter } from \"@google-cloud/firestore\";\n\nexport default async function firestoreQueryDocuments({\n  collection,\n  filters = {},\n  limit,\n  orderBy = [],\n  projectId\n}: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(projectId && projectId.length > 1 ? {\n    projectId: projectId.trim()\n  } : undefined);\n  let query = firestore.collection(collection);\n\n  orderBy.forEach((orderObj) => {\n    for (const [field, direction] of Object.entries(orderObj)) {\n      const lowerCaseDirection = direction.toLowerCase();\n      if (\n        \"asc\".includes(lowerCaseDirection) ||\n        \"desc\".includes(lowerCaseDirection)\n      ) {\n        query = query.orderBy(field, lowerCaseDirection);\n      }\n    }\n  });\n\n  if (filters && Object.keys(filters).length > 0) {\n    const combinedFilter = constructFilterTree(filters, firestore);\n    if (combinedFilter) {\n      query = query.where(combinedFilter);\n    }\n  }\n\n  let snapshot = await query.limit(limit || 100).get();\n\n  return snapshot.docs.map((doc) => ({\n    id: doc.id,\n    data: doc.data(),\n  }));\n}\n\nfunction constructFilterTree(filter, firestore) {\n  if (!filter.logic) {\n    let filterValue = filter.value;\n\n    // Check if filterValue is a potential Firestore reference\n    if (typeof filterValue === 'string' && filterValue.includes('/')) {\n      try {\n        const ref = firestore.doc(filterValue);\n        if (ref instanceof DocumentReference) {\n          filterValue = ref;\n        }\n      } catch (error) {\n        return; // Skip this filter if the reference is invalid\n      }\n    }\n\n    return Filter.where(filter.field, filter.operator, filterValue);\n  }\n\n  const combinedFilters = filter.filters\n    .map(subFilter => constructFilterTree(subFilter, firestore))\n    .filter(subFilter => subFilter !== undefined);\n\n  return filter.logic === \"OR\"\n    ? Filter.or(...combinedFilters)\n    : Filter.and(...combinedFilters);\n}",
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      }
    ],
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "category": ["Integrations"],
    "live": true,
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "syncIndex",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717531401, "_nanoseconds": 21000000 }
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1717531401, "_nanoseconds": 32000000 }
    },
    "usageCounter": 2,
    "failCount": 1
  },
  {
    "output": {
      "buildship": {},
      "type": "object",
      "properties": {
        "data": {
          "buildship": {},
          "description": "The value of the specified field, or null if the document does not exist",
          "type": "string",
          "title": "Field Data"
        },
        "exists": {
          "buildship": {},
          "description": "Indicates if the document exists",
          "type": "boolean",
          "title": "Document Exists"
        }
      }
    },
    "featured": false,
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "inputs": {
      "type": "object",
      "properties": {
        "fieldKey": {
          "buildship": { "index": 3 },
          "description": "The key of the field to fetch the value from",
          "title": "Field Key",
          "type": "string"
        },
        "id": {
          "buildship": { "index": 2 },
          "description": "The ID of the document",
          "title": "Document ID",
          "type": "string"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "collectionName": {
          "buildship": { "index": 1 },
          "description": "The name of your Firestore collection",
          "title": "Collection Name",
          "type": "string"
        }
      },
      "required": ["projectId", "collectionName", "fieldKey", "id"]
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701678801, "_nanoseconds": 756000000 }
    },
    "t": 307,
    "syncAllAtOnce": "957",
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067493, "_nanoseconds": 40000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 482000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "get-firestore-field-value",
    "_libRef": {
      "integrity": "v3:76f3d10a66e8967963aaa456c4bdc43d",
      "libNodeRefId": "@buildship/get-firestore-field-value",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/get-firestore-field-value/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import { Firestore } from '@google-cloud/firestore';\n\nexport default async function getFieldValue({\n  collectionName,\n  id,\n  fieldKey,\n  projectId\n}: NodeInputs) : NodeOutput  {\n  const firestore = new Firestore(projectId && projectId.length > 1 ? {\n    projectId: projectId.trim()\n  } : undefined);\n\n  const docRef = firestore.collection(collectionName).doc(id);\n  const docSnapshot = await docRef.get();\n\n  if (docSnapshot.exists) {\n    const data = docSnapshot.data();\n    if (data && data[fieldKey] !== undefined) {\n      return {\n        id,\n        fieldKey,\n        value: data[fieldKey],\n        status: 'success!'\n      };\n    } else {\n      return {\n        id,\n        fieldKey,\n        status: 'Field not found in the document'\n      };\n    }\n  } else {\n    return {\n      id,\n      fieldKey,\n      status: 'Document not found'\n    };\n  }\n}\n",
    "integrity": "v3:ad3dc3d4bdffa9779a9c4577a93d7a92",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/get-firestore-field-value/1.1.1/build.cjs",
    "meta": {
      "name": "Get Document Field Value",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Fetches a specific field value from a document in a Firestore collection",
      "id": "get-firestore-field-value"
    },
    "version": "1.1.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 50000000 },
    "failCount": 53,
    "usageCounter": 429
  },
  {
    "output": { "description": "The result of updating the Firestore document.", "type": "object", "properties": {} },
    "inputs": {
      "type": "object",
      "required": [],
      "properties": {
        "projectId": {
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "newDocument": {
          "buildship": { "index": 2 },
          "description": "The new document object with updated values.",
          "title": "New Document",
          "type": "object"
        },
        "docPath": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The path of the Firestore document to update. \nEx. collection/document\n\nQUICK TIP💡: You can get the document ID directly from your Firestore Database.",
          "title": "Document Path",
          "type": "string"
        }
      }
    },
    "type": "script",
    "integrations": [],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "category": ["Integrations"],
    "group": [
      {
        "uid": "firestore",
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase-plain.svg?alt=media&token=d69969cc-2fc0-41bc-921b-39d8939f76cd"
      }
    ],
    "live": true,
    "deployToBucket": {
      "ranBy": "wimukthi@rowy.io.rowy",
      "completedAt": { "_seconds": 1707763081, "_nanoseconds": 182000000 }
    },
    "meta": {
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "name": "Update Document",
      "description": "Updates an entire Firestore document with a given object",
      "id": "update-firestore-document"
    },
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067487, "_nanoseconds": 350000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832980, "_nanoseconds": 306000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "integrity": "v3:a645ea8f61ab5ac4303d2b2426e64ac7",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/update-firestore-document/1.1.0/build.cjs",
    "id": "update-firestore-document",
    "_libRef": {
      "integrity": "v3:5f213c468ea11cfa8793012f115f3d7f",
      "libNodeRefId": "@buildship/update-firestore-document",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/update-firestore-document/1.0.3/build.cjs",
      "version": "1.0.3"
    },
    "version": "1.1.0",
    "script": "import {\n    Firestore\n} from '@google-cloud/firestore';\n\nexport default async function updateFirestoreDocument({\n    docPath,\n    newDocument,\n    projectId\n}: NodeInputs, {\n    logging\n}: NodeScriptOptions) : NodeOutput  {\n    const firestore = new Firestore(projectId && projectId.length > 1 ? {\n        projectId: projectId.trim()\n    } : undefined);\n\n    const docRef = firestore.doc(docPath);\n\n    const result = await docRef.set(newDocument, {\n        merge: true\n    });\n    return result\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 72000000 },
    "failCount": 80,
    "usageCounter": 925
  },
  {
    "output": { "buildship": {}, "type": "object", "properties": {} },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Firestore",
        "description": "Nodes for working with Firebase Firestore database",
        "id": "0IAjU2tekQHjibkvicpM",
        "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/firebase/firebase-plain.svg"
      }
    ],
    "dependencies": { "@google-cloud/firestore": "7.1.0" },
    "inputs": {
      "type": "object",
      "properties": {
        "newValue": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The new value to update the field with.",
          "title": "New Value",
          "type": "string"
        },
        "fieldKey": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The key of the field to be updated.",
          "title": "Field Key",
          "type": "string"
        },
        "projectId": {
          "default": "",
          "buildship": { "index": 0 },
          "description": "The ID of your own Firestore project.\n\nNOTE: This requires additional steps for granting Service Account permissions. Learn how to get your own Firestore Project ID and add Service Account Permissions from our [detailed setup blog](https://docs.buildship.com/tutorials/firebase-project).",
          "title": "Project ID",
          "type": "string"
        },
        "docPath": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The path to the BuildShip's Firestore document. \n\nQUICK TIP💡: You can get the path directly from your Firestore Database by clicking on the \"Edit\" button.\n\nSAMPLE INPUT: `collectionName/documentId`",
          "title": "Document Path",
          "type": "string"
        }
      },
      "required": ["projectId", "docPath", "newValue", "fieldKey"]
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1701267025, "_nanoseconds": 509000000 }
    },
    "t": 435,
    "syncAllAtOnce": "1110",
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1708067491, "_nanoseconds": 549000000 }
    },
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832980, "_nanoseconds": 306000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpM",
    "id": "update-firestore-field-value",
    "_libRef": {
      "integrity": "v3:6c89770feebf0890b837ba1136534203",
      "libNodeRefId": "@buildship/update-firestore-field-value",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/update-firestore-field-value/1.0.0/build.cjs",
      "version": "1.0.0"
    },
    "script": "import { Firestore } from '@google-cloud/firestore';\n\nfunction createNestedObject(path, value) {\n  let obj = value;\n  for (let i = path.length - 1; i >= 0; i--) {\n    obj = { [path[i]]: obj };\n  }\n  return obj;\n}\n\nexport default async function updateFirestoreFieldValue({\n  docPath,\n  fieldKey,\n  newValue,\n  projectId\n}: NodeInputs,{logging}: NodeScriptOptions) : NodeOutput  {\n  const firestore = new Firestore(projectId && projectId.length > 1 ? {\n    projectId: projectId.trim()\n  } : undefined);\n\n  const docRef = firestore.doc(docPath);\n\n  const fieldKeys = fieldKey.split('.');\n  const dataObject = createNestedObject(fieldKeys, newValue);\n\n  const result = await docRef.set(dataObject, { merge: true });\n  return result\n}\n",
    "integrity": "v3:2c3ff7485c619d82c933625a7ae22800",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/update-firestore-field-value/1.1.1/build.cjs",
    "meta": {
      "name": "Update Firestore Field Value",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Ffirebase.png?alt=media&token=b6adf7f8-e93e-40d9-bba6-4d8e93531890"
      },
      "description": "Updates a field value in a Firestore document with a given object",
      "id": "update-firestore-field-value"
    },
    "version": "1.1.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 72000000 },
    "failCount": 106,
    "usageCounter": 1247
  }
]
