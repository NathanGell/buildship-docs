[
  {
    "output": {
      "buildship": {},
      "description": "Data from the specified row in the Supabase table",
      "type": "object",
      "title": "Table row data",
      "properties": {}
    },
    "type": "script",
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "live": true,
    "meta": {
      "name": "Get Row",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Fetch a row from a Supabase table using the API URL, Key, table name, filter, and Authorization token.",
      "id": "get-supabase-table-row"
    },
    "dependencies": { "node-fetch": "2.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702295075, "_nanoseconds": 837000000 }
    },
    "t": 330,
    "syncAllAtOnce": "867",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "get-supabase-table-row",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:5f9cfc2d7e27ff1d007958781cc9ca6b",
      "libNodeRefId": "@buildship/get-supabase-table-row",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/get-supabase-table-row/1.0.5/build.cjs",
      "version": "1.0.5"
    },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717017937, "_nanoseconds": 541000000 }
    },
    "integrity": "v3:35318f9d537b9e7d393e8c39b178569c",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/get-supabase-table-row/1.1.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["table", "supabaseUrl", "token", "supabaseKey"],
      "properties": {
        "filter": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The filter to select specific rows to get. You can update specific rows using horizontal filters, e.g. `eq`, `lt`, and `is`. Leave empty to get all the rows in the table.\n\n**SAMPLE INPUT:** \n- To get a row having the `id` equal to `1`: `id=eq.1`\n- To get a row having `breed` value equal to `Beagle`: `breed=eq.Shih Tzu`\n\n**To use multiple filters**, use the `&` operator to separate them. \n**For example**, to filter records where the `origin` field equals `Germany` and the `lifespan` field is greater than `15`, you would use the following filter: \n```\nage=gt.30&price=lt.10\n```\n\nLearn more about using Filters [here](https://docs.buildship.com/tutorials/supabase-crud#filters).",
          "title": "Filter",
          "type": "string"
        },
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out our [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to dig in deeper.",
          "title": "API Key",
          "type": "string"
        },
        "supabaseUrl": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Your Supabase project URL. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "buildship": { "index": 2 },
          "description": "The name of the table in the Supabase instance",
          "title": "Table Name",
          "type": "string"
        }
      }
    },
    "version": "1.1.1",
    "script": "import fetch from 'node-fetch';\nexport default async function getSupabaseTableRow({\n    supabaseUrl,\n    supabaseKey,\n    table,\n    filter\n}: NodeInputs) : NodeOutput  {\n    const url = `${supabaseUrl}/rest/v1/${table}?${encodeURI(filter)}`;\n\n    const headers = {\n        'apikey': supabaseKey,\n    };\n\n    const requestOptions = {\n        method: 'GET',\n        headers\n    };\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n\n    return data;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 51000000 },
    "usageCounter": 1892,
    "failCount": 1480
  },
  {
    "inputs": { "type": "object", "required": [], "properties": {} },
    "output": { "buildship": {}, "type": "object", "title": "List all projects Response" },
    "integrations": ["supabase"],
    "type": "http",
    "_createdBy": {
      "uid": "mvcbmDM4LCdGpvDjVGlZH7G7PCR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTtdqs8NGRAdXTp5fN1MTeidn27xsxCVExJOAPOTEUFEh=s96-c",
      "isAnonymous": false,
      "displayName": "Vaibhav Chanana",
      "email": "vaibhav@rowy.io.rowy",
      "timestamp": { "_seconds": 1702381760, "_nanoseconds": 507000000 }
    },
    "version": "1.0.0",
    "script": " ",
    "spec": {
      "servers": [{ "url": "https://api.supabase.com/v1/projects" }],
      "method": "GET",
      "description": "",
      "title": "",
      "version": "1.0.0",
      "parameters": [
        {
          "schema": {
            "buildship": { "index": 0 },
            "description": "This input can be any string and will be sent as an Authorization header along with the request",
            "type": "string",
            "title": "Authorization Header"
          },
          "in": "header",
          "name": "Authorization",
          "description": "Authorization header",
          "value": "Bearer ($auth.token)"
        }
      ]
    },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "meta": {
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "name": "List Supabase Projects",
      "description": "Returns a list of all projects you've previously created.",
      "id": "list-supabase-projects"
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1705058390, "_nanoseconds": 559000000 }
    },
    "t": 216,
    "syncAllAtOnce": "1010",
    "integrity": "v3:c220a07b0b364b38e49f5a0e5a49dbc5",
    "src": "",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832978, "_nanoseconds": 484000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "list-supabase-projects",
    "_libRef": {
      "integrity": "v3:c220a07b0b364b38e49f5a0e5a49dbc5",
      "libNodeRefId": "@buildship/list-supabase-projects",
      "libType": "public",
      "src": "",
      "version": "1.0.0"
    },
    "dependencies": {},
    "failCount": 1,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 53000000 },
    "usageCounter": 145
  },
  {
    "output": {
      "buildship": {},
      "description": "The columns of the Supabase table",
      "type": "object",
      "title": "Table Columns",
      "properties": {}
    },
    "featured": false,
    "type": "script",
    "category": ["Integrations"],
    "indexVector": true,
    "live": true,
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://seeklogo.com/images/S/supabase-logo-DCC676FFE2-seeklogo.com.png"
      }
    ],
    "dependencies": { "node-fetch": "3.3.2" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702296935, "_nanoseconds": 618000000 }
    },
    "t": 380,
    "syncAllAtOnce": "1034",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "read-supabase-table-columns",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:8979af71e95b4f2935246288c4780b31",
      "libNodeRefId": "@buildship/read-supabase-table-columns",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/read-supabase-table-columns/1.0.4/build.cjs",
      "version": "1.0.4"
    },
    "script": "import fetch from 'node-fetch';\nexport default async function readSupabaseTableColumns({\n    table,\n    supabaseUrl,\n    supabaseKey,\n    columns\n}: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  {\n    try{\n        const selectColumns = columns ? columns.replace(/\\s+/g, \"\") : \"*\";\n        logging.log(selectColumns)\n        const response = await fetch(`${supabaseUrl}/rest/v1/${table}?select=${selectColumns}`, {\n        headers: {\n            'apikey': supabaseKey,\n            'Content-Type': 'application/json'\n        }\n    });\n\n    const data = await response.json();\n    return data;\n    }\n    catch(e){\n        return e;\n    }\n}",
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717017299, "_nanoseconds": 83000000 }
    },
    "integrity": "v3:028820b3e143bd03de613d0f5b3e50e6",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/read-supabase-table-columns/1.1.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["token", "supabaseKey", "supabaseUrl", "table"],
      "properties": {
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out the [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to learn more.",
          "title": "API Key",
          "type": "string"
        },
        "columns": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "List the columns to select, comma separated. This will get all the values for the specified columns. Leave empty to get all the values in the table.\n\n**SAMPLE INPUT:**\nTo get all the entries for the `id` column and the `breed` column, use: `id, breed`",
          "title": "Columns",
          "type": "string"
        },
        "supabaseUrl": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The URL of your Supabase project. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The name of the Supabase table.",
          "title": "Table Name",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Get Columns",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Gets all the values for the specified columns of a Supabase table.",
      "id": "read-supabase-table-columns"
    },
    "version": "1.1.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 66000000 },
    "usageCounter": 642
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Supabase POST request",
      "title": "Supabase Response",
      "type": "object",
      "properties": {}
    },
    "meta": {
      "name": "Create Row with Token",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Insert a JSON object to an existing table on Supabase via a POST request",
      "id": "supabase-create-token"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702299304, "_nanoseconds": 379000000 }
    },
    "t": 408,
    "syncAllAtOnce": "1121",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "supabase-create-token",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:5a3251bed5ee162c95060871f609b4b4",
      "libNodeRefId": "@buildship/supabase-create-token",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-create-token/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "script": "import fetch from 'node-fetch';\nexport default async function supabaseInsertObject({ table, token, objectData, supabaseUrl, supabaseKey }: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  {\n    const supaUrl = `${supabaseUrl}/rest/v1/${table}`;\n\n    const headers = {\n    'apikey': supabaseKey,\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json',\n    'Prefer': 'return=representation',\n    };\n\n    const requestData = objectData;\n\n    try {\n        const response = await fetch(supaUrl, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(requestData)\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            logging.error('Error:', errorData);\n            return errorData;\n        }\n\n        const data = await response.json();\n        logging.log('Response:', data);\n        return data;\n    } catch (error) {\n        logging.error('Error:', error);\n        return error;\n    }\n}",
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717026007, "_nanoseconds": 210000000 }
    },
    "integrity": "v3:967cb8cd8471bd2f76efc0928ce3bd00",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-create-token/1.1.2/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["supabaseUrl", "supabaseKey", "objectData", "table", "token"],
      "properties": {
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 1, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out the [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to learn more.",
          "title": "API Key",
          "type": "string"
        },
        "objectData": {
          "default": {},
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The JSON object to be inserted into the table.\n\n**SAMPLE INPUT:**\n```\n{\n  \"id\": 5,\n  \"breed\": \"Birman\",\n  \"origin\": \"Burma\",\n  \"lifespan\": 12\n}\n```\n\nOr, for multiple rows:\n```\n[\n  {\n    \"id\": 5,\n    \"breed\": \"Birman\",\n    \"origin\": \"Burma\",\n    \"lifespan\": 12\n  },\n  {\n    \"id\": 6,\n    \"breed\": \"Bombay\",\n    \"origin\": \"United States\",\n    \"lifespan\": 15\n  }\n]\n```",
          "title": "Object",
          "type": "object",
          "properties": {}
        },
        "supabaseUrl": {
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The URL of your Supabase instance. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The name of the table in Supabase to insert the object into.",
          "title": "Table Name",
          "type": "string"
        },
        "token": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your Supabase Auth Token from the client. This allows Supabase Row Level Security to be utilized as a passthrough with Buildship. Learn more on [when to use tokens](https://docs.buildship.com/tutorials/supabase-crud#when-to-use-tokens).\n\nTIP 💡: If you do not have an Authentication Token, use the Supabase \"Create Row\" node instead.",
          "title": "Token",
          "type": "string"
        }
      }
    },
    "version": "1.1.2",
    "failCount": 26,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "usageCounter": 442
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Supabase Realtime API",
      "type": "object",
      "title": "Response",
      "properties": {}
    },
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://seeklogo.com/images/S/supabase-logo-DCC676FFE2-seeklogo.com.png"
      }
    ],
    "dependencies": { "node-fetch": "3.3.2" },
    "meta": {
      "name": "Delete Row",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Delete an existing table row using Supabase Realtime API endpoint.",
      "id": "supabase-delete-object"
    },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702297146, "_nanoseconds": 594000000 }
    },
    "t": 406,
    "syncAllAtOnce": "1106",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "supabase-delete-object",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:0e604407ec6ff78c8768e5116cdd9e9b",
      "libNodeRefId": "@buildship/supabase-delete-object",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-delete-object/1.0.4/build.cjs",
      "version": "1.0.4"
    },
    "script": "import fetch from 'node-fetch';\n\nexport default async function deleteSupabaseTableRow({\n    table,\n    supabaseUrl,\n    supabaseKey,\n    filter\n}: NodeInputs) : NodeOutput  {\n    // Construct the URL with the table and filter\n    const url = `${supabaseUrl}/rest/v1/${table}?${encodeURI(filter)}`;\n\n    // Set the headers for the request\n    const headers = {\n        'apikey': supabaseKey,\n        'Content-Type': 'application/json'\n    };\n\n    // Create the DELETE request options\n    const requestOptions = {\n        method: 'DELETE',\n        headers\n    };\n\n    // Send the DELETE request\n    const response = await fetch(url, requestOptions);\n\n    if (response.ok) {\n        // Request was successful, you can handle the success as needed\n        return { success: true, message: 'Row deleted successfully' };\n    } else {\n        // Handle HTTP error responses\n        throw new Error(`Failed to delete row. Status: ${response.status}`);\n    }\n}\n",
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717017974, "_nanoseconds": 235000000 }
    },
    "integrity": "v3:1f7cb201ac8ecb9ccf2db187ef6fed6d",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-delete-object/1.1.4/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["token", "supabaseKey", "supabaseUrl", "table", "filter"],
      "properties": {
        "filter": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The filter to select specific rows to delete. You can update specific rows using horizontal filters, e.g. `eq`, `lt`, and `is`. \n\n**SAMPLE INPUT:** \n- To delete a row having the `id` equal to `1`: `id=eq.1`\n- To delete a row having `breed` value equal to `Beagle`: `breed=eq.Shih Tzu`\n\n**To use multiple filters**, use the `&` operator to separate them. \n**For example**, to filter records where the `origin` field equals `Germany` and the `lifespan` field is greater than `15`, you would use the following filter: \n``\nage=gt.30&price=lt.10\n``\n\nLearn more about using Filters [here](https://docs.buildship.com/tutorials/supabase-crud#filters).",
          "title": "Filter",
          "type": "string"
        },
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out the [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to learn more.",
          "title": "API Key",
          "type": "string"
        },
        "supabaseUrl": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The API URL of the Supabase instance. You can get your API URL from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The name of the Supabase table.",
          "title": "Table Name",
          "type": "string"
        }
      }
    },
    "version": "1.1.4",
    "failCount": 17,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "usageCounter": 150
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Supabase Realtime API",
      "title": "Response",
      "type": "object",
      "properties": {}
    },
    "meta": {
      "name": "Delete Row with Token",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Delete an existing table row using Supabase Realtime API endpoint.",
      "id": "supabase-delete-token"
    },
    "type": "script",
    "dependencies": { "node-fetch": "3.3.2" },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702297180, "_nanoseconds": 551000000 }
    },
    "t": 403,
    "syncAllAtOnce": "1101",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "supabase-delete-token",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:9288dc64370bdfbf119e766feffcb68e",
      "libNodeRefId": "@buildship/supabase-delete-token",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-delete-token/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import fetch from 'node-fetch';\n\nexport default async function deleteSupabaseTableRow({\n    table,\n    supabaseUrl,\n    supabaseKey,\n    token,\n    filter\n}: NodeInputs) : NodeOutput  {\n    // Construct the URL with the table and filter\n    const url = `${supabaseUrl}/rest/v1/${table}?${encodeURI(filter)}`;\n\n    // Set the headers for the request\n    const headers = {\n        'apikey': supabaseKey,\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n    };\n\n    // Create the DELETE request options\n    const requestOptions = {\n        method: 'DELETE',\n        headers\n    };\n\n    // Send the DELETE request\n    const response = await fetch(url, requestOptions);\n\n    if (response.ok) {\n        // Request was successful, you can handle the success as needed\n        return { success: true, message: 'Row deleted successfully' };\n    } else {\n        // Handle HTTP error responses\n        throw new Error(`Failed to delete row. Status: ${response.status}`);\n    }\n}\n",
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717026032, "_nanoseconds": 477000000 }
    },
    "integrity": "v3:5e4ce21dfd3ef1919501f91cbd8d868c",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-delete-token/1.1.2/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["supabaseUrl", "supabaseKey", "table", "filter", "token"],
      "properties": {
        "filter": {
          "default": "",
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The filter to select specific rows to delete. You can update specific rows using horizontal filters, e.g. `eq`, `lt`, and `is`. \n\n**SAMPLE INPUT:** \n- To delete a row having the `id` equal to `1`: `id=eq.1`\n- To delete a row having `breed` value equal to `Beagle`: `breed=eq.Shih Tzu`\n\n**To use multiple filters**, use the `&` operator to separate them. \n**For example**, to filter records where the `origin` field equals `Germany` and the `lifespan` field is greater than `15`, you would use the following filter: \n``\nage=gt.30&price=lt.10\n``\n\nLearn more about using Filters [here](https://docs.buildship.com/tutorials/supabase-crud#filters).",
          "title": "Filter",
          "type": "string"
        },
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 1, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out the [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to learn more.",
          "title": "API Key",
          "type": "string"
        },
        "supabaseUrl": {
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The API URL of the Supabase instance. You can get your API URL from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The name of the Supabase table.",
          "title": "Table Name",
          "type": "string"
        },
        "token": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your Supabase Auth Token from the client. This allows Supabase Row Level Security to be utilized as a passthrough with Buildship. Learn more on [when to use tokens](https://docs.buildship.com/tutorials/supabase-crud#when-to-use-tokens).\n\nTIP 💡: If you do not have an Authentication Token, use the Supabase \"Delete Row\" node instead.",
          "title": "Token",
          "type": "string"
        }
      }
    },
    "version": "1.1.2",
    "usageCounter": 61,
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 }
  },
  {
    "output": {
      "buildship": {},
      "description": "The columns of the Supabase table",
      "title": "Table Columns",
      "type": "object",
      "properties": {}
    },
    "meta": {
      "name": "Get Columns with Token",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Read the specified columns of a Supabase table.",
      "id": "supabase-get-col-token"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702296987, "_nanoseconds": 393000000 }
    },
    "t": 423,
    "syncAllAtOnce": "1102",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "failCount": 1,
    "id": "supabase-get-col-token",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:c3bc72fe1220c6286cf3fab60560f71c",
      "libNodeRefId": "@buildship/supabase-get-col-token",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-get-col-token/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "script": "import fetch from 'node-fetch';\nexport default async function readSupabaseTableColumns({\n    table,\n    supabaseUrl,\n    supabaseKey,\n    token,\n    columns\n}: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  {\n    try{\n        const selectColumns = columns ? columns.replace(/\\s+/g, \"\") : \"*\";\n        logging.log(selectColumns)\n        const response = await fetch(`${supabaseUrl}/rest/v1/${table}?select=${selectColumns}`, {\n        headers: {\n            'apikey': supabaseKey,\n            \"Authorization\": `Bearer ${token}`,\n            'Content-Type': 'application/json'\n        }\n    });\n\n    const data = await response.json();\n    return data;\n    }\n    catch(e){\n        return e;\n    }\n}",
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717026060, "_nanoseconds": 19000000 }
    },
    "integrity": "v3:05932afa16edf6d5b5d14c6a620fec2e",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-get-col-token/1.1.2/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["supabaseKey", "supabaseUrl", "table", "token"],
      "properties": {
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 1, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out the [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to learn more.",
          "title": "API Key",
          "type": "string"
        },
        "columns": {
          "default": "",
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "List the columns to select, comma separated. This will get all the values for the specified columns. Leave empty to get all the values in the table.\n\n**SAMPLE INPUT:**\nTo get all the entries for the `id` column and the `breed` column, use: `id, breed`",
          "title": "Columns",
          "type": "string"
        },
        "supabaseUrl": {
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The URL of your Supabase project. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The name of the Supabase table.",
          "title": "Table Name",
          "type": "string"
        },
        "token": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your Supabase Auth Token from the client. This allows Supabase Row Level Security to be utilized as a passthrough with Buildship. Learn more on [when to use tokens](https://docs.buildship.com/tutorials/supabase-crud#when-to-use-tokens).\n\nTIP 💡: If you do not have an Authentication Token, use the Supabase \"Get Columns\" node instead.",
          "title": "Token",
          "type": "string"
        }
      }
    },
    "version": "1.1.2",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "usageCounter": 97
  },
  {
    "output": {
      "buildship": {},
      "description": "Data from the specified row in the Supabase table",
      "title": "Table row data",
      "type": "object",
      "properties": {}
    },
    "meta": {
      "name": "Get Row with Token",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Fetch a row from a Supabase table using the API URL, Key, table name, filter, and Authorization token.",
      "id": "supabase-get-row-token"
    },
    "type": "script",
    "dependencies": { "node-fetch": "3.3.2" },
    "live": true,
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702295105, "_nanoseconds": 767000000 }
    },
    "t": 421,
    "syncAllAtOnce": "1103",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "integrations": [],
    "syncIndex": {
      "ranBy": "bhavya@rowy.io.rowy",
      "status": "synced",
      "completedAt": { "_seconds": 1712914490, "_nanoseconds": 229000000 }
    },
    "id": "supabase-get-row-token",
    "_libRef": {
      "integrity": "v3:cc93615c57d2df4a812954ea6b72ebfc",
      "libNodeRefId": "@buildship/supabase-get-row-token",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-get-row-token/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717025791, "_nanoseconds": 717000000 }
    },
    "integrity": "v3:512d4d4d3fe1d887bc6a17d3518ec406",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-get-row-token/1.1.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["table", "supabaseUrl", "supabaseKey", "token"],
      "properties": {
        "filter": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The filter to select specific rows to get. You can update specific rows using horizontal filters, e.g. `eq`, `lt`, and `is`. Leave empty to get all the rows in the table.\n\n**SAMPLE INPUT:** \n- To get a row having the `id` equal to `1`: `id=eq.1`\n- To get a row having `breed` value equal to `Beagle`: `breed=eq.Shih Tzu`\n\n**To use multiple filters**, use the `&` operator to separate them. \n**For example**, to filter records where the `origin` field equals `Germany` and the `lifespan` field is greater than `15`, you would use the following filter: \n```\nage=gt.30&price=lt.10\n```\n\nLearn more about using Filters [here](https://docs.buildship.com/tutorials/supabase-crud#filters).",
          "title": "Filter",
          "type": "string"
        },
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out our [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to dig in deeper.",
          "title": "API Key",
          "type": "string"
        },
        "supabaseUrl": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Your Supabase project URL. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "buildship": { "index": 2 },
          "description": "The name of the table in the Supabase instance",
          "title": "Table Name",
          "type": "string"
        },
        "token": {
          "default": "",
          "buildship": { "index": 2, "sensitive": true },
          "pattern": "",
          "description": "Your Supabase Auth Token from the client. This allows Supabase Row Level Security to be utilized as a passthrough with Buildship. Learn more on [when to use tokens](https://docs.buildship.com/tutorials/supabase-crud#when-to-use-tokens).\n\nTIP 💡: If you do not have an Authentication Token, use the Supabase \"Get Row\" node instead.",
          "title": "Token",
          "type": "string"
        }
      }
    },
    "version": "1.1.1",
    "script": "import fetch from 'node-fetch';\nexport default async function getSupabaseTableRow({\n    supabaseUrl,\n    supabaseKey,\n    table,\n    filter,\n    token\n}: NodeInputs) : NodeOutput  {\n    const url = `${supabaseUrl}/rest/v1/${table}?${encodeURI(filter)}`;\n\n    const headers = {\n        'apikey': supabaseKey,\n        'Authorization': `Bearer ${token}`\n    };\n\n    const requestOptions = {\n        method: 'GET',\n        headers\n    };\n\n    const response = await fetch(url, requestOptions);\n    const data = await response.json();\n\n    return data;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "failCount": 29,
    "usageCounter": 489
  },
  {
    "type": "script",
    "category": ["Integrations"],
    "indexVector": true,
    "live": true,
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://seeklogo.com/images/S/supabase-logo-DCC676FFE2-seeklogo.com.png"
      }
    ],
    "dependencies": { "node-fetch": "2.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702299286, "_nanoseconds": 838000000 }
    },
    "t": 420,
    "syncAllAtOnce": "1104",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "supabase-insert-object",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:0261df2269b3a0b184148fd3ea694707",
      "libNodeRefId": "@buildship/supabase-insert-object",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-insert-object/1.0.5/build.cjs",
      "version": "1.0.5"
    },
    "script": "import fetch from 'node-fetch';\nexport default async function supabaseInsertObject({ table, objectData, supabaseUrl, supabaseKey }: NodeInputs, { logging }: NodeScriptOptions) : NodeOutput  {\n    const supaUrl = `${supabaseUrl}/rest/v1/${table}`;\n\n    const headers = {\n    'apikey': supabaseKey,\n    'Content-Type': 'application/json',\n    'Prefer': 'return=representation',\n    };\n\n    const requestData = objectData;\n\n    try {\n        const response = await fetch(supaUrl, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(requestData)\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            logging.error('Error:', errorData);\n            return errorData;\n        }\n\n        const data = await response.json();\n        logging.log('Response:', data);\n        return data;\n    } catch (error) {\n        logging.error('Error:', error);\n        return error;\n    }\n}",
    "output": {
      "buildship": { "index": 0 },
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "lifespan": { "type": "integer" },
          "origin": { "type": "string" },
          "id": { "type": "integer" },
          "breed": { "type": "string" }
        }
      }
    },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717014494, "_nanoseconds": 551000000 }
    },
    "integrity": "v3:b659fb3ef8225a72a15bb9469ffad1b1",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-insert-object/1.1.1/build.cjs",
    "inputs": {
      "type": "object",
      "properties": {
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n\nTIP: Check out the [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to learn more.",
          "title": "API Key",
          "type": "string"
        },
        "objectData": {
          "default": {},
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The JSON object to be inserted into the table.\n\n**SAMPLE INPUT:**\n```\n{\n  \"id\": 5,\n  \"breed\": \"Birman\",\n  \"origin\": \"Burma\",\n  \"lifespan\": 12\n}\n```\n\nOr, for multiple rows:\n```\n[\n  {\n    \"id\": 5,\n    \"breed\": \"Birman\",\n    \"origin\": \"Burma\",\n    \"lifespan\": 12\n  },\n  {\n    \"id\": 6,\n    \"breed\": \"Bombay\",\n    \"origin\": \"United States\",\n    \"lifespan\": 15\n  }\n]\n```",
          "title": "Object",
          "type": "object",
          "properties": {}
        },
        "supabaseUrl": {
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The URL of your Supabase project. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The name of the table in Supabase to insert the object into.",
          "title": "Table Name",
          "type": "string"
        }
      },
      "required": ["token", "supabaseKey", "supabaseUrl", "table", "objectData"]
    },
    "meta": {
      "name": "Create Row",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Add new row(s) to your Supabase table.",
      "id": "supabase-insert-object"
    },
    "version": "1.1.1",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "usageCounter": 1819,
    "failCount": 147
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Postgres function",
      "title": "Response",
      "type": "object"
    },
    "inputs": {
      "type": "object",
      "required": ["functionName", "apiKey", "apiUrl"],
      "properties": {
        "args": {
          "default": {},
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The arguments to pass to the function (if required).\n\nSAMPLE INPUT:\n```\n{\"row_id\":2}\n```",
          "title": "Arguments",
          "type": "object",
          "properties": {}
        },
        "apiKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your Supabase service role key. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API Key",
          "type": "string"
        },
        "apiUrl": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "Your Supabase project URL. (Get it from your [Supabase Project](https://supabase.com/dashboard/projects) API Reference.)",
          "title": "API URL",
          "type": "string"
        },
        "functionName": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The name of the Postgres function to call. Set up your functions on your [Supabase Dashboard](https://supabase.com/dashboard/project) > Database > Functions.",
          "title": "Function Name",
          "type": "string"
        }
      }
    },
    "meta": {
      "name": "Postgres RPC",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Initializes a Supabase client and calls a Postgres function as Remote Procedure Call",
      "id": "supabase-postgres-rpc"
    },
    "type": "script",
    "dependencies": { "@supabase/supabase-js": "2.39.0" },
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "live": true,
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702906894, "_nanoseconds": 660000000 }
    },
    "t": 407,
    "syncAllAtOnce": "1107",
    "_updatedBy": {
      "uid": "Nb5Sn267f6eOTgqnlB1d6Hxi5VR2",
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a-/AFdZucpItz8EJNSW_ttNzT-N4cG9IQVT5Ipuvbq7xx5Z=s96-c",
      "updatedField": "groupInfo",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1712832980, "_nanoseconds": 305000000 }
    },
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "supabase-postgres-rpc",
    "integrations": [],
    "integrity": "v3:3264edf9651ded2b52f407d62a409f31",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-postgres-rpc/1.1.0/build.cjs",
    "_libRef": {
      "integrity": "v3:50c3cec286949a709fd0252baea7900c",
      "libNodeRefId": "@buildship/supabase-postgres-rpc",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-postgres-rpc/1.0.1/build.cjs",
      "version": "1.0.1"
    },
    "version": "1.1.0",
    "script": "import {\n    createClient\n} from '@supabase/supabase-js';\nexport default async function callPostgresFunction({\n    apiKey,\n    apiUrl,\n    functionName,\n    args\n}: NodeInputs) : NodeOutput  {\n    const supabase = createClient(apiUrl, apiKey);\n    const {\n        data,\n        error\n    } = await supabase.rpc(functionName, args);\n    if (error) throw error;\n    return data;\n}",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "usageCounter": 464,
    "failCount": 201
  },
  {
    "output": {
      "buildship": {},
      "description": "The response from the Supabase Realtime API",
      "title": "Response",
      "type": "object",
      "properties": {}
    },
    "meta": {
      "name": "Update Row with Token",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Update an existing table row using Supabase Realtime API endpoint",
      "id": "supabase-update-token"
    },
    "type": "script",
    "dependencies": { "node-fetch": "2.7.0" },
    "category": ["Integrations"],
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      }
    ],
    "live": true,
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702310711, "_nanoseconds": 573000000 }
    },
    "t": 409,
    "syncAllAtOnce": "1095",
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "supabase-update-token",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:6d1fcd3fb94856bf1c6618718132513a",
      "libNodeRefId": "@buildship/supabase-update-token",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-update-token/1.0.2/build.cjs",
      "version": "1.0.2"
    },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717025928, "_nanoseconds": 506000000 }
    },
    "integrity": "v3:5a81a51305f9c279f02585e29647cd7d",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/supabase-update-token/1.1.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["supabaseUrl", "table", "supabaseKey", "token", "filter", "data"],
      "properties": {
        "filter": {
          "default": "",
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The filter to select specific rows to get. You can update specific rows using horizontal filters, e.g. `eq`, `lt`, and `is`. Leave empty to get all the rows in the table.\n\n**SAMPLE INPUT:** \n- To get a row having the `id` equal to `1`: `id=eq.1`\n- To get a row having `breed` value equal to `Beagle`: `breed=eq.Shih Tzu`\n\n**To use multiple filters**, use the `&` operator to separate them. \n**For example**, to filter records where the `origin` field equals `Germany` and the `lifespan` field is greater than `15`, you would use the following filter: \n``\nage=gt.30&price=lt.10\n``\n\nLearn more about using Filters [here](https://docs.buildship.com/tutorials/supabase-crud#filters).",
          "title": "Filter",
          "type": "string"
        },
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 1, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n \nTIP: Check out our [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to dig in deeper.",
          "title": "API Key",
          "type": "string"
        },
        "data": {
          "default": {},
          "buildship": { "index": 5, "sensitive": false },
          "pattern": "",
          "description": "The data to be updated in the selected row.\n\n**SAMPLE INPUT:**\nTo update just the `origin` field for the selected row:\n```\n{\n  \"origin\":\"China\"\n}\n```",
          "title": "Data",
          "type": "object",
          "properties": {}
        },
        "supabaseUrl": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "The API URL of the Supabase instance. You can get your API URL from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.",
          "title": "API URL",
          "type": "string"
        },
        "table": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "Your Supabase table name",
          "title": "Table Name",
          "type": "string"
        },
        "token": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "Your Supabase Auth Token from the client. This allows Supabase Row Level Security to be utilized as a passthrough with Buildship. Learn more on [when to use tokens](https://docs.buildship.com/tutorials/supabase-crud#when-to-use-tokens).\n\nTIP 💡: If you do not have an Authentication Token, use the Supabase \"Update Row\" node instead.",
          "title": "Token",
          "type": "string"
        }
      }
    },
    "version": "1.1.1",
    "script": "import fetch from 'node-fetch';\n\nexport default async function updateSupabaseRealtimeTableRow({\n    table,\n    supabaseUrl,\n    supabaseKey,\n    filter,\n    token,\n    data\n}: NodeInputs) : NodeOutput  {\n    const url = `${supabaseUrl}/rest/v1/${table}?${encodeURI(filter)}`;\n\n    const headers = {\n        'apikey': supabaseKey,\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Prefer': 'return=representation',\n    };\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers,\n        body: JSON.stringify(data)\n    };\n\n    try {\n        const response = await fetch(url, requestOptions);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const responseData = await response.json(); // Parse response data\n\n        return responseData; // Return the parsed response data\n    } catch (error) {\n        console.error('Error:', error.message);\n        return null; // Return null or handle the error as needed\n    }\n}\n\n",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 69000000 },
    "failCount": 8,
    "usageCounter": 263
  },
  {
    "type": "script",
    "category": ["Integrations"],
    "live": true,
    "group": [
      {
        "name": "Supabase",
        "description": "Nodes for connecting with your Supabase tables and perform actions on your data.",
        "id": "0IAjU2tekQHjibkvicpS",
        "iconUrl": "https://seeklogo.com/images/S/supabase-logo-DCC676FFE2-seeklogo.com.png"
      }
    ],
    "meta": {
      "name": "Update Row",
      "icon": {
        "type": "URL",
        "url": "https://firebasestorage.googleapis.com/v0/b/website-a1s39m.appspot.com/o/buildship-app-logos%2Fsupabase.png?alt=media&token=db017867-8867-4e74-8e94-c7074c82b836"
      },
      "description": "Update an existing table row using Supabase Realtime API endpoint",
      "id": "update-supabase-object"
    },
    "dependencies": { "node-fetch": "2.7.0" },
    "deployToBucket": {
      "ranBy": "bhavya@rowy.io.rowy",
      "completedAt": { "_seconds": 1702310678, "_nanoseconds": 920000000 }
    },
    "t": 428,
    "syncAllAtOnce": "1119",
    "featured": true,
    "groupInfo": "0IAjU2tekQHjibkvicpS",
    "id": "update-supabase-object",
    "integrations": [],
    "_libRef": {
      "integrity": "v3:c2b8c79a185fef7c698d46ece2b89653",
      "libNodeRefId": "@buildship/update-supabase-object",
      "isDirty": false,
      "libType": "public",
      "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/update-supabase-object/1.0.7/build.cjs",
      "version": "1.0.7"
    },
    "output": {
      "buildship": { "index": 0 },
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "lifespan": { "type": "integer" },
          "origin": { "type": "string" },
          "id": { "type": "integer" },
          "breed": { "type": "string" }
        }
      }
    },
    "_updatedBy": {
      "emailVerified": true,
      "photoURL": "https://lh3.googleusercontent.com/a/AAcHTteHR1mYhhB_mvgntLyHkZFTdhB-nqqb3xJiKW13sX6odg=s96-c",
      "uid": "HIGVNMhvkORk3bmp9wPorP5wsXT2",
      "displayName": "Bhavya Verma",
      "email": "bhavya@rowy.io.rowy",
      "timestamp": { "_seconds": 1717019028, "_nanoseconds": 683000000 }
    },
    "integrity": "v3:78e0bf695e6e06f58b44596f8ef90f7a",
    "src": "https://storage.googleapis.com/buildship-app-us-central1/publicLib/nodes/@buildship/update-supabase-object/1.1.1/build.cjs",
    "inputs": {
      "type": "object",
      "required": ["supabaseUrl", "table", "token", "supabaseKey", "filter", "data"],
      "properties": {
        "filter": {
          "default": "",
          "buildship": { "index": 3, "sensitive": false },
          "pattern": "",
          "description": "The filter to select specific rows to get. You can update specific rows using horizontal filters, e.g. `eq`, `lt`, and `is`. Leave empty to get all the rows in the table.\n\n**SAMPLE INPUT:** \n- To get a row having the `id` equal to `1`: `id=eq.1`\n- To get a row having `breed` value equal to `Beagle`: `breed=eq.Shih Tzu`\n\n**To use multiple filters**, use the `&` operator to separate them. \n**For example**, to filter records where the `origin` field equals `Germany` and the `lifespan` field is greater than `15`, you would use the following filter: \n``\nage=gt.30&price=lt.10\n``\n\nLearn more about using Filters [here](https://docs.buildship.com/tutorials/supabase-crud#filters).",
          "title": "Filter",
          "type": "string"
        },
        "supabaseKey": {
          "default": "",
          "buildship": { "index": 0, "sensitive": true },
          "pattern": "",
          "description": "The API Key of the Supabase instance. You can get your API Key from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.\n \nTIP: Check out our [Supabase Tutorial](https://docs.buildship.com/tutorials/supabase-crud) to dig in deeper.",
          "title": "API Key",
          "type": "string"
        },
        "data": {
          "default": {},
          "buildship": { "index": 4, "sensitive": false },
          "pattern": "",
          "description": "The data to be updated in the selected row.\n\n**SAMPLE INPUT:**\nTo update just the `origin` field for the selected row:\n```\n{\n  \"origin\":\"China\"\n}\n```",
          "title": "Data",
          "type": "object",
          "properties": {}
        },
        "supabaseUrl": {
          "default": "",
          "buildship": { "index": 1, "sensitive": false },
          "pattern": "",
          "description": "The API URL of the Supabase instance. You can get your API URL from the [Supabase Dashboard](https://supabase.com/dashboard/projects) under Settings > API.",
          "type": "string",
          "title": "API URL"
        },
        "table": {
          "default": "",
          "buildship": { "index": 2, "sensitive": false },
          "pattern": "",
          "description": "Your Supabase table name",
          "title": "Table Name",
          "type": "string"
        }
      }
    },
    "version": "1.1.1",
    "script": "import fetch from 'node-fetch';\n\nexport default async function updateSupabaseRealtimeTableRow({\n    table,\n    supabaseUrl,\n    supabaseKey,\n    filter,\n    data\n}: NodeInputs) : NodeOutput  {\n    const url = `${supabaseUrl}/rest/v1/${table}?${encodeURI(filter)}`;\n\n    const headers = {\n        'apikey': supabaseKey,\n        'Content-Type': 'application/json',\n        'Prefer': 'return=representation',\n    };\n\n    const requestOptions = {\n        method: 'PATCH',\n        headers,\n        body: JSON.stringify(data)\n    };\n\n    try {\n        const response = await fetch(url, requestOptions);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const responseData = await response.json(); // Parse response data\n\n        return responseData; // Return the parsed response data\n    } catch (error) {\n        console.error('Error:', error.message);\n        return null; // Return null or handle the error as needed\n    }\n}\n\n",
    "deployedAt": { "_seconds": 1717467670, "_nanoseconds": 72000000 },
    "failCount": 77,
    "usageCounter": 1048
  }
]
